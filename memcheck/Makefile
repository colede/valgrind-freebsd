# Makefile.in generated by automake 1.12.3 from Makefile.am.
# memcheck/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2012 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# This file should be included (directly or indirectly) by every
# Makefile.am that builds programs.  And also the top-level Makefile.am.

#----------------------------------------------------------------------------
# Global stuff
#----------------------------------------------------------------------------



am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/valgrind
pkgincludedir = $(includedir)/valgrind
pkglibdir = $(libdir)/valgrind
pkglibexecdir = $(libexecdir)/valgrind
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = amd64-unknown-freebsd9.1
host_triplet = amd64-unknown-freebsd9.1
DIST_COMMON = $(noinst_HEADERS) $(pkginclude_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.all.am $(top_srcdir)/Makefile.tool.am \
	$(top_srcdir)/depcomp

# The Android toolchain includes all kinds of stdlib helpers present in
# bionic which is bad because we are not linking with it and the Android
# linker will panic.
#am__append_1 = -nostdlib

# On Android we must ask for non-executable stack, not sure why.
##am__append_2 = -Wl,-z,noexecstack
noinst_PROGRAMS = memcheck-amd64-freebsd$(EXEEXT) \
	$(am__EXEEXT_1) \
	vgpreload_memcheck-amd64-freebsd.so$(EXEEXT) \
	$(am__EXEEXT_2)
am__append_3 = memcheck-x86-freebsd
#memcheck_x86_freebsd_DEPENDENCIES =
am__append_4 = vgpreload_memcheck-x86-freebsd.so
subdir = memcheck
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = memcheck-x86-freebsd$(EXEEXT)
am__EXEEXT_2 = vgpreload_memcheck-x86-freebsd.so$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am__objects_1 =  \
	memcheck_amd64_freebsd-mc_leakcheck.$(OBJEXT) \
	memcheck_amd64_freebsd-mc_malloc_wrappers.$(OBJEXT) \
	memcheck_amd64_freebsd-mc_main.$(OBJEXT) \
	memcheck_amd64_freebsd-mc_translate.$(OBJEXT) \
	memcheck_amd64_freebsd-mc_machine.$(OBJEXT) \
	memcheck_amd64_freebsd-mc_errors.$(OBJEXT)
am_memcheck_amd64_freebsd_OBJECTS = $(am__objects_1)
memcheck_amd64_freebsd_OBJECTS =  \
	$(am_memcheck_amd64_freebsd_OBJECTS)
am__memcheck_x86_freebsd_SOURCES_DIST =  \
	mc_leakcheck.c mc_malloc_wrappers.c mc_main.c mc_translate.c \
	mc_machine.c mc_errors.c
am__objects_2 =  \
	memcheck_x86_freebsd-mc_leakcheck.$(OBJEXT) \
	memcheck_x86_freebsd-mc_malloc_wrappers.$(OBJEXT) \
	memcheck_x86_freebsd-mc_main.$(OBJEXT) \
	memcheck_x86_freebsd-mc_translate.$(OBJEXT) \
	memcheck_x86_freebsd-mc_machine.$(OBJEXT) \
	memcheck_x86_freebsd-mc_errors.$(OBJEXT)
am_memcheck_x86_freebsd_OBJECTS =  \
	$(am__objects_2)
memcheck_x86_freebsd_OBJECTS =  \
	$(am_memcheck_x86_freebsd_OBJECTS)
am__objects_3 = vgpreload_memcheck_amd64_freebsd_so-mc_replace_strmem.$(OBJEXT)
am_vgpreload_memcheck_amd64_freebsd_so_OBJECTS =  \
	$(am__objects_3)
vgpreload_memcheck_amd64_freebsd_so_OBJECTS = $(am_vgpreload_memcheck_amd64_freebsd_so_OBJECTS)
vgpreload_memcheck_amd64_freebsd_so_LDADD = $(LDADD)
vgpreload_memcheck_amd64_freebsd_so_LINK = $(CCLD) \
	$(vgpreload_memcheck_amd64_freebsd_so_CFLAGS) \
	$(CFLAGS) \
	$(vgpreload_memcheck_amd64_freebsd_so_LDFLAGS) \
	$(LDFLAGS) -o $@
am__vgpreload_memcheck_x86_freebsd_so_SOURCES_DIST =  \
	mc_replace_strmem.c
am__objects_4 = vgpreload_memcheck_x86_freebsd_so-mc_replace_strmem.$(OBJEXT)
am_vgpreload_memcheck_x86_freebsd_so_OBJECTS =  \
	$(am__objects_4)
vgpreload_memcheck_x86_freebsd_so_OBJECTS = $(am_vgpreload_memcheck_x86_freebsd_so_OBJECTS)
vgpreload_memcheck_x86_freebsd_so_LDADD = $(LDADD)
vgpreload_memcheck_x86_freebsd_so_LINK = $(CCLD) \
	$(vgpreload_memcheck_x86_freebsd_so_CFLAGS) \
	$(CFLAGS) \
	$(vgpreload_memcheck_x86_freebsd_so_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(memcheck_amd64_freebsd_SOURCES) \
	$(memcheck_x86_freebsd_SOURCES) \
	$(vgpreload_memcheck_amd64_freebsd_so_SOURCES) \
	$(vgpreload_memcheck_x86_freebsd_so_SOURCES)
DIST_SOURCES = $(memcheck_amd64_freebsd_SOURCES) \
	$(am__memcheck_x86_freebsd_SOURCES_DIST) \
	$(vgpreload_memcheck_amd64_freebsd_so_SOURCES) \
	$(am__vgpreload_memcheck_x86_freebsd_so_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(pkgincludedir)"
HEADERS = $(noinst_HEADERS) $(pkginclude_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/jon/software/valgrind-freebsd/missing --run aclocal-1.12
AMTAR = $${TAR-tar}
AR = /usr/bin/ar
AUTOCONF = ${SHELL} /home/jon/software/valgrind-freebsd/missing --run autoconf
AUTOHEADER = ${SHELL} /home/jon/software/valgrind-freebsd/missing --run autoheader
AUTOMAKE = ${SHELL} /home/jon/software/valgrind-freebsd/missing --run automake-1.12
AWK = nawk
BOOST_CFLAGS = 
BOOST_LIBS = 
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -Wno-long-long 
CCDEPMODE = depmode=gcc3
CFLAGS = -Wno-long-long  -Wno-pointer-sign -fno-stack-protector
CFLAGS_MPI = 
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wno-long-long  -Wno-pointer-sign -fno-stack-protector
CYGPATH_W = echo
DEFAULT_SUPP = exp-sgcheck.supp xfree-3.supp xfree-4.supp freebsd.supp 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DIFF = diff -u
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FLAG_FNO_STACK_PROTECTOR = -fno-stack-protector
FLAG_M32 = -B/usr/lib32 -m32
FLAG_M64 = -m64
FLAG_MMMX = -mmmx
FLAG_MSSE = -msse
FLAG_NO_BUILD_ID = 
FLAG_UNLIMITED_INLINE_UNIT_GROWTH = --param inline-unit-growth=900
FLAG_W_EXTRA = -Wextra
FLAG_W_NO_EMPTY_BODY = 
FLAG_W_NO_FORMAT_ZERO_LENGTH = -Wno-format-zero-length
FLAG_W_NO_NONNULL = -Wno-nonnull
FLAG_W_NO_OVERFLOW = -Wno-overflow
FLAG_W_NO_UNINITIALIZED = -Wno-uninitialized
GDB = /usr/bin/gdb
GLIBC_VERSION = freebsd
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LDFLAGS_MPI = 
LIBOBJS = 
LIBS = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/jon/software/valgrind-freebsd/missing --run makeinfo
MKDIR_P = .././install-sh -c -d
MPI_CC = mpicc
OBJEXT = o
PACKAGE = valgrind
PACKAGE_BUGREPORT = valgrind-users@lists.sourceforge.net
PACKAGE_NAME = Valgrind
PACKAGE_STRING = Valgrind 3.8.0
PACKAGE_TARNAME = valgrind
PACKAGE_URL = 
PACKAGE_VERSION = 3.8.0
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PREFERRED_STACK_BOUNDARY = 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VALT_LOAD_ADDRESS_PRI = 0x38000000
VALT_LOAD_ADDRESS_SEC = 0x38000000
VERSION = 3.8.0
VGCONF_ARCH_PRI = amd64
VGCONF_ARCH_SEC = x86
VGCONF_OS = freebsd
VGCONF_PLATFORM_PRI_CAPS = AMD64_FREEBSD
VGCONF_PLATFORM_SEC_CAPS = X86_FREEBSD
VGCONF_PLATVARIANT = vanilla
abs_builddir = /home/jon/software/valgrind-freebsd/memcheck
abs_srcdir = /home/jon/software/valgrind-freebsd/memcheck
abs_top_builddir = /home/jon/software/valgrind-freebsd
abs_top_srcdir = /home/jon/software/valgrind-freebsd
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = amd64-unknown-freebsd9.1
build_alias = 
build_cpu = amd64
build_os = freebsd9.1
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = amd64-unknown-freebsd9.1
host_alias = 
host_cpu = amd64
host_os = freebsd9.1
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/jon/software/valgrind-freebsd/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
SUBDIRS = . tests
inplacedir = $(top_builddir)/.in_place

#----------------------------------------------------------------------------
# Flags
#----------------------------------------------------------------------------

# Baseline flags for all compilations.  Aim here is to maximise
# performance and get whatever useful warnings we can out of gcc.
# -fno-builtin is important for defeating LLVM's idiom recognition
# that somehow causes VG_(memset) to get into infinite recursion.
AM_CFLAGS_BASE = \
	-O2 -g \
	-Wall \
	-Wmissing-prototypes \
	-Wshadow \
	-Wpointer-arith \
	-Wstrict-prototypes \
	-Wmissing-declarations \
	-Wno-format-zero-length \
	-fno-strict-aliasing \
	-fno-builtin

AM_CFLAGS_PIC = -fpic -O -g -fno-omit-frame-pointer -fno-strict-aliasing \
		-fno-builtin


# These flags are used for building the preload shared objects.
# The aim is to give reasonable performance but also to have good
# stack traces, since users often see stack traces extending 
# into (and through) the preloads.
#AM_CFLAGS_PIC = -dynamic -O -g -fno-omit-frame-pointer -fno-strict-aliasing \
#		-mno-dynamic-no-pic -fpic -fPIC \
#		-fno-builtin


# Flags for specific targets.
#
# Nb: the AM_CPPFLAGS_* values are suitable for building tools and auxprogs.
# For building the core, coregrind/Makefile.am files add some extra things.
AM_CPPFLAGS_AMD64_FREEBSD = \
	-I$(top_srcdir) \
	-I$(top_srcdir)/include \
	-I$(top_srcdir)/VEX/pub \
	-DVGA_amd64=1 \
	-DVGO_freebsd=1 \
	-DVGP_amd64_freebsd=1 \
	-DVGPV_amd64_freebsd_vanilla=1

AM_CPPFLAGS_X86_FREEBSD = \
	-I$(top_srcdir) \
	-I$(top_srcdir)/include \
	-I$(top_srcdir)/VEX/pub \
	-DVGA_x86=1 \
	-DVGO_freebsd=1 \
	-DVGP_x86_freebsd=1 \
	-DVGPV_x86_freebsd_vanilla=1

AM_FLAG_M3264_X86_LINUX = -B/usr/lib32 -m32
AM_CFLAGS_X86_LINUX = -B/usr/lib32 -m32   \
				$(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CCASFLAGS_X86_LINUX = -B/usr/lib32 -m32 -g
AM_FLAG_M3264_AMD64_LINUX = -m64
AM_CFLAGS_AMD64_LINUX = -m64  \
				$(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CCASFLAGS_AMD64_LINUX = -m64 -g
AM_FLAG_M3264_PPC32_LINUX = -B/usr/lib32 -m32
AM_CFLAGS_PPC32_LINUX = -B/usr/lib32 -m32 $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC32_LINUX = -B/usr/lib32 -m32 -g
AM_FLAG_M3264_PPC64_LINUX = -m64
AM_CFLAGS_PPC64_LINUX = -m64 $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC64_LINUX = -m64 -g
AM_FLAG_M3264_X86_FREEBSD = -B/usr/lib32 -m32
AM_CFLAGS_X86_FREEBSD = -B/usr/lib32 -m32  \
			      $(AM_CFLAGS_BASE)

AM_CCASFLAGS_X86_FREEBSD = $(AM_CPPFLAGS_X86_FREEBSD) -B/usr/lib32 -m32 -g
AM_FLAG_M3264_ARM_LINUX = -B/usr/lib32 -m32
AM_CFLAGS_ARM_LINUX = -B/usr/lib32 -m32  \
			 	$(AM_CFLAGS_BASE) -marm -mcpu=cortex-a8

AM_CCASFLAGS_ARM_LINUX = -B/usr/lib32 -m32 \
				-marm -mcpu=cortex-a8 -g

AM_FLAG_M3264_AMD64_FREEBSD = -m64
AM_CFLAGS_AMD64_FREEBSD = -m64 -fomit-frame-pointer \
			       $(AM_CFLAGS_BASE)

AM_CCASFLAGS_AMD64_FREEBSD = $(AM_CPPFLAGS_AMD64_FREEBSD) -m64 -g
AM_FLAG_M3264_X86_DARWIN = -arch i386
AM_CFLAGS_X86_DARWIN = $(WERROR) -arch i386 $(AM_CFLAGS_BASE) \
				-mmacosx-version-min=10.5 \
				-fno-stack-protector -fno-pic -fno-PIC

AM_CCASFLAGS_X86_DARWIN = -arch i386 -g
AM_FLAG_M3264_AMD64_DARWIN = -arch x86_64
AM_CFLAGS_AMD64_DARWIN = $(WERROR) -arch x86_64 $(AM_CFLAGS_BASE) \
			    -mmacosx-version-min=10.5 -fno-stack-protector

AM_CCASFLAGS_AMD64_DARWIN = -arch x86_64 -g
AM_FLAG_M3264_S390X_LINUX = -m64
AM_CFLAGS_S390X_LINUX = -m64 $(AM_CFLAGS_BASE) -fomit-frame-pointer
AM_CCASFLAGS_S390X_LINUX = -m64 -g -mzarch -march=z900
AM_FLAG_M3264_MIPS32_LINUX = -B/usr/lib32 -m32
AM_CFLAGS_MIPS32_LINUX = -B/usr/lib32 -m32 $(AM_CFLAGS_BASE) -mips32
AM_CCASFLAGS_MIPS32_LINUX = -B/usr/lib32 -m32 -mips32 -g

# Flags for the primary target.  These must be used to build the
# regtests and performance tests.  In fact, these must be used to
# build anything which is built only once on a dual-arch build.
#
AM_FLAG_M3264_PRI = $(AM_FLAG_M3264_AMD64_FREEBSD)
AM_CPPFLAGS_PRI = $(AM_CPPFLAGS_AMD64_FREEBSD)
AM_CFLAGS_PRI = $(AM_CFLAGS_AMD64_FREEBSD)
AM_CCASFLAGS_PRI = $(AM_CCASFLAGS_AMD64_FREEBSD)
#AM_FLAG_M3264_SEC = 
AM_FLAG_M3264_SEC = $(AM_FLAG_M3264_X86_FREEBSD)

# Baseline link flags for making vgpreload shared objects.
#
PRELOAD_LDFLAGS_COMMON_LINUX = -nodefaultlibs -shared \
	-Wl,-z,interpose,-z,initfirst $(am__append_1)
PRELOAD_LDFLAGS_COMMON_FREEBSD = -nodefaultlibs -shared -Wl,-z,interpose,-z,initfirst
PRELOAD_LDFLAGS_COMMON_DARWIN = -dynamic -dynamiclib -all_load
PRELOAD_LDFLAGS_X86_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -B/usr/lib32 -m32
PRELOAD_LDFLAGS_AMD64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_PPC32_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -B/usr/lib32 -m32
PRELOAD_LDFLAGS_PPC64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_X86_FREEBSD = $(PRELOAD_LDFLAGS_COMMON_FREEBSD) -B/usr/lib32 -m32
PRELOAD_LDFLAGS_AMD64_FREEBSD = $(PRELOAD_LDFLAGS_COMMON_FREEBSD) -m64
PRELOAD_LDFLAGS_ARM_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -B/usr/lib32 -m32
PRELOAD_LDFLAGS_X86_DARWIN = $(PRELOAD_LDFLAGS_COMMON_DARWIN) -arch i386
PRELOAD_LDFLAGS_AMD64_DARWIN = $(PRELOAD_LDFLAGS_COMMON_DARWIN) -arch x86_64
PRELOAD_LDFLAGS_S390X_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_MIPS32_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -B/usr/lib32 -m32

#----------------------------------------------------------------------------
# <tool>-<platform> stuff
#----------------------------------------------------------------------------
TOOL_DEPENDENCIES_AMD64_FREEBSD = \
	$(top_builddir)/coregrind/libcoregrind-amd64-freebsd.a \
	$(top_builddir)/VEX/libvex-amd64-freebsd.a

TOOL_DEPENDENCIES_X86_FREEBSD = \
	$(top_builddir)/coregrind/libcoregrind-x86-freebsd.a \
	$(top_builddir)/VEX/libvex-x86-freebsd.a

TOOL_LDADD_COMMON = -lgcc
TOOL_LDADD_AMD64_FREEBSD = \
	$(TOOL_DEPENDENCIES_AMD64_FREEBSD) $(TOOL_LDADD_COMMON)

TOOL_LDADD_X86_FREEBSD = \
	$(TOOL_DEPENDENCIES_X86_FREEBSD) $(TOOL_LDADD_COMMON)


# -Wl,--build-id=none is needed when linking tools on Linux. Without this
# flag newer ld versions (2.20 and later) create a .note.gnu.build-id at the
# default text segment address, which of course means the resulting executable
# is unusable. So we have to tell ld not to generate that, with --build-id=none.
TOOL_LDFLAGS_COMMON_LINUX = \
	-static -nodefaultlibs -nostartfiles -u _start 

TOOL_LDFLAGS_COMMON_DARWIN = \
	-nodefaultlibs -nostartfiles -Wl,-u,__start -Wl,-e,__start

TOOL_LDFLAGS_COMMON_FREEBSD = -static \
	-nodefaultlibs -nostartfiles -u _start 

TOOL_LDFLAGS_X86_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) -B/usr/lib32 -m32

TOOL_LDFLAGS_X86_FREEBSD = \
	$(TOOL_LDFLAGS_COMMON_FREEBSD) -B/usr/lib32 -m32

TOOL_LDFLAGS_AMD64_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) -m64

TOOL_LDFLAGS_AMD64_FREEBSD = \
	$(TOOL_LDFLAGS_COMMON_FREEBSD) -m64

TOOL_LDFLAGS_PPC32_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) -B/usr/lib32 -m32

TOOL_LDFLAGS_PPC64_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) -m64

TOOL_LDFLAGS_ARM_LINUX = $(TOOL_LDFLAGS_COMMON_LINUX) -B/usr/lib32 -m32 \
	$(am__append_2)
TOOL_LDFLAGS_S390X_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) -m64

TOOL_LDFLAGS_X86_DARWIN = \
	$(TOOL_LDFLAGS_COMMON_DARWIN) -arch i386

TOOL_LDFLAGS_AMD64_DARWIN = \
	$(TOOL_LDFLAGS_COMMON_DARWIN) -arch x86_64


# MIPS Linux default start symbol is __start, not _start like on x86 or amd
TOOL_LDFLAGS_MIPS32_LINUX = \
	-static -nodefaultlibs -nostartfiles -u __start  \
	-B/usr/lib32 -m32


# NB for 64-bit darwin.  We may want to set -Wl,-pagezero_size to
# something smaller than the default of 4G, so as to facilitate
# loading clients who are also linked thusly (currently m_ume.c
# will fail to load them).  Although such setting is probably
# better done in link_tool_exe.c.
#
#	-Wl,-pagezero_size,0x100000000

#----------------------------------------------------------------------------
# vgpreload_<tool>-<platform>.a stuff
#----------------------------------------------------------------------------
LIBREPLACEMALLOC_X86_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-x86-linux.a

LIBREPLACEMALLOC_AMD64_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-amd64-linux.a

LIBREPLACEMALLOC_PPC32_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-ppc32-linux.a

LIBREPLACEMALLOC_PPC64_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-ppc64-linux.a

LIBREPLACEMALLOC_X86_FREEBSD = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-x86-freebsd.a

LIBREPLACEMALLOC_ARM_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-arm-linux.a

LIBREPLACEMALLOC_AMD64_FREEBSD = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-amd64-freebsd.a

LIBREPLACEMALLOC_X86_DARWIN = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-x86-darwin.a

LIBREPLACEMALLOC_AMD64_DARWIN = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-amd64-darwin.a

LIBREPLACEMALLOC_S390X_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-s390x-linux.a

LIBREPLACEMALLOC_MIPS32_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload-mips32-linux.a

LIBREPLACEMALLOC_LDFLAGS_X86_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_X86_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_AMD64_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_AMD64_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_PPC32_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_PPC32_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_PPC64_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_PPC64_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_ARM_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_ARM_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_X86_FREEBSD = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_X86_FREEBSD) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_AMD64_FREEBSD = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_AMD64_FREEBSD) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_X86_DARWIN = \
	$(LIBREPLACEMALLOC_X86_DARWIN)

LIBREPLACEMALLOC_LDFLAGS_AMD64_DARWIN = \
	$(LIBREPLACEMALLOC_AMD64_DARWIN)

LIBREPLACEMALLOC_LDFLAGS_S390X_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_S390X_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_MIPS32_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_MIPS32_LINUX) \
	-Wl,--no-whole-archive

EXTRA_DIST = docs/mc-manual.xml docs/mc-tech-docs.xml

#----------------------------------------------------------------------------
# Headers
#----------------------------------------------------------------------------
pkginclude_HEADERS = \
	memcheck.h

noinst_HEADERS = \
	mc_include.h

MEMCHECK_SOURCES_COMMON = \
	mc_leakcheck.c \
	mc_malloc_wrappers.c \
	mc_main.c \
	mc_translate.c \
	mc_machine.c \
	mc_errors.c

memcheck_amd64_freebsd_SOURCES = \
	$(MEMCHECK_SOURCES_COMMON)

memcheck_amd64_freebsd_CPPFLAGS = \
	$(AM_CPPFLAGS_AMD64_FREEBSD)

memcheck_amd64_freebsd_CFLAGS = \
	$(AM_CFLAGS_AMD64_FREEBSD) -O2

memcheck_amd64_freebsd_DEPENDENCIES = \
	$(TOOL_DEPENDENCIES_AMD64_FREEBSD)

memcheck_amd64_freebsd_LDADD = \
	$(TOOL_LDADD_AMD64_FREEBSD)

memcheck_amd64_freebsd_LDFLAGS = \
	$(TOOL_LDFLAGS_AMD64_FREEBSD)

memcheck_amd64_freebsd_LINK = \
	$(top_builddir)/coregrind/link_tool_exe_freebsd \
	0x38000000 \
	$(LINK) \
	$(memcheck_amd64_freebsd_CFLAGS) \
	$(memcheck_amd64_freebsd_LDFLAGS)

memcheck_x86_freebsd_SOURCES = \
	$(MEMCHECK_SOURCES_COMMON)

memcheck_x86_freebsd_CPPFLAGS = \
	$(AM_CPPFLAGS_X86_FREEBSD)

memcheck_x86_freebsd_CFLAGS = \
	$(AM_CFLAGS_X86_FREEBSD) -O2

memcheck_x86_freebsd_DEPENDENCIES = \
	$(TOOL_DEPENDENCIES_X86_FREEBSD)

memcheck_x86_freebsd_LDADD = \
	$(TOOL_LDADD_X86_FREEBSD)

memcheck_x86_freebsd_LDFLAGS = \
	$(TOOL_LDFLAGS_X86_FREEBSD)

memcheck_x86_freebsd_LINK = \
	$(top_builddir)/coregrind/link_tool_exe_freebsd \
	0x38000000 \
	$(LINK) \
	$(memcheck_x86_freebsd_CFLAGS) \
	$(memcheck_x86_freebsd_LDFLAGS)

#noinst_DSYMS = $(noinst_PROGRAMS)
VGPRELOAD_MEMCHECK_SOURCES_COMMON = mc_replace_strmem.c
vgpreload_memcheck_amd64_freebsd_so_SOURCES = \
	$(VGPRELOAD_MEMCHECK_SOURCES_COMMON)

vgpreload_memcheck_amd64_freebsd_so_CPPFLAGS = \
	$(AM_CPPFLAGS_AMD64_FREEBSD)

vgpreload_memcheck_amd64_freebsd_so_CFLAGS = \
	$(AM_CFLAGS_AMD64_FREEBSD) $(AM_CFLAGS_PIC) -O2

vgpreload_memcheck_amd64_freebsd_so_DEPENDENCIES = \
	$(LIBREPLACEMALLOC_AMD64_FREEBSD)

vgpreload_memcheck_amd64_freebsd_so_LDFLAGS = \
	$(PRELOAD_LDFLAGS_AMD64_FREEBSD) \
	$(LIBREPLACEMALLOC_LDFLAGS_AMD64_FREEBSD)

vgpreload_memcheck_x86_freebsd_so_SOURCES = \
	$(VGPRELOAD_MEMCHECK_SOURCES_COMMON)

vgpreload_memcheck_x86_freebsd_so_CPPFLAGS = \
	$(AM_CPPFLAGS_X86_FREEBSD)

vgpreload_memcheck_x86_freebsd_so_CFLAGS = \
	$(AM_CFLAGS_X86_FREEBSD) $(AM_CFLAGS_PIC) -O2

vgpreload_memcheck_x86_freebsd_so_DEPENDENCIES = \
	$(LIBREPLACEMALLOC_X86_FREEBSD)

vgpreload_memcheck_x86_freebsd_so_LDFLAGS = \
	$(PRELOAD_LDFLAGS_X86_FREEBSD) \
	$(LIBREPLACEMALLOC_LDFLAGS_X86_FREEBSD)

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/Makefile.tool.am $(top_srcdir)/Makefile.all.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign memcheck/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign memcheck/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Makefile.tool.am $(top_srcdir)/Makefile.all.am:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
memcheck-amd64-freebsd$(EXEEXT): $(memcheck_amd64_freebsd_OBJECTS) $(memcheck_amd64_freebsd_DEPENDENCIES) $(EXTRA_memcheck_amd64_freebsd_DEPENDENCIES) 
	@rm -f memcheck-amd64-freebsd$(EXEEXT)
	$(memcheck_amd64_freebsd_LINK) $(memcheck_amd64_freebsd_OBJECTS) $(memcheck_amd64_freebsd_LDADD) $(LIBS)
memcheck-x86-freebsd$(EXEEXT): $(memcheck_x86_freebsd_OBJECTS) $(memcheck_x86_freebsd_DEPENDENCIES) $(EXTRA_memcheck_x86_freebsd_DEPENDENCIES) 
	@rm -f memcheck-x86-freebsd$(EXEEXT)
	$(memcheck_x86_freebsd_LINK) $(memcheck_x86_freebsd_OBJECTS) $(memcheck_x86_freebsd_LDADD) $(LIBS)
vgpreload_memcheck-amd64-freebsd.so$(EXEEXT): $(vgpreload_memcheck_amd64_freebsd_so_OBJECTS) $(vgpreload_memcheck_amd64_freebsd_so_DEPENDENCIES) $(EXTRA_vgpreload_memcheck_amd64_freebsd_so_DEPENDENCIES) 
	@rm -f vgpreload_memcheck-amd64-freebsd.so$(EXEEXT)
	$(vgpreload_memcheck_amd64_freebsd_so_LINK) $(vgpreload_memcheck_amd64_freebsd_so_OBJECTS) $(vgpreload_memcheck_amd64_freebsd_so_LDADD) $(LIBS)
vgpreload_memcheck-x86-freebsd.so$(EXEEXT): $(vgpreload_memcheck_x86_freebsd_so_OBJECTS) $(vgpreload_memcheck_x86_freebsd_so_DEPENDENCIES) $(EXTRA_vgpreload_memcheck_x86_freebsd_so_DEPENDENCIES) 
	@rm -f vgpreload_memcheck-x86-freebsd.so$(EXEEXT)
	$(vgpreload_memcheck_x86_freebsd_so_LINK) $(vgpreload_memcheck_x86_freebsd_so_OBJECTS) $(vgpreload_memcheck_x86_freebsd_so_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/memcheck_amd64_freebsd-mc_errors.Po
include ./$(DEPDIR)/memcheck_amd64_freebsd-mc_leakcheck.Po
include ./$(DEPDIR)/memcheck_amd64_freebsd-mc_machine.Po
include ./$(DEPDIR)/memcheck_amd64_freebsd-mc_main.Po
include ./$(DEPDIR)/memcheck_amd64_freebsd-mc_malloc_wrappers.Po
include ./$(DEPDIR)/memcheck_amd64_freebsd-mc_translate.Po
include ./$(DEPDIR)/memcheck_x86_freebsd-mc_errors.Po
include ./$(DEPDIR)/memcheck_x86_freebsd-mc_leakcheck.Po
include ./$(DEPDIR)/memcheck_x86_freebsd-mc_machine.Po
include ./$(DEPDIR)/memcheck_x86_freebsd-mc_main.Po
include ./$(DEPDIR)/memcheck_x86_freebsd-mc_malloc_wrappers.Po
include ./$(DEPDIR)/memcheck_x86_freebsd-mc_translate.Po
include ./$(DEPDIR)/vgpreload_memcheck_amd64_freebsd_so-mc_replace_strmem.Po
include ./$(DEPDIR)/vgpreload_memcheck_x86_freebsd_so-mc_replace_strmem.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

memcheck_amd64_freebsd-mc_leakcheck.o: mc_leakcheck.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_freebsd_CFLAGS) $(CFLAGS) -MT memcheck_amd64_freebsd-mc_leakcheck.o -MD -MP -MF $(DEPDIR)/memcheck_amd64_freebsd-mc_leakcheck.Tpo -c -o memcheck_amd64_freebsd-mc_leakcheck.o `test -f 'mc_leakcheck.c' || echo '$(srcdir)/'`mc_leakcheck.c
	$(am__mv) $(DEPDIR)/memcheck_amd64_freebsd-mc_leakcheck.Tpo $(DEPDIR)/memcheck_amd64_freebsd-mc_leakcheck.Po
#	source='mc_leakcheck.c' object='memcheck_amd64_freebsd-mc_leakcheck.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_freebsd_CFLAGS) $(CFLAGS) -c -o memcheck_amd64_freebsd-mc_leakcheck.o `test -f 'mc_leakcheck.c' || echo '$(srcdir)/'`mc_leakcheck.c

memcheck_amd64_freebsd-mc_leakcheck.obj: mc_leakcheck.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_freebsd_CFLAGS) $(CFLAGS) -MT memcheck_amd64_freebsd-mc_leakcheck.obj -MD -MP -MF $(DEPDIR)/memcheck_amd64_freebsd-mc_leakcheck.Tpo -c -o memcheck_amd64_freebsd-mc_leakcheck.obj `if test -f 'mc_leakcheck.c'; then $(CYGPATH_W) 'mc_leakcheck.c'; else $(CYGPATH_W) '$(srcdir)/mc_leakcheck.c'; fi`
	$(am__mv) $(DEPDIR)/memcheck_amd64_freebsd-mc_leakcheck.Tpo $(DEPDIR)/memcheck_amd64_freebsd-mc_leakcheck.Po
#	source='mc_leakcheck.c' object='memcheck_amd64_freebsd-mc_leakcheck.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_freebsd_CFLAGS) $(CFLAGS) -c -o memcheck_amd64_freebsd-mc_leakcheck.obj `if test -f 'mc_leakcheck.c'; then $(CYGPATH_W) 'mc_leakcheck.c'; else $(CYGPATH_W) '$(srcdir)/mc_leakcheck.c'; fi`

memcheck_amd64_freebsd-mc_malloc_wrappers.o: mc_malloc_wrappers.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_freebsd_CFLAGS) $(CFLAGS) -MT memcheck_amd64_freebsd-mc_malloc_wrappers.o -MD -MP -MF $(DEPDIR)/memcheck_amd64_freebsd-mc_malloc_wrappers.Tpo -c -o memcheck_amd64_freebsd-mc_malloc_wrappers.o `test -f 'mc_malloc_wrappers.c' || echo '$(srcdir)/'`mc_malloc_wrappers.c
	$(am__mv) $(DEPDIR)/memcheck_amd64_freebsd-mc_malloc_wrappers.Tpo $(DEPDIR)/memcheck_amd64_freebsd-mc_malloc_wrappers.Po
#	source='mc_malloc_wrappers.c' object='memcheck_amd64_freebsd-mc_malloc_wrappers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_freebsd_CFLAGS) $(CFLAGS) -c -o memcheck_amd64_freebsd-mc_malloc_wrappers.o `test -f 'mc_malloc_wrappers.c' || echo '$(srcdir)/'`mc_malloc_wrappers.c

memcheck_amd64_freebsd-mc_malloc_wrappers.obj: mc_malloc_wrappers.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_freebsd_CFLAGS) $(CFLAGS) -MT memcheck_amd64_freebsd-mc_malloc_wrappers.obj -MD -MP -MF $(DEPDIR)/memcheck_amd64_freebsd-mc_malloc_wrappers.Tpo -c -o memcheck_amd64_freebsd-mc_malloc_wrappers.obj `if test -f 'mc_malloc_wrappers.c'; then $(CYGPATH_W) 'mc_malloc_wrappers.c'; else $(CYGPATH_W) '$(srcdir)/mc_malloc_wrappers.c'; fi`
	$(am__mv) $(DEPDIR)/memcheck_amd64_freebsd-mc_malloc_wrappers.Tpo $(DEPDIR)/memcheck_amd64_freebsd-mc_malloc_wrappers.Po
#	source='mc_malloc_wrappers.c' object='memcheck_amd64_freebsd-mc_malloc_wrappers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_freebsd_CFLAGS) $(CFLAGS) -c -o memcheck_amd64_freebsd-mc_malloc_wrappers.obj `if test -f 'mc_malloc_wrappers.c'; then $(CYGPATH_W) 'mc_malloc_wrappers.c'; else $(CYGPATH_W) '$(srcdir)/mc_malloc_wrappers.c'; fi`

memcheck_amd64_freebsd-mc_main.o: mc_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_freebsd_CFLAGS) $(CFLAGS) -MT memcheck_amd64_freebsd-mc_main.o -MD -MP -MF $(DEPDIR)/memcheck_amd64_freebsd-mc_main.Tpo -c -o memcheck_amd64_freebsd-mc_main.o `test -f 'mc_main.c' || echo '$(srcdir)/'`mc_main.c
	$(am__mv) $(DEPDIR)/memcheck_amd64_freebsd-mc_main.Tpo $(DEPDIR)/memcheck_amd64_freebsd-mc_main.Po
#	source='mc_main.c' object='memcheck_amd64_freebsd-mc_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_freebsd_CFLAGS) $(CFLAGS) -c -o memcheck_amd64_freebsd-mc_main.o `test -f 'mc_main.c' || echo '$(srcdir)/'`mc_main.c

memcheck_amd64_freebsd-mc_main.obj: mc_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_freebsd_CFLAGS) $(CFLAGS) -MT memcheck_amd64_freebsd-mc_main.obj -MD -MP -MF $(DEPDIR)/memcheck_amd64_freebsd-mc_main.Tpo -c -o memcheck_amd64_freebsd-mc_main.obj `if test -f 'mc_main.c'; then $(CYGPATH_W) 'mc_main.c'; else $(CYGPATH_W) '$(srcdir)/mc_main.c'; fi`
	$(am__mv) $(DEPDIR)/memcheck_amd64_freebsd-mc_main.Tpo $(DEPDIR)/memcheck_amd64_freebsd-mc_main.Po
#	source='mc_main.c' object='memcheck_amd64_freebsd-mc_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_freebsd_CFLAGS) $(CFLAGS) -c -o memcheck_amd64_freebsd-mc_main.obj `if test -f 'mc_main.c'; then $(CYGPATH_W) 'mc_main.c'; else $(CYGPATH_W) '$(srcdir)/mc_main.c'; fi`

memcheck_amd64_freebsd-mc_translate.o: mc_translate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_freebsd_CFLAGS) $(CFLAGS) -MT memcheck_amd64_freebsd-mc_translate.o -MD -MP -MF $(DEPDIR)/memcheck_amd64_freebsd-mc_translate.Tpo -c -o memcheck_amd64_freebsd-mc_translate.o `test -f 'mc_translate.c' || echo '$(srcdir)/'`mc_translate.c
	$(am__mv) $(DEPDIR)/memcheck_amd64_freebsd-mc_translate.Tpo $(DEPDIR)/memcheck_amd64_freebsd-mc_translate.Po
#	source='mc_translate.c' object='memcheck_amd64_freebsd-mc_translate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_freebsd_CFLAGS) $(CFLAGS) -c -o memcheck_amd64_freebsd-mc_translate.o `test -f 'mc_translate.c' || echo '$(srcdir)/'`mc_translate.c

memcheck_amd64_freebsd-mc_translate.obj: mc_translate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_freebsd_CFLAGS) $(CFLAGS) -MT memcheck_amd64_freebsd-mc_translate.obj -MD -MP -MF $(DEPDIR)/memcheck_amd64_freebsd-mc_translate.Tpo -c -o memcheck_amd64_freebsd-mc_translate.obj `if test -f 'mc_translate.c'; then $(CYGPATH_W) 'mc_translate.c'; else $(CYGPATH_W) '$(srcdir)/mc_translate.c'; fi`
	$(am__mv) $(DEPDIR)/memcheck_amd64_freebsd-mc_translate.Tpo $(DEPDIR)/memcheck_amd64_freebsd-mc_translate.Po
#	source='mc_translate.c' object='memcheck_amd64_freebsd-mc_translate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_freebsd_CFLAGS) $(CFLAGS) -c -o memcheck_amd64_freebsd-mc_translate.obj `if test -f 'mc_translate.c'; then $(CYGPATH_W) 'mc_translate.c'; else $(CYGPATH_W) '$(srcdir)/mc_translate.c'; fi`

memcheck_amd64_freebsd-mc_machine.o: mc_machine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_freebsd_CFLAGS) $(CFLAGS) -MT memcheck_amd64_freebsd-mc_machine.o -MD -MP -MF $(DEPDIR)/memcheck_amd64_freebsd-mc_machine.Tpo -c -o memcheck_amd64_freebsd-mc_machine.o `test -f 'mc_machine.c' || echo '$(srcdir)/'`mc_machine.c
	$(am__mv) $(DEPDIR)/memcheck_amd64_freebsd-mc_machine.Tpo $(DEPDIR)/memcheck_amd64_freebsd-mc_machine.Po
#	source='mc_machine.c' object='memcheck_amd64_freebsd-mc_machine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_freebsd_CFLAGS) $(CFLAGS) -c -o memcheck_amd64_freebsd-mc_machine.o `test -f 'mc_machine.c' || echo '$(srcdir)/'`mc_machine.c

memcheck_amd64_freebsd-mc_machine.obj: mc_machine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_freebsd_CFLAGS) $(CFLAGS) -MT memcheck_amd64_freebsd-mc_machine.obj -MD -MP -MF $(DEPDIR)/memcheck_amd64_freebsd-mc_machine.Tpo -c -o memcheck_amd64_freebsd-mc_machine.obj `if test -f 'mc_machine.c'; then $(CYGPATH_W) 'mc_machine.c'; else $(CYGPATH_W) '$(srcdir)/mc_machine.c'; fi`
	$(am__mv) $(DEPDIR)/memcheck_amd64_freebsd-mc_machine.Tpo $(DEPDIR)/memcheck_amd64_freebsd-mc_machine.Po
#	source='mc_machine.c' object='memcheck_amd64_freebsd-mc_machine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_freebsd_CFLAGS) $(CFLAGS) -c -o memcheck_amd64_freebsd-mc_machine.obj `if test -f 'mc_machine.c'; then $(CYGPATH_W) 'mc_machine.c'; else $(CYGPATH_W) '$(srcdir)/mc_machine.c'; fi`

memcheck_amd64_freebsd-mc_errors.o: mc_errors.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_freebsd_CFLAGS) $(CFLAGS) -MT memcheck_amd64_freebsd-mc_errors.o -MD -MP -MF $(DEPDIR)/memcheck_amd64_freebsd-mc_errors.Tpo -c -o memcheck_amd64_freebsd-mc_errors.o `test -f 'mc_errors.c' || echo '$(srcdir)/'`mc_errors.c
	$(am__mv) $(DEPDIR)/memcheck_amd64_freebsd-mc_errors.Tpo $(DEPDIR)/memcheck_amd64_freebsd-mc_errors.Po
#	source='mc_errors.c' object='memcheck_amd64_freebsd-mc_errors.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_freebsd_CFLAGS) $(CFLAGS) -c -o memcheck_amd64_freebsd-mc_errors.o `test -f 'mc_errors.c' || echo '$(srcdir)/'`mc_errors.c

memcheck_amd64_freebsd-mc_errors.obj: mc_errors.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_freebsd_CFLAGS) $(CFLAGS) -MT memcheck_amd64_freebsd-mc_errors.obj -MD -MP -MF $(DEPDIR)/memcheck_amd64_freebsd-mc_errors.Tpo -c -o memcheck_amd64_freebsd-mc_errors.obj `if test -f 'mc_errors.c'; then $(CYGPATH_W) 'mc_errors.c'; else $(CYGPATH_W) '$(srcdir)/mc_errors.c'; fi`
	$(am__mv) $(DEPDIR)/memcheck_amd64_freebsd-mc_errors.Tpo $(DEPDIR)/memcheck_amd64_freebsd-mc_errors.Po
#	source='mc_errors.c' object='memcheck_amd64_freebsd-mc_errors.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_amd64_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_amd64_freebsd_CFLAGS) $(CFLAGS) -c -o memcheck_amd64_freebsd-mc_errors.obj `if test -f 'mc_errors.c'; then $(CYGPATH_W) 'mc_errors.c'; else $(CYGPATH_W) '$(srcdir)/mc_errors.c'; fi`

memcheck_x86_freebsd-mc_leakcheck.o: mc_leakcheck.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_freebsd_CFLAGS) $(CFLAGS) -MT memcheck_x86_freebsd-mc_leakcheck.o -MD -MP -MF $(DEPDIR)/memcheck_x86_freebsd-mc_leakcheck.Tpo -c -o memcheck_x86_freebsd-mc_leakcheck.o `test -f 'mc_leakcheck.c' || echo '$(srcdir)/'`mc_leakcheck.c
	$(am__mv) $(DEPDIR)/memcheck_x86_freebsd-mc_leakcheck.Tpo $(DEPDIR)/memcheck_x86_freebsd-mc_leakcheck.Po
#	source='mc_leakcheck.c' object='memcheck_x86_freebsd-mc_leakcheck.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_freebsd_CFLAGS) $(CFLAGS) -c -o memcheck_x86_freebsd-mc_leakcheck.o `test -f 'mc_leakcheck.c' || echo '$(srcdir)/'`mc_leakcheck.c

memcheck_x86_freebsd-mc_leakcheck.obj: mc_leakcheck.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_freebsd_CFLAGS) $(CFLAGS) -MT memcheck_x86_freebsd-mc_leakcheck.obj -MD -MP -MF $(DEPDIR)/memcheck_x86_freebsd-mc_leakcheck.Tpo -c -o memcheck_x86_freebsd-mc_leakcheck.obj `if test -f 'mc_leakcheck.c'; then $(CYGPATH_W) 'mc_leakcheck.c'; else $(CYGPATH_W) '$(srcdir)/mc_leakcheck.c'; fi`
	$(am__mv) $(DEPDIR)/memcheck_x86_freebsd-mc_leakcheck.Tpo $(DEPDIR)/memcheck_x86_freebsd-mc_leakcheck.Po
#	source='mc_leakcheck.c' object='memcheck_x86_freebsd-mc_leakcheck.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_freebsd_CFLAGS) $(CFLAGS) -c -o memcheck_x86_freebsd-mc_leakcheck.obj `if test -f 'mc_leakcheck.c'; then $(CYGPATH_W) 'mc_leakcheck.c'; else $(CYGPATH_W) '$(srcdir)/mc_leakcheck.c'; fi`

memcheck_x86_freebsd-mc_malloc_wrappers.o: mc_malloc_wrappers.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_freebsd_CFLAGS) $(CFLAGS) -MT memcheck_x86_freebsd-mc_malloc_wrappers.o -MD -MP -MF $(DEPDIR)/memcheck_x86_freebsd-mc_malloc_wrappers.Tpo -c -o memcheck_x86_freebsd-mc_malloc_wrappers.o `test -f 'mc_malloc_wrappers.c' || echo '$(srcdir)/'`mc_malloc_wrappers.c
	$(am__mv) $(DEPDIR)/memcheck_x86_freebsd-mc_malloc_wrappers.Tpo $(DEPDIR)/memcheck_x86_freebsd-mc_malloc_wrappers.Po
#	source='mc_malloc_wrappers.c' object='memcheck_x86_freebsd-mc_malloc_wrappers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_freebsd_CFLAGS) $(CFLAGS) -c -o memcheck_x86_freebsd-mc_malloc_wrappers.o `test -f 'mc_malloc_wrappers.c' || echo '$(srcdir)/'`mc_malloc_wrappers.c

memcheck_x86_freebsd-mc_malloc_wrappers.obj: mc_malloc_wrappers.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_freebsd_CFLAGS) $(CFLAGS) -MT memcheck_x86_freebsd-mc_malloc_wrappers.obj -MD -MP -MF $(DEPDIR)/memcheck_x86_freebsd-mc_malloc_wrappers.Tpo -c -o memcheck_x86_freebsd-mc_malloc_wrappers.obj `if test -f 'mc_malloc_wrappers.c'; then $(CYGPATH_W) 'mc_malloc_wrappers.c'; else $(CYGPATH_W) '$(srcdir)/mc_malloc_wrappers.c'; fi`
	$(am__mv) $(DEPDIR)/memcheck_x86_freebsd-mc_malloc_wrappers.Tpo $(DEPDIR)/memcheck_x86_freebsd-mc_malloc_wrappers.Po
#	source='mc_malloc_wrappers.c' object='memcheck_x86_freebsd-mc_malloc_wrappers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_freebsd_CFLAGS) $(CFLAGS) -c -o memcheck_x86_freebsd-mc_malloc_wrappers.obj `if test -f 'mc_malloc_wrappers.c'; then $(CYGPATH_W) 'mc_malloc_wrappers.c'; else $(CYGPATH_W) '$(srcdir)/mc_malloc_wrappers.c'; fi`

memcheck_x86_freebsd-mc_main.o: mc_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_freebsd_CFLAGS) $(CFLAGS) -MT memcheck_x86_freebsd-mc_main.o -MD -MP -MF $(DEPDIR)/memcheck_x86_freebsd-mc_main.Tpo -c -o memcheck_x86_freebsd-mc_main.o `test -f 'mc_main.c' || echo '$(srcdir)/'`mc_main.c
	$(am__mv) $(DEPDIR)/memcheck_x86_freebsd-mc_main.Tpo $(DEPDIR)/memcheck_x86_freebsd-mc_main.Po
#	source='mc_main.c' object='memcheck_x86_freebsd-mc_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_freebsd_CFLAGS) $(CFLAGS) -c -o memcheck_x86_freebsd-mc_main.o `test -f 'mc_main.c' || echo '$(srcdir)/'`mc_main.c

memcheck_x86_freebsd-mc_main.obj: mc_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_freebsd_CFLAGS) $(CFLAGS) -MT memcheck_x86_freebsd-mc_main.obj -MD -MP -MF $(DEPDIR)/memcheck_x86_freebsd-mc_main.Tpo -c -o memcheck_x86_freebsd-mc_main.obj `if test -f 'mc_main.c'; then $(CYGPATH_W) 'mc_main.c'; else $(CYGPATH_W) '$(srcdir)/mc_main.c'; fi`
	$(am__mv) $(DEPDIR)/memcheck_x86_freebsd-mc_main.Tpo $(DEPDIR)/memcheck_x86_freebsd-mc_main.Po
#	source='mc_main.c' object='memcheck_x86_freebsd-mc_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_freebsd_CFLAGS) $(CFLAGS) -c -o memcheck_x86_freebsd-mc_main.obj `if test -f 'mc_main.c'; then $(CYGPATH_W) 'mc_main.c'; else $(CYGPATH_W) '$(srcdir)/mc_main.c'; fi`

memcheck_x86_freebsd-mc_translate.o: mc_translate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_freebsd_CFLAGS) $(CFLAGS) -MT memcheck_x86_freebsd-mc_translate.o -MD -MP -MF $(DEPDIR)/memcheck_x86_freebsd-mc_translate.Tpo -c -o memcheck_x86_freebsd-mc_translate.o `test -f 'mc_translate.c' || echo '$(srcdir)/'`mc_translate.c
	$(am__mv) $(DEPDIR)/memcheck_x86_freebsd-mc_translate.Tpo $(DEPDIR)/memcheck_x86_freebsd-mc_translate.Po
#	source='mc_translate.c' object='memcheck_x86_freebsd-mc_translate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_freebsd_CFLAGS) $(CFLAGS) -c -o memcheck_x86_freebsd-mc_translate.o `test -f 'mc_translate.c' || echo '$(srcdir)/'`mc_translate.c

memcheck_x86_freebsd-mc_translate.obj: mc_translate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_freebsd_CFLAGS) $(CFLAGS) -MT memcheck_x86_freebsd-mc_translate.obj -MD -MP -MF $(DEPDIR)/memcheck_x86_freebsd-mc_translate.Tpo -c -o memcheck_x86_freebsd-mc_translate.obj `if test -f 'mc_translate.c'; then $(CYGPATH_W) 'mc_translate.c'; else $(CYGPATH_W) '$(srcdir)/mc_translate.c'; fi`
	$(am__mv) $(DEPDIR)/memcheck_x86_freebsd-mc_translate.Tpo $(DEPDIR)/memcheck_x86_freebsd-mc_translate.Po
#	source='mc_translate.c' object='memcheck_x86_freebsd-mc_translate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_freebsd_CFLAGS) $(CFLAGS) -c -o memcheck_x86_freebsd-mc_translate.obj `if test -f 'mc_translate.c'; then $(CYGPATH_W) 'mc_translate.c'; else $(CYGPATH_W) '$(srcdir)/mc_translate.c'; fi`

memcheck_x86_freebsd-mc_machine.o: mc_machine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_freebsd_CFLAGS) $(CFLAGS) -MT memcheck_x86_freebsd-mc_machine.o -MD -MP -MF $(DEPDIR)/memcheck_x86_freebsd-mc_machine.Tpo -c -o memcheck_x86_freebsd-mc_machine.o `test -f 'mc_machine.c' || echo '$(srcdir)/'`mc_machine.c
	$(am__mv) $(DEPDIR)/memcheck_x86_freebsd-mc_machine.Tpo $(DEPDIR)/memcheck_x86_freebsd-mc_machine.Po
#	source='mc_machine.c' object='memcheck_x86_freebsd-mc_machine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_freebsd_CFLAGS) $(CFLAGS) -c -o memcheck_x86_freebsd-mc_machine.o `test -f 'mc_machine.c' || echo '$(srcdir)/'`mc_machine.c

memcheck_x86_freebsd-mc_machine.obj: mc_machine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_freebsd_CFLAGS) $(CFLAGS) -MT memcheck_x86_freebsd-mc_machine.obj -MD -MP -MF $(DEPDIR)/memcheck_x86_freebsd-mc_machine.Tpo -c -o memcheck_x86_freebsd-mc_machine.obj `if test -f 'mc_machine.c'; then $(CYGPATH_W) 'mc_machine.c'; else $(CYGPATH_W) '$(srcdir)/mc_machine.c'; fi`
	$(am__mv) $(DEPDIR)/memcheck_x86_freebsd-mc_machine.Tpo $(DEPDIR)/memcheck_x86_freebsd-mc_machine.Po
#	source='mc_machine.c' object='memcheck_x86_freebsd-mc_machine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_freebsd_CFLAGS) $(CFLAGS) -c -o memcheck_x86_freebsd-mc_machine.obj `if test -f 'mc_machine.c'; then $(CYGPATH_W) 'mc_machine.c'; else $(CYGPATH_W) '$(srcdir)/mc_machine.c'; fi`

memcheck_x86_freebsd-mc_errors.o: mc_errors.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_freebsd_CFLAGS) $(CFLAGS) -MT memcheck_x86_freebsd-mc_errors.o -MD -MP -MF $(DEPDIR)/memcheck_x86_freebsd-mc_errors.Tpo -c -o memcheck_x86_freebsd-mc_errors.o `test -f 'mc_errors.c' || echo '$(srcdir)/'`mc_errors.c
	$(am__mv) $(DEPDIR)/memcheck_x86_freebsd-mc_errors.Tpo $(DEPDIR)/memcheck_x86_freebsd-mc_errors.Po
#	source='mc_errors.c' object='memcheck_x86_freebsd-mc_errors.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_freebsd_CFLAGS) $(CFLAGS) -c -o memcheck_x86_freebsd-mc_errors.o `test -f 'mc_errors.c' || echo '$(srcdir)/'`mc_errors.c

memcheck_x86_freebsd-mc_errors.obj: mc_errors.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_freebsd_CFLAGS) $(CFLAGS) -MT memcheck_x86_freebsd-mc_errors.obj -MD -MP -MF $(DEPDIR)/memcheck_x86_freebsd-mc_errors.Tpo -c -o memcheck_x86_freebsd-mc_errors.obj `if test -f 'mc_errors.c'; then $(CYGPATH_W) 'mc_errors.c'; else $(CYGPATH_W) '$(srcdir)/mc_errors.c'; fi`
	$(am__mv) $(DEPDIR)/memcheck_x86_freebsd-mc_errors.Tpo $(DEPDIR)/memcheck_x86_freebsd-mc_errors.Po
#	source='mc_errors.c' object='memcheck_x86_freebsd-mc_errors.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcheck_x86_freebsd_CPPFLAGS) $(CPPFLAGS) $(memcheck_x86_freebsd_CFLAGS) $(CFLAGS) -c -o memcheck_x86_freebsd-mc_errors.obj `if test -f 'mc_errors.c'; then $(CYGPATH_W) 'mc_errors.c'; else $(CYGPATH_W) '$(srcdir)/mc_errors.c'; fi`

vgpreload_memcheck_amd64_freebsd_so-mc_replace_strmem.o: mc_replace_strmem.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck_amd64_freebsd_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck_amd64_freebsd_so_CFLAGS) $(CFLAGS) -MT vgpreload_memcheck_amd64_freebsd_so-mc_replace_strmem.o -MD -MP -MF $(DEPDIR)/vgpreload_memcheck_amd64_freebsd_so-mc_replace_strmem.Tpo -c -o vgpreload_memcheck_amd64_freebsd_so-mc_replace_strmem.o `test -f 'mc_replace_strmem.c' || echo '$(srcdir)/'`mc_replace_strmem.c
	$(am__mv) $(DEPDIR)/vgpreload_memcheck_amd64_freebsd_so-mc_replace_strmem.Tpo $(DEPDIR)/vgpreload_memcheck_amd64_freebsd_so-mc_replace_strmem.Po
#	source='mc_replace_strmem.c' object='vgpreload_memcheck_amd64_freebsd_so-mc_replace_strmem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck_amd64_freebsd_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck_amd64_freebsd_so_CFLAGS) $(CFLAGS) -c -o vgpreload_memcheck_amd64_freebsd_so-mc_replace_strmem.o `test -f 'mc_replace_strmem.c' || echo '$(srcdir)/'`mc_replace_strmem.c

vgpreload_memcheck_amd64_freebsd_so-mc_replace_strmem.obj: mc_replace_strmem.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck_amd64_freebsd_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck_amd64_freebsd_so_CFLAGS) $(CFLAGS) -MT vgpreload_memcheck_amd64_freebsd_so-mc_replace_strmem.obj -MD -MP -MF $(DEPDIR)/vgpreload_memcheck_amd64_freebsd_so-mc_replace_strmem.Tpo -c -o vgpreload_memcheck_amd64_freebsd_so-mc_replace_strmem.obj `if test -f 'mc_replace_strmem.c'; then $(CYGPATH_W) 'mc_replace_strmem.c'; else $(CYGPATH_W) '$(srcdir)/mc_replace_strmem.c'; fi`
	$(am__mv) $(DEPDIR)/vgpreload_memcheck_amd64_freebsd_so-mc_replace_strmem.Tpo $(DEPDIR)/vgpreload_memcheck_amd64_freebsd_so-mc_replace_strmem.Po
#	source='mc_replace_strmem.c' object='vgpreload_memcheck_amd64_freebsd_so-mc_replace_strmem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck_amd64_freebsd_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck_amd64_freebsd_so_CFLAGS) $(CFLAGS) -c -o vgpreload_memcheck_amd64_freebsd_so-mc_replace_strmem.obj `if test -f 'mc_replace_strmem.c'; then $(CYGPATH_W) 'mc_replace_strmem.c'; else $(CYGPATH_W) '$(srcdir)/mc_replace_strmem.c'; fi`

vgpreload_memcheck_x86_freebsd_so-mc_replace_strmem.o: mc_replace_strmem.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck_x86_freebsd_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck_x86_freebsd_so_CFLAGS) $(CFLAGS) -MT vgpreload_memcheck_x86_freebsd_so-mc_replace_strmem.o -MD -MP -MF $(DEPDIR)/vgpreload_memcheck_x86_freebsd_so-mc_replace_strmem.Tpo -c -o vgpreload_memcheck_x86_freebsd_so-mc_replace_strmem.o `test -f 'mc_replace_strmem.c' || echo '$(srcdir)/'`mc_replace_strmem.c
	$(am__mv) $(DEPDIR)/vgpreload_memcheck_x86_freebsd_so-mc_replace_strmem.Tpo $(DEPDIR)/vgpreload_memcheck_x86_freebsd_so-mc_replace_strmem.Po
#	source='mc_replace_strmem.c' object='vgpreload_memcheck_x86_freebsd_so-mc_replace_strmem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck_x86_freebsd_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck_x86_freebsd_so_CFLAGS) $(CFLAGS) -c -o vgpreload_memcheck_x86_freebsd_so-mc_replace_strmem.o `test -f 'mc_replace_strmem.c' || echo '$(srcdir)/'`mc_replace_strmem.c

vgpreload_memcheck_x86_freebsd_so-mc_replace_strmem.obj: mc_replace_strmem.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck_x86_freebsd_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck_x86_freebsd_so_CFLAGS) $(CFLAGS) -MT vgpreload_memcheck_x86_freebsd_so-mc_replace_strmem.obj -MD -MP -MF $(DEPDIR)/vgpreload_memcheck_x86_freebsd_so-mc_replace_strmem.Tpo -c -o vgpreload_memcheck_x86_freebsd_so-mc_replace_strmem.obj `if test -f 'mc_replace_strmem.c'; then $(CYGPATH_W) 'mc_replace_strmem.c'; else $(CYGPATH_W) '$(srcdir)/mc_replace_strmem.c'; fi`
	$(am__mv) $(DEPDIR)/vgpreload_memcheck_x86_freebsd_so-mc_replace_strmem.Tpo $(DEPDIR)/vgpreload_memcheck_x86_freebsd_so-mc_replace_strmem.Po
#	source='mc_replace_strmem.c' object='vgpreload_memcheck_x86_freebsd_so-mc_replace_strmem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_memcheck_x86_freebsd_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_memcheck_x86_freebsd_so_CFLAGS) $(CFLAGS) -c -o vgpreload_memcheck_x86_freebsd_so-mc_replace_strmem.obj `if test -f 'mc_replace_strmem.c'; then $(CYGPATH_W) 'mc_replace_strmem.c'; else $(CYGPATH_W) '$(srcdir)/mc_replace_strmem.c'; fi`
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(RECURSIVE_TARGETS) $(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done
cscopelist-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) cscopelist); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

cscopelist: cscopelist-recursive $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS) $(LISP)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(HEADERS) all-local
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-local clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-pkgincludeHEADERS

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-exec-local

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-pkgincludeHEADERS

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) \
	cscopelist-recursive ctags-recursive install-am install-strip \
	tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am all-local check check-am clean clean-generic \
	clean-local clean-noinstPROGRAMS cscopelist \
	cscopelist-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-exec-local install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-pkgincludeHEADERS \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am uninstall-pkgincludeHEADERS


# This used to be required when Vex had a handwritten Makefile.  It
# shouldn't be needed any more, though.

#----------------------------------------------------------------------------
# noinst_PROGRAMS and noinst_DSYMS targets
#----------------------------------------------------------------------------

# On Darwin, for a program 'p', the DWARF debug info is stored in the
# directory 'p.dSYM'.  This must be generated after the executable is
# created, with 'dsymutil p'.  We could redefine LINK with a script that
# executes 'dsymutil' after linking, but that's a pain.  Instead we use this
# hook so that every time "make check" is run, we subsequently invoke
# 'dsymutil' on all the executables that lack a .dSYM directory, or that are
# newer than their corresponding .dSYM directory.
build-noinst_DSYMS: $(noinst_DSYMS)
	for f in $(noinst_DSYMS); do \
	  if [ ! -e $$f.dSYM  -o  $$f -nt $$f.dSYM ] ; then \
	      echo "dsymutil $$f"; \
	      dsymutil $$f; \
	  fi; \
	done

# This is used by coregrind/Makefile.am and Makefile.tool.am for doing
# "in-place" installs.  It copies $(noinst_PROGRAMS) into $inplacedir.
# It needs to be depended on by an 'all-local' rule.
inplace-noinst_PROGRAMS: $(noinst_PROGRAMS)
	mkdir -p $(inplacedir); \
	for f in $(noinst_PROGRAMS) ; do \
	  rm -f $(inplacedir)/$$f; \
	  ln -f -s ../$(subdir)/$$f $(inplacedir); \
	done

# Similar to inplace-noinst_PROGRAMS
inplace-noinst_DSYMS: build-noinst_DSYMS
	mkdir -p $(inplacedir); \
	for f in $(noinst_DSYMS); do \
	  rm -f $(inplacedir)/$$f.dSYM; \
	  ln -f -s ../$(subdir)/$$f.dSYM $(inplacedir); \
	done

# This is used by coregrind/Makefile.am and by <tool>/Makefile.am for doing
# "make install".  It copies $(noinst_PROGRAMS) into $prefix/lib/valgrind/.
# It needs to be depended on by an 'install-exec-local' rule.
install-noinst_PROGRAMS: $(noinst_PROGRAMS)
	$(mkinstalldirs) $(DESTDIR)$(pkglibdir); \
	for f in $(noinst_PROGRAMS); do \
	  $(INSTALL_PROGRAM) $$f $(DESTDIR)$(pkglibdir); \
	done

# Similar to install-noinst_PROGRAMS.
# Nb: we don't use $(INSTALL_PROGRAM) here because it doesn't work with
# directories.  XXX: not sure whether the resulting permissions will be
# correct when using 'cp -R'...
install-noinst_DSYMS: build-noinst_DSYMS
	$(mkinstalldirs) $(DESTDIR)$(pkglibdir); \
	for f in $(noinst_DSYMS); do \
	  cp -R $$f.dSYM $(DESTDIR)$(pkglibdir); \
	done

# This needs to be depended on by a 'clean-local' rule.
clean-noinst_DSYMS:
	for f in $(noinst_DSYMS); do \
	  rm -rf $$f.dSYM; \
	done

#----------------------------------------------------------------------------
# General stuff
#----------------------------------------------------------------------------

all-local: inplace-noinst_PROGRAMS inplace-noinst_DSYMS

clean-local: clean-noinst_DSYMS

install-exec-local: install-noinst_PROGRAMS install-noinst_DSYMS

# mc_main.c contains the helper function for memcheck that get called
# all the time. To maximise performance compile with -fomit-frame-pointer
# Primary beneficiary is x86.
mc_main.o: CFLAGS += -fomit-frame-pointer

# mc_replace_strmem.c runs on the simulated CPU, and it often appears
# in stack traces shown to the user.  It is built with
# -fno-omit-frame-pointer so as to guarantee robust backtraces on x86,
# on which CFI based unwinding is not the "normal" case and so is
# sometimes fragile.
mc_replace_strmem.o: CFLAGS += -fno-omit-frame-pointer

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
