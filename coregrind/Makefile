# Makefile.in generated by automake 1.12.3 from Makefile.am.
# coregrind/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2012 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Be very careful when renaming any files, targets, whatever, in this
# Makefile.  Various parts of the system rely on these names having
# particular forms.

# This file should be included (directly or indirectly) by every
# Makefile.am that builds programs.  And also the top-level Makefile.am.

#----------------------------------------------------------------------------
# Global stuff
#----------------------------------------------------------------------------





am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/valgrind
pkgincludedir = $(includedir)/valgrind
pkglibdir = $(libdir)/valgrind
pkglibexecdir = $(libexecdir)/valgrind
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = amd64-unknown-freebsd9.1
host_triplet = amd64-unknown-freebsd9.1
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/link_tool_exe_darwin.in \
	$(srcdir)/link_tool_exe_freebsd.in \
	$(srcdir)/link_tool_exe_linux.in $(top_srcdir)/Makefile.all.am \
	$(top_srcdir)/depcomp

# The Android toolchain includes all kinds of stdlib helpers present in
# bionic which is bad because we are not linking with it and the Android
# linker will panic.
#am__append_1 = -nostdlib
bin_PROGRAMS = valgrind$(EXEEXT) vgdb$(EXEEXT)
#am__append_2 = -Wl,-read_only_relocs -Wl,suppress
# On Android we must ask for non-executable stack, not sure why.
#am__append_3 = -static
#am__append_4 = -Wl,-z,noexecstack
#am__append_5 = -static
#am__append_6 = -Wl,-read_only_relocs -Wl,suppress
#am__append_7 = \
#	m_mach/mach_vmUser.c \
#        m_mach/taskUser.c \
#        m_mach/thread_actUser.c \
#        m_mach/vm_mapUser.c

#am__append_8 = \
#	m_mach/mach_vmServer.c \
#        m_mach/taskServer.c \
#        m_mach/thread_actServer.c \
#        m_mach/vm_mapServer.c

#am__append_9 = \
#	m_mach/mach_vm.h \
#        m_mach/task.h \
#        m_mach/thread_act.h \
#        m_mach/vm_map.h

#am__append_10 = \
#	/usr/include/mach/mach_vm.defs \
#        /usr/include/mach/task.defs \
#        /usr/include/mach/thread_act.defs \
#        /usr/include/mach/vm_map.defs

am__append_11 = libcoregrind-x86-freebsd.a
#am__append_12 = \
#    m_scheduler/ticket-lock-linux.c

#am__append_13 = \
#    -DENABLE_LINUX_TICKET_LOCK

#am__append_14 = \
#    m_scheduler/ticket-lock-linux.c

#am__append_15 = \
#    -DENABLE_LINUX_TICKET_LOCK

am__append_16 = libreplacemalloc_toolpreload-x86-freebsd.a
noinst_PROGRAMS =  \
	vgpreload_core-amd64-freebsd.so$(EXEEXT) \
	$(am__EXEEXT_1)
am__append_17 = vgpreload_core-x86-freebsd.so

#----------------------------------------------------------------------------
# Darwin linker kludges
#----------------------------------------------------------------------------
#am__append_18 = fixup_macho_loadcmds
#am__append_19 = fixup_macho_loadcmds
subdir = coregrind
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = link_tool_exe_linux link_tool_exe_freebsd \
	link_tool_exe_darwin
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(vglibdir)"
LIBRARIES = $(pkglib_LIBRARIES)
ARFLAGS = cru
libcoregrind_amd64_freebsd_a_AR = $(AR) $(ARFLAGS)
libcoregrind_amd64_freebsd_a_LIBADD =
am__libcoregrind_amd64_freebsd_a_SOURCES_DIST =  \
	m_commandline.c m_clientstate.c m_cpuid.S m_debugger.c \
	m_debuglog.c m_errormgr.c m_execontext.c m_poolalloc.c \
	m_hashtable.c m_libcbase.c m_libcassert.c m_libcfile.c \
	m_libcprint.c m_libcproc.c m_libcsetjmp.c m_libcsignal.c \
	m_machine.c m_main.c m_mallocfree.c m_options.c m_oset.c \
	m_redir.c m_seqmatch.c m_signals.c m_sparsewa.c m_stacks.c \
	m_stacktrace.c m_syscall.c m_threadstate.c m_tooliface.c \
	m_trampoline.S m_translate.c m_transtab.c m_vki.c \
	m_vkiscnums.c m_wordfm.c m_xarray.c m_aspacehl.c \
	m_aspacemgr/aspacemgr-common.c m_aspacemgr/aspacemgr-linux.c \
	m_coredump/coredump-elf.c m_coredump/coredump-macho.c \
	m_debuginfo/misc.c m_debuginfo/d3basics.c \
	m_debuginfo/debuginfo.c m_debuginfo/readdwarf.c \
	m_debuginfo/readdwarf3.c m_debuginfo/readelf.c \
	m_debuginfo/readmacho.c m_debuginfo/readpdb.c \
	m_debuginfo/readstabs.c m_debuginfo/storage.c \
	m_debuginfo/tytypes.c m_demangle/cp-demangle.c \
	m_demangle/cplus-dem.c m_demangle/demangle.c \
	m_demangle/dyn-string.c m_demangle/safe-ctype.c \
	m_dispatch/dispatch-x86-linux.S \
	m_dispatch/dispatch-amd64-linux.S \
	m_dispatch/dispatch-ppc32-linux.S \
	m_dispatch/dispatch-ppc64-linux.S \
	m_dispatch/dispatch-x86-freebsd.S \
	m_dispatch/dispatch-amd64-freebsd.S \
	m_dispatch/dispatch-arm-linux.S \
	m_dispatch/dispatch-s390x-linux.S \
	m_dispatch/dispatch-mips32-linux.S \
	m_dispatch/dispatch-x86-darwin.S \
	m_dispatch/dispatch-amd64-darwin.S m_gdbserver/inferiors.c \
	m_gdbserver/m_gdbserver.c m_gdbserver/regcache.c \
	m_gdbserver/remote-utils.c m_gdbserver/server.c \
	m_gdbserver/signals.c m_gdbserver/target.c m_gdbserver/utils.c \
	m_gdbserver/valgrind-low-x86.c \
	m_gdbserver/valgrind-low-amd64.c \
	m_gdbserver/valgrind-low-arm.c \
	m_gdbserver/valgrind-low-ppc32.c \
	m_gdbserver/valgrind-low-ppc64.c \
	m_gdbserver/valgrind-low-s390x.c \
	m_gdbserver/valgrind-low-mips32.c m_gdbserver/version.c \
	m_initimg/initimg-linux.c m_initimg/initimg-freebsd.c \
	m_initimg/initimg-darwin.c m_initimg/initimg-pathscan.c \
	m_mach/mach_basics.c m_mach/mach_msg.c \
	m_mach/mach_traps-x86-darwin.S \
	m_mach/mach_traps-amd64-darwin.S \
	m_replacemalloc/replacemalloc_core.c m_scheduler/scheduler.c \
	m_scheduler/sema.c m_scheduler/sched-lock.c \
	m_scheduler/sched-lock-generic.c \
	m_sigframe/sigframe-x86-linux.c \
	m_sigframe/sigframe-amd64-linux.c \
	m_sigframe/sigframe-x86-freebsd.c \
	m_sigframe/sigframe-amd64-freebsd.c \
	m_sigframe/sigframe-ppc32-linux.c \
	m_sigframe/sigframe-ppc64-linux.c \
	m_sigframe/sigframe-arm-linux.c \
	m_sigframe/sigframe-s390x-linux.c \
	m_sigframe/sigframe-mips32-linux.c \
	m_sigframe/sigframe-x86-darwin.c \
	m_sigframe/sigframe-amd64-darwin.c \
	m_syswrap/syscall-x86-linux.S m_syswrap/syscall-amd64-linux.S \
	m_syswrap/syscall-ppc32-linux.S \
	m_syswrap/syscall-ppc64-linux.S \
	m_syswrap/syscall-x86-freebsd.S \
	m_syswrap/syscall-amd64-freebsd.S \
	m_syswrap/syscall-arm-linux.S m_syswrap/syscall-s390x-linux.S \
	m_syswrap/syscall-mips32-linux.S \
	m_syswrap/syscall-x86-darwin.S \
	m_syswrap/syscall-amd64-darwin.S m_syswrap/syswrap-main.c \
	m_syswrap/syswrap-generic.c m_syswrap/syswrap-linux.c \
	m_syswrap/syswrap-linux-variants.c m_syswrap/syswrap-freebsd.c \
	m_syswrap/syswrap-freebsd-variants.c \
	m_syswrap/syswrap-darwin.c m_syswrap/syswrap-x86-linux.c \
	m_syswrap/syswrap-amd64-linux.c \
	m_syswrap/syswrap-ppc32-linux.c \
	m_syswrap/syswrap-ppc64-linux.c \
	m_syswrap/syswrap-x86-freebsd.c \
	m_syswrap/syswrap-amd64-freebsd.c \
	m_syswrap/syswrap-arm-linux.c m_syswrap/syswrap-s390x-linux.c \
	m_syswrap/syswrap-mips32-linux.c \
	m_syswrap/syswrap-x86-darwin.c \
	m_syswrap/syswrap-amd64-darwin.c m_ume/elf.c m_ume/macho.c \
	m_ume/main.c m_ume/script.c m_scheduler/ticket-lock-linux.c
am__objects_1 = libcoregrind_amd64_freebsd_a-m_commandline.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_clientstate.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_cpuid.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_debugger.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_debuglog.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_errormgr.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_execontext.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_poolalloc.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_hashtable.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_libcbase.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_libcassert.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_libcfile.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_libcprint.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_libcproc.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_libcsetjmp.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_libcsignal.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_machine.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_main.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_mallocfree.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_options.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_oset.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_redir.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_seqmatch.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_signals.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_sparsewa.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_stacks.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_stacktrace.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_syscall.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_threadstate.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_tooliface.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_trampoline.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_translate.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_transtab.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_vki.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_vkiscnums.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_wordfm.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_xarray.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_aspacehl.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-aspacemgr-common.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-aspacemgr-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-coredump-elf.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-coredump-macho.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-misc.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-d3basics.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-debuginfo.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-readdwarf.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-readdwarf3.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-readelf.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-readmacho.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-readpdb.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-readstabs.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-storage.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-tytypes.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-cp-demangle.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-cplus-dem.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-demangle.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-dyn-string.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-safe-ctype.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-dispatch-x86-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-dispatch-amd64-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-dispatch-ppc32-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-dispatch-ppc64-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-dispatch-x86-freebsd.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-dispatch-amd64-freebsd.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-dispatch-arm-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-dispatch-s390x-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-dispatch-mips32-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-dispatch-x86-darwin.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-dispatch-amd64-darwin.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-inferiors.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-m_gdbserver.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-regcache.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-remote-utils.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-server.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-signals.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-target.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-utils.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-valgrind-low-x86.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-valgrind-low-amd64.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-valgrind-low-arm.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-valgrind-low-ppc32.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-valgrind-low-ppc64.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-valgrind-low-s390x.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-valgrind-low-mips32.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-version.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-initimg-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-initimg-freebsd.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-initimg-darwin.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-initimg-pathscan.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-mach_basics.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-mach_msg.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-mach_traps-x86-darwin.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-mach_traps-amd64-darwin.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-replacemalloc_core.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-scheduler.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-sema.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-sched-lock.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-sched-lock-generic.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-sigframe-x86-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-sigframe-amd64-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-sigframe-x86-freebsd.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-sigframe-amd64-freebsd.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-sigframe-ppc32-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-sigframe-ppc64-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-sigframe-arm-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-sigframe-s390x-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-sigframe-mips32-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-sigframe-x86-darwin.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-sigframe-amd64-darwin.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syscall-x86-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syscall-amd64-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syscall-ppc32-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syscall-ppc64-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syscall-x86-freebsd.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syscall-amd64-freebsd.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syscall-arm-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syscall-s390x-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syscall-mips32-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syscall-x86-darwin.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syscall-amd64-darwin.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syswrap-main.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syswrap-generic.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syswrap-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syswrap-linux-variants.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syswrap-freebsd.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syswrap-freebsd-variants.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syswrap-darwin.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syswrap-x86-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syswrap-amd64-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syswrap-ppc32-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syswrap-ppc64-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syswrap-x86-freebsd.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syswrap-amd64-freebsd.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syswrap-arm-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syswrap-s390x-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syswrap-mips32-linux.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syswrap-x86-darwin.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-syswrap-amd64-darwin.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-elf.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-macho.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-main.$(OBJEXT) \
	libcoregrind_amd64_freebsd_a-script.$(OBJEXT)
#am__objects_2 = libcoregrind_amd64_freebsd_a-ticket-lock-linux.$(OBJEXT)
am_libcoregrind_amd64_freebsd_a_OBJECTS =  \
	$(am__objects_1) $(am__objects_2)
#am__objects_3 = libcoregrind_amd64_freebsd_a-mach_vmUser.$(OBJEXT) \
#	libcoregrind_amd64_freebsd_a-taskUser.$(OBJEXT) \
#	libcoregrind_amd64_freebsd_a-thread_actUser.$(OBJEXT) \
#	libcoregrind_amd64_freebsd_a-vm_mapUser.$(OBJEXT)
am__objects_4 = $(am__objects_3)
am__objects_5 =
am__objects_6 = $(am__objects_4) $(am__objects_5)
nodist_libcoregrind_amd64_freebsd_a_OBJECTS =  \
	$(am__objects_6)
libcoregrind_amd64_freebsd_a_OBJECTS =  \
	$(am_libcoregrind_amd64_freebsd_a_OBJECTS) \
	$(nodist_libcoregrind_amd64_freebsd_a_OBJECTS)
libcoregrind_x86_freebsd_a_AR = $(AR) $(ARFLAGS)
libcoregrind_x86_freebsd_a_LIBADD =
am__libcoregrind_x86_freebsd_a_SOURCES_DIST =  \
	m_commandline.c m_clientstate.c m_cpuid.S m_debugger.c \
	m_debuglog.c m_errormgr.c m_execontext.c m_poolalloc.c \
	m_hashtable.c m_libcbase.c m_libcassert.c m_libcfile.c \
	m_libcprint.c m_libcproc.c m_libcsetjmp.c m_libcsignal.c \
	m_machine.c m_main.c m_mallocfree.c m_options.c m_oset.c \
	m_redir.c m_seqmatch.c m_signals.c m_sparsewa.c m_stacks.c \
	m_stacktrace.c m_syscall.c m_threadstate.c m_tooliface.c \
	m_trampoline.S m_translate.c m_transtab.c m_vki.c \
	m_vkiscnums.c m_wordfm.c m_xarray.c m_aspacehl.c \
	m_aspacemgr/aspacemgr-common.c m_aspacemgr/aspacemgr-linux.c \
	m_coredump/coredump-elf.c m_coredump/coredump-macho.c \
	m_debuginfo/misc.c m_debuginfo/d3basics.c \
	m_debuginfo/debuginfo.c m_debuginfo/readdwarf.c \
	m_debuginfo/readdwarf3.c m_debuginfo/readelf.c \
	m_debuginfo/readmacho.c m_debuginfo/readpdb.c \
	m_debuginfo/readstabs.c m_debuginfo/storage.c \
	m_debuginfo/tytypes.c m_demangle/cp-demangle.c \
	m_demangle/cplus-dem.c m_demangle/demangle.c \
	m_demangle/dyn-string.c m_demangle/safe-ctype.c \
	m_dispatch/dispatch-x86-linux.S \
	m_dispatch/dispatch-amd64-linux.S \
	m_dispatch/dispatch-ppc32-linux.S \
	m_dispatch/dispatch-ppc64-linux.S \
	m_dispatch/dispatch-x86-freebsd.S \
	m_dispatch/dispatch-amd64-freebsd.S \
	m_dispatch/dispatch-arm-linux.S \
	m_dispatch/dispatch-s390x-linux.S \
	m_dispatch/dispatch-mips32-linux.S \
	m_dispatch/dispatch-x86-darwin.S \
	m_dispatch/dispatch-amd64-darwin.S m_gdbserver/inferiors.c \
	m_gdbserver/m_gdbserver.c m_gdbserver/regcache.c \
	m_gdbserver/remote-utils.c m_gdbserver/server.c \
	m_gdbserver/signals.c m_gdbserver/target.c m_gdbserver/utils.c \
	m_gdbserver/valgrind-low-x86.c \
	m_gdbserver/valgrind-low-amd64.c \
	m_gdbserver/valgrind-low-arm.c \
	m_gdbserver/valgrind-low-ppc32.c \
	m_gdbserver/valgrind-low-ppc64.c \
	m_gdbserver/valgrind-low-s390x.c \
	m_gdbserver/valgrind-low-mips32.c m_gdbserver/version.c \
	m_initimg/initimg-linux.c m_initimg/initimg-freebsd.c \
	m_initimg/initimg-darwin.c m_initimg/initimg-pathscan.c \
	m_mach/mach_basics.c m_mach/mach_msg.c \
	m_mach/mach_traps-x86-darwin.S \
	m_mach/mach_traps-amd64-darwin.S \
	m_replacemalloc/replacemalloc_core.c m_scheduler/scheduler.c \
	m_scheduler/sema.c m_scheduler/sched-lock.c \
	m_scheduler/sched-lock-generic.c \
	m_sigframe/sigframe-x86-linux.c \
	m_sigframe/sigframe-amd64-linux.c \
	m_sigframe/sigframe-x86-freebsd.c \
	m_sigframe/sigframe-amd64-freebsd.c \
	m_sigframe/sigframe-ppc32-linux.c \
	m_sigframe/sigframe-ppc64-linux.c \
	m_sigframe/sigframe-arm-linux.c \
	m_sigframe/sigframe-s390x-linux.c \
	m_sigframe/sigframe-mips32-linux.c \
	m_sigframe/sigframe-x86-darwin.c \
	m_sigframe/sigframe-amd64-darwin.c \
	m_syswrap/syscall-x86-linux.S m_syswrap/syscall-amd64-linux.S \
	m_syswrap/syscall-ppc32-linux.S \
	m_syswrap/syscall-ppc64-linux.S \
	m_syswrap/syscall-x86-freebsd.S \
	m_syswrap/syscall-amd64-freebsd.S \
	m_syswrap/syscall-arm-linux.S m_syswrap/syscall-s390x-linux.S \
	m_syswrap/syscall-mips32-linux.S \
	m_syswrap/syscall-x86-darwin.S \
	m_syswrap/syscall-amd64-darwin.S m_syswrap/syswrap-main.c \
	m_syswrap/syswrap-generic.c m_syswrap/syswrap-linux.c \
	m_syswrap/syswrap-linux-variants.c m_syswrap/syswrap-freebsd.c \
	m_syswrap/syswrap-freebsd-variants.c \
	m_syswrap/syswrap-darwin.c m_syswrap/syswrap-x86-linux.c \
	m_syswrap/syswrap-amd64-linux.c \
	m_syswrap/syswrap-ppc32-linux.c \
	m_syswrap/syswrap-ppc64-linux.c \
	m_syswrap/syswrap-x86-freebsd.c \
	m_syswrap/syswrap-amd64-freebsd.c \
	m_syswrap/syswrap-arm-linux.c m_syswrap/syswrap-s390x-linux.c \
	m_syswrap/syswrap-mips32-linux.c \
	m_syswrap/syswrap-x86-darwin.c \
	m_syswrap/syswrap-amd64-darwin.c m_ume/elf.c m_ume/macho.c \
	m_ume/main.c m_ume/script.c m_scheduler/ticket-lock-linux.c
am__objects_7 = libcoregrind_x86_freebsd_a-m_commandline.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_clientstate.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_cpuid.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_debugger.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_debuglog.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_errormgr.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_execontext.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_poolalloc.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_hashtable.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_libcbase.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_libcassert.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_libcfile.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_libcprint.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_libcproc.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_libcsetjmp.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_libcsignal.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_machine.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_main.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_mallocfree.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_options.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_oset.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_redir.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_seqmatch.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_signals.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_sparsewa.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_stacks.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_stacktrace.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_syscall.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_threadstate.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_tooliface.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_trampoline.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_translate.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_transtab.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_vki.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_vkiscnums.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_wordfm.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_xarray.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_aspacehl.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-aspacemgr-common.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-aspacemgr-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-coredump-elf.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-coredump-macho.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-misc.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-d3basics.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-debuginfo.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-readdwarf.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-readdwarf3.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-readelf.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-readmacho.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-readpdb.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-readstabs.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-storage.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-tytypes.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-cp-demangle.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-cplus-dem.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-demangle.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-dyn-string.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-safe-ctype.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-dispatch-x86-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-dispatch-amd64-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-dispatch-ppc32-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-dispatch-ppc64-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-dispatch-x86-freebsd.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-dispatch-amd64-freebsd.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-dispatch-arm-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-dispatch-s390x-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-dispatch-mips32-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-dispatch-x86-darwin.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-dispatch-amd64-darwin.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-inferiors.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-m_gdbserver.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-regcache.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-remote-utils.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-server.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-signals.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-target.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-utils.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-valgrind-low-x86.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-valgrind-low-amd64.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-valgrind-low-arm.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-valgrind-low-ppc32.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-valgrind-low-ppc64.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-valgrind-low-s390x.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-valgrind-low-mips32.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-version.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-initimg-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-initimg-freebsd.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-initimg-darwin.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-initimg-pathscan.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-mach_basics.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-mach_msg.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-mach_traps-x86-darwin.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-mach_traps-amd64-darwin.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-replacemalloc_core.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-scheduler.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-sema.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-sched-lock.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-sched-lock-generic.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-sigframe-x86-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-sigframe-amd64-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-sigframe-x86-freebsd.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-sigframe-amd64-freebsd.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-sigframe-ppc32-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-sigframe-ppc64-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-sigframe-arm-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-sigframe-s390x-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-sigframe-mips32-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-sigframe-x86-darwin.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-sigframe-amd64-darwin.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syscall-x86-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syscall-amd64-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syscall-ppc32-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syscall-ppc64-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syscall-x86-freebsd.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syscall-amd64-freebsd.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syscall-arm-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syscall-s390x-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syscall-mips32-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syscall-x86-darwin.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syscall-amd64-darwin.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syswrap-main.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syswrap-generic.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syswrap-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syswrap-linux-variants.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syswrap-freebsd.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syswrap-freebsd-variants.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syswrap-darwin.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syswrap-x86-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syswrap-amd64-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syswrap-ppc32-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syswrap-ppc64-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syswrap-x86-freebsd.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syswrap-amd64-freebsd.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syswrap-arm-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syswrap-s390x-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syswrap-mips32-linux.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syswrap-x86-darwin.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-syswrap-amd64-darwin.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-elf.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-macho.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-main.$(OBJEXT) \
	libcoregrind_x86_freebsd_a-script.$(OBJEXT)
#am__objects_8 = libcoregrind_x86_freebsd_a-ticket-lock-linux.$(OBJEXT)
am_libcoregrind_x86_freebsd_a_OBJECTS =  \
	$(am__objects_7) \
	$(am__objects_8)
#am__objects_9 = libcoregrind_x86_freebsd_a-mach_vmUser.$(OBJEXT) \
#	libcoregrind_x86_freebsd_a-taskUser.$(OBJEXT) \
#	libcoregrind_x86_freebsd_a-thread_actUser.$(OBJEXT) \
#	libcoregrind_x86_freebsd_a-vm_mapUser.$(OBJEXT)
am__objects_10 = $(am__objects_9)
am__objects_11 = $(am__objects_10) $(am__objects_5)
nodist_libcoregrind_x86_freebsd_a_OBJECTS =  \
	$(am__objects_11)
libcoregrind_x86_freebsd_a_OBJECTS =  \
	$(am_libcoregrind_x86_freebsd_a_OBJECTS) \
	$(nodist_libcoregrind_x86_freebsd_a_OBJECTS)
libreplacemalloc_toolpreload_amd64_freebsd_a_AR =  \
	$(AR) $(ARFLAGS)
libreplacemalloc_toolpreload_amd64_freebsd_a_LIBADD =
am_libreplacemalloc_toolpreload_amd64_freebsd_a_OBJECTS = libreplacemalloc_toolpreload_amd64_freebsd_a-vg_replace_malloc.$(OBJEXT)
libreplacemalloc_toolpreload_amd64_freebsd_a_OBJECTS = $(am_libreplacemalloc_toolpreload_amd64_freebsd_a_OBJECTS)
libreplacemalloc_toolpreload_x86_freebsd_a_AR =  \
	$(AR) $(ARFLAGS)
libreplacemalloc_toolpreload_x86_freebsd_a_LIBADD =
am__libreplacemalloc_toolpreload_x86_freebsd_a_SOURCES_DIST =  \
	m_replacemalloc/vg_replace_malloc.c
am_libreplacemalloc_toolpreload_x86_freebsd_a_OBJECTS = libreplacemalloc_toolpreload_x86_freebsd_a-vg_replace_malloc.$(OBJEXT)
libreplacemalloc_toolpreload_x86_freebsd_a_OBJECTS = $(am_libreplacemalloc_toolpreload_x86_freebsd_a_OBJECTS)
am__EXEEXT_1 = vgpreload_core-x86-freebsd.so$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am__valgrind_SOURCES_DIST = launcher-darwin.c m_debuglog.c \
	launcher-freebsd.c launcher-linux.c
##am_valgrind_OBJECTS = valgrind-launcher-linux.$(OBJEXT) \
##	valgrind-m_debuglog.$(OBJEXT)
am_valgrind_OBJECTS = valgrind-launcher-freebsd.$(OBJEXT) \
	valgrind-m_debuglog.$(OBJEXT)
#am_valgrind_OBJECTS =  \
#	valgrind-launcher-darwin.$(OBJEXT) \
#	valgrind-m_debuglog.$(OBJEXT)
valgrind_OBJECTS = $(am_valgrind_OBJECTS)
valgrind_LDADD = $(LDADD)
valgrind_LINK = $(CCLD) $(valgrind_CFLAGS) $(CFLAGS) \
	$(valgrind_LDFLAGS) $(LDFLAGS) -o $@
am_vgdb_OBJECTS = vgdb-vgdb.$(OBJEXT)
vgdb_OBJECTS = $(am_vgdb_OBJECTS)
vgdb_DEPENDENCIES =
vgdb_LINK = $(CCLD) $(vgdb_CFLAGS) $(CFLAGS) $(vgdb_LDFLAGS) \
	$(LDFLAGS) -o $@
am_vgpreload_core_amd64_freebsd_so_OBJECTS = vgpreload_core_amd64_freebsd_so-vg_preloaded.$(OBJEXT)
vgpreload_core_amd64_freebsd_so_OBJECTS =  \
	$(am_vgpreload_core_amd64_freebsd_so_OBJECTS)
vgpreload_core_amd64_freebsd_so_LDADD = $(LDADD)
vgpreload_core_amd64_freebsd_so_LINK = $(CCLD) \
	$(vgpreload_core_amd64_freebsd_so_CFLAGS) \
	$(CFLAGS) \
	$(vgpreload_core_amd64_freebsd_so_LDFLAGS) \
	$(LDFLAGS) -o $@
am__vgpreload_core_x86_freebsd_so_SOURCES_DIST =  \
	vg_preloaded.c
am_vgpreload_core_x86_freebsd_so_OBJECTS = vgpreload_core_x86_freebsd_so-vg_preloaded.$(OBJEXT)
vgpreload_core_x86_freebsd_so_OBJECTS =  \
	$(am_vgpreload_core_x86_freebsd_so_OBJECTS)
vgpreload_core_x86_freebsd_so_LDADD = $(LDADD)
vgpreload_core_x86_freebsd_so_LINK = $(CCLD) \
	$(vgpreload_core_x86_freebsd_so_CFLAGS) \
	$(CFLAGS) \
	$(vgpreload_core_x86_freebsd_so_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CPPASCOMPILE = $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS)
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libcoregrind_amd64_freebsd_a_SOURCES) \
	$(nodist_libcoregrind_amd64_freebsd_a_SOURCES) \
	$(libcoregrind_x86_freebsd_a_SOURCES) \
	$(nodist_libcoregrind_x86_freebsd_a_SOURCES) \
	$(libreplacemalloc_toolpreload_amd64_freebsd_a_SOURCES) \
	$(libreplacemalloc_toolpreload_x86_freebsd_a_SOURCES) \
	$(valgrind_SOURCES) $(vgdb_SOURCES) \
	$(vgpreload_core_amd64_freebsd_so_SOURCES) \
	$(vgpreload_core_x86_freebsd_so_SOURCES)
DIST_SOURCES = $(am__libcoregrind_amd64_freebsd_a_SOURCES_DIST) \
	$(am__libcoregrind_x86_freebsd_a_SOURCES_DIST) \
	$(libreplacemalloc_toolpreload_amd64_freebsd_a_SOURCES) \
	$(am__libreplacemalloc_toolpreload_x86_freebsd_a_SOURCES_DIST) \
	$(am__valgrind_SOURCES_DIST) $(vgdb_SOURCES) \
	$(vgpreload_core_amd64_freebsd_so_SOURCES) \
	$(am__vgpreload_core_x86_freebsd_so_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(vglib_DATA)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/jon/software/valgrind-freebsd/missing --run aclocal-1.12
AMTAR = $${TAR-tar}
AR = /usr/bin/ar
AUTOCONF = ${SHELL} /home/jon/software/valgrind-freebsd/missing --run autoconf
AUTOHEADER = ${SHELL} /home/jon/software/valgrind-freebsd/missing --run autoheader
AUTOMAKE = ${SHELL} /home/jon/software/valgrind-freebsd/missing --run automake-1.12
AWK = nawk
BOOST_CFLAGS = 
BOOST_LIBS = 
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -Wno-long-long 
CCDEPMODE = depmode=gcc3
CFLAGS = -Wno-long-long  -Wno-pointer-sign -fno-stack-protector
CFLAGS_MPI = 
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wno-long-long  -Wno-pointer-sign -fno-stack-protector
CYGPATH_W = echo
DEFAULT_SUPP = exp-sgcheck.supp xfree-3.supp xfree-4.supp freebsd.supp 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DIFF = diff -u
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FLAG_FNO_STACK_PROTECTOR = -fno-stack-protector
FLAG_M32 = -B/usr/lib32 -m32
FLAG_M64 = -m64
FLAG_MMMX = -mmmx
FLAG_MSSE = -msse
FLAG_NO_BUILD_ID = 
FLAG_UNLIMITED_INLINE_UNIT_GROWTH = --param inline-unit-growth=900
FLAG_W_EXTRA = -Wextra
FLAG_W_NO_EMPTY_BODY = 
FLAG_W_NO_FORMAT_ZERO_LENGTH = -Wno-format-zero-length
FLAG_W_NO_NONNULL = -Wno-nonnull
FLAG_W_NO_OVERFLOW = -Wno-overflow
FLAG_W_NO_UNINITIALIZED = -Wno-uninitialized
GDB = /usr/bin/gdb
GLIBC_VERSION = freebsd
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LDFLAGS_MPI = 
LIBOBJS = 
LIBS = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/jon/software/valgrind-freebsd/missing --run makeinfo
MKDIR_P = .././install-sh -c -d
MPI_CC = mpicc
OBJEXT = o
PACKAGE = valgrind
PACKAGE_BUGREPORT = valgrind-users@lists.sourceforge.net
PACKAGE_NAME = Valgrind
PACKAGE_STRING = Valgrind 3.8.0
PACKAGE_TARNAME = valgrind
PACKAGE_URL = 
PACKAGE_VERSION = 3.8.0
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PREFERRED_STACK_BOUNDARY = 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VALT_LOAD_ADDRESS_PRI = 0x38000000
VALT_LOAD_ADDRESS_SEC = 0x38000000
VERSION = 3.8.0
VGCONF_ARCH_PRI = amd64
VGCONF_ARCH_SEC = x86
VGCONF_OS = freebsd
VGCONF_PLATFORM_PRI_CAPS = AMD64_FREEBSD
VGCONF_PLATFORM_SEC_CAPS = X86_FREEBSD
VGCONF_PLATVARIANT = vanilla
abs_builddir = /home/jon/software/valgrind-freebsd/coregrind
abs_srcdir = /home/jon/software/valgrind-freebsd/coregrind
abs_top_builddir = /home/jon/software/valgrind-freebsd
abs_top_srcdir = /home/jon/software/valgrind-freebsd
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = amd64-unknown-freebsd9.1
build_alias = 
build_cpu = amd64
build_os = freebsd9.1
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = amd64-unknown-freebsd9.1
host_alias = 
host_cpu = amd64
host_os = freebsd9.1
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/jon/software/valgrind-freebsd/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
inplacedir = $(top_builddir)/.in_place

#----------------------------------------------------------------------------
# Flags
#----------------------------------------------------------------------------

# Baseline flags for all compilations.  Aim here is to maximise
# performance and get whatever useful warnings we can out of gcc.
# -fno-builtin is important for defeating LLVM's idiom recognition
# that somehow causes VG_(memset) to get into infinite recursion.
AM_CFLAGS_BASE = \
	-O2 -g \
	-Wall \
	-Wmissing-prototypes \
	-Wshadow \
	-Wpointer-arith \
	-Wstrict-prototypes \
	-Wmissing-declarations \
	-Wno-format-zero-length \
	-fno-strict-aliasing \
	-fno-builtin

AM_CFLAGS_PIC = -fpic -O -g -fno-omit-frame-pointer -fno-strict-aliasing \
		-fno-builtin


# These flags are used for building the preload shared objects.
# The aim is to give reasonable performance but also to have good
# stack traces, since users often see stack traces extending 
# into (and through) the preloads.
#AM_CFLAGS_PIC = -dynamic -O -g -fno-omit-frame-pointer -fno-strict-aliasing \
#		-mno-dynamic-no-pic -fpic -fPIC \
#		-fno-builtin


# Flags for specific targets.
#
# Nb: the AM_CPPFLAGS_* values are suitable for building tools and auxprogs.
# For building the core, coregrind/Makefile.am files add some extra things.

#----------------------------------------------------------------------------
# Basics, flags
#----------------------------------------------------------------------------
AM_CPPFLAGS_AMD64_FREEBSD = -I$(top_srcdir) \
	-I$(top_srcdir)/include -I$(top_srcdir)/VEX/pub \
	-DVGA_amd64=1 -DVGO_freebsd=1 \
	-DVGP_amd64_freebsd=1 \
	-DVGPV_amd64_freebsd_vanilla=1 \
	-I$(top_srcdir)/coregrind -DVG_LIBDIR="\"$(pkglibdir)"\" \
	-DVG_PLATFORM="\"amd64-freebsd\""
AM_CPPFLAGS_X86_FREEBSD =  \
	-I$(top_srcdir) \
	-I$(top_srcdir)/include \
	-I$(top_srcdir)/VEX/pub \
	-DVGA_x86=1 \
	-DVGO_freebsd=1 \
	-DVGP_x86_freebsd=1 \
	-DVGPV_x86_freebsd_vanilla=1 \
	-I$(top_srcdir)/coregrind \
	-DVG_LIBDIR="\"$(pkglibdir)"\" \
	-DVG_PLATFORM="\"x86-freebsd\""
AM_FLAG_M3264_X86_LINUX = -B/usr/lib32 -m32
AM_CFLAGS_X86_LINUX = -B/usr/lib32 -m32   \
				$(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CCASFLAGS_X86_LINUX = -B/usr/lib32 -m32 -g
AM_FLAG_M3264_AMD64_LINUX = -m64
AM_CFLAGS_AMD64_LINUX = -m64  \
				$(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CCASFLAGS_AMD64_LINUX = -m64 -g
AM_FLAG_M3264_PPC32_LINUX = -B/usr/lib32 -m32
AM_CFLAGS_PPC32_LINUX = -B/usr/lib32 -m32 $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC32_LINUX = -B/usr/lib32 -m32 -g
AM_FLAG_M3264_PPC64_LINUX = -m64
AM_CFLAGS_PPC64_LINUX = -m64 $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC64_LINUX = -m64 -g
AM_FLAG_M3264_X86_FREEBSD = -B/usr/lib32 -m32
AM_CFLAGS_X86_FREEBSD = -B/usr/lib32 -m32  \
			      $(AM_CFLAGS_BASE)

AM_CCASFLAGS_X86_FREEBSD = $(AM_CPPFLAGS_X86_FREEBSD) -B/usr/lib32 -m32 -g
AM_FLAG_M3264_ARM_LINUX = -B/usr/lib32 -m32
AM_CFLAGS_ARM_LINUX = -B/usr/lib32 -m32  \
			 	$(AM_CFLAGS_BASE) -marm -mcpu=cortex-a8

AM_CCASFLAGS_ARM_LINUX = -B/usr/lib32 -m32 \
				-marm -mcpu=cortex-a8 -g

AM_FLAG_M3264_AMD64_FREEBSD = -m64
AM_CFLAGS_AMD64_FREEBSD = -m64 -fomit-frame-pointer \
			       $(AM_CFLAGS_BASE)

AM_CCASFLAGS_AMD64_FREEBSD = $(AM_CPPFLAGS_AMD64_FREEBSD) -m64 -g
AM_FLAG_M3264_X86_DARWIN = -arch i386
AM_CFLAGS_X86_DARWIN = $(WERROR) -arch i386 $(AM_CFLAGS_BASE) \
				-mmacosx-version-min=10.5 \
				-fno-stack-protector -fno-pic -fno-PIC

AM_CCASFLAGS_X86_DARWIN = -arch i386 -g
AM_FLAG_M3264_AMD64_DARWIN = -arch x86_64
AM_CFLAGS_AMD64_DARWIN = $(WERROR) -arch x86_64 $(AM_CFLAGS_BASE) \
			    -mmacosx-version-min=10.5 -fno-stack-protector

AM_CCASFLAGS_AMD64_DARWIN = -arch x86_64 -g
AM_FLAG_M3264_S390X_LINUX = -m64
AM_CFLAGS_S390X_LINUX = -m64 $(AM_CFLAGS_BASE) -fomit-frame-pointer
AM_CCASFLAGS_S390X_LINUX = -m64 -g -mzarch -march=z900
AM_FLAG_M3264_MIPS32_LINUX = -B/usr/lib32 -m32
AM_CFLAGS_MIPS32_LINUX = -B/usr/lib32 -m32 $(AM_CFLAGS_BASE) -mips32
AM_CCASFLAGS_MIPS32_LINUX = -B/usr/lib32 -m32 -mips32 -g

# Flags for the primary target.  These must be used to build the
# regtests and performance tests.  In fact, these must be used to
# build anything which is built only once on a dual-arch build.
#
AM_FLAG_M3264_PRI = $(AM_FLAG_M3264_AMD64_FREEBSD)
AM_CPPFLAGS_PRI = $(AM_CPPFLAGS_AMD64_FREEBSD)
AM_CFLAGS_PRI = $(AM_CFLAGS_AMD64_FREEBSD)
AM_CCASFLAGS_PRI = $(AM_CCASFLAGS_AMD64_FREEBSD)
#AM_FLAG_M3264_SEC = 
AM_FLAG_M3264_SEC = $(AM_FLAG_M3264_X86_FREEBSD)

# Baseline link flags for making vgpreload shared objects.
#
PRELOAD_LDFLAGS_COMMON_LINUX = -nodefaultlibs -shared \
	-Wl,-z,interpose,-z,initfirst $(am__append_1)
PRELOAD_LDFLAGS_COMMON_FREEBSD = -nodefaultlibs -shared -Wl,-z,interpose,-z,initfirst
PRELOAD_LDFLAGS_COMMON_DARWIN = -dynamic -dynamiclib -all_load
PRELOAD_LDFLAGS_X86_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -B/usr/lib32 -m32
PRELOAD_LDFLAGS_AMD64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_PPC32_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -B/usr/lib32 -m32
PRELOAD_LDFLAGS_PPC64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_X86_FREEBSD = $(PRELOAD_LDFLAGS_COMMON_FREEBSD) -B/usr/lib32 -m32
PRELOAD_LDFLAGS_AMD64_FREEBSD = $(PRELOAD_LDFLAGS_COMMON_FREEBSD) -m64
PRELOAD_LDFLAGS_ARM_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -B/usr/lib32 -m32
PRELOAD_LDFLAGS_X86_DARWIN = $(PRELOAD_LDFLAGS_COMMON_DARWIN) -arch i386
PRELOAD_LDFLAGS_AMD64_DARWIN = $(PRELOAD_LDFLAGS_COMMON_DARWIN) -arch x86_64
PRELOAD_LDFLAGS_S390X_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_MIPS32_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -B/usr/lib32 -m32

# so as to make sure these get copied into the tarball
EXTRA_DIST = m_debuginfo/UNUSED_STABS.txt m_debuginfo/README.txt \
	m_gdbserver/README_DEVELOPERS $(GDBSERVER_XML_FILES) \
	fixup_macho_loadcmds.c
#valgrind_SOURCES = \
#	launcher-darwin.c \
#	m_debuglog.c

valgrind_SOURCES = \
	launcher-freebsd.c \
	m_debuglog.c

#valgrind_SOURCES = \
#	launcher-linux.c \
#	m_debuglog.c

valgrind_CPPFLAGS = $(AM_CPPFLAGS_PRI)
valgrind_CFLAGS = $(AM_CFLAGS_PRI) $(am__append_3)
valgrind_CCASFLAGS = $(AM_CCASFLAGS_PRI) $(AM_CPPFLAGS_PRI)
valgrind_LDFLAGS = $(AM_CFLAGS_PRI) $(am__append_2) $(am__append_4)
vgdb_SOURCES = vgdb.c
vgdb_CPPFLAGS = $(AM_CPPFLAGS_PRI)
vgdb_CFLAGS = $(AM_CFLAGS_PRI) $(am__append_5)
vgdb_CCASFLAGS = $(AM_CCASFLAGS_PRI)
vgdb_LDFLAGS = $(AM_CFLAGS_PRI) $(am__append_6)
vgdb_LDADD = -lpthread

#----------------------------------------------------------------------------
# Darwin Mach stuff
#----------------------------------------------------------------------------

# Mach RPC interface definitions
# Here are some more .defs files that are not used, but could be in the
# future:
#	clock.defs \
#	clock_priv.defs \
#	clock_reply.defs \
#	exc.defs \
#	host_priv.defs \
#	host_security.defs \
#	ledger.defs \
#	lock_set.defs \
#	mach_host.defs \
#	mach_port.defs \
#	notify.defs \
#	processor.defs \
#	processor_set.defs \
#
mach_user_srcs = $(am__append_7)
mach_server_srcs = $(am__append_8)
mach_hdrs = $(am__append_9)
mach_defs = $(am__append_10)

#----------------------------------------------------------------------------
# Headers
#----------------------------------------------------------------------------
noinst_HEADERS = \
	pub_core_aspacehl.h	\
	pub_core_aspacemgr.h	\
	pub_core_basics.h	\
	pub_core_basics_asm.h	\
	pub_core_clientstate.h	\
	pub_core_clreq.h	\
	pub_core_commandline.h	\
	pub_core_coredump.h	\
	pub_core_cpuid.h	\
	pub_core_debuginfo.h	\
	pub_core_debugger.h	\
	pub_core_debuglog.h	\
	pub_core_demangle.h	\
	pub_core_dispatch.h	\
	pub_core_dispatch_asm.h	\
	pub_core_errormgr.h	\
	pub_core_execontext.h	\
	pub_core_gdbserver.h	\
	pub_core_hashtable.h	\
	pub_core_initimg.h	\
	pub_core_libcbase.h	\
	pub_core_libcassert.h	\
	pub_core_libcfile.h	\
	pub_core_libcprint.h	\
	pub_core_libcproc.h	\
	pub_core_libcsetjmp.h	\
	pub_core_libcsignal.h	\
	pub_core_mach.h		\
	pub_core_machine.h	\
	pub_core_mallocfree.h	\
	pub_core_options.h	\
	pub_core_oset.h		\
	pub_core_redir.h	\
	pub_core_replacemalloc.h\
	pub_core_scheduler.h	\
	pub_core_seqmatch.h	\
	pub_core_sigframe.h	\
	pub_core_signals.h	\
	pub_core_sparsewa.h	\
	pub_core_stacks.h	\
	pub_core_stacktrace.h	\
	pub_core_syscall.h	\
	pub_core_syswrap.h	\
	pub_core_threadstate.h	\
	pub_core_tooliface.h	\
	pub_core_trampoline.h	\
	pub_core_translate.h	\
	pub_core_transtab.h	\
	pub_core_transtab_asm.h	\
	pub_core_ume.h		\
	pub_core_vki.h		\
	pub_core_vkiscnums.h	\
	pub_core_vkiscnums_asm.h\
	pub_core_wordfm.h	\
	pub_core_xarray.h	\
	m_aspacemgr/priv_aspacemgr.h \
	m_debuginfo/priv_misc.h	\
	m_debuginfo/priv_storage.h	\
	m_debuginfo/priv_tytypes.h      \
	m_debuginfo/priv_readstabs.h	\
	m_debuginfo/priv_readpdb.h	\
	m_debuginfo/priv_d3basics.h	\
	m_debuginfo/priv_readdwarf.h	\
	m_debuginfo/priv_readdwarf3.h	\
	m_debuginfo/priv_readelf.h	\
	m_debuginfo/priv_readmacho.h	\
	m_demangle/ansidecl.h	\
	m_demangle/cp-demangle.h \
	m_demangle/dyn-string.h	\
	m_demangle/demangle.h	\
	m_demangle/safe-ctype.h \
	m_demangle/vg_libciface.h \
	m_gdbserver/regcache.h \
	m_gdbserver/regdef.h \
	m_gdbserver/server.h \
	m_gdbserver/target.h \
	m_gdbserver/valgrind_low.h \
	m_gdbserver/gdb/signals.h \
	m_initimg/priv_initimg_pathscan.h \
	m_initimg/simple_huffman.c \
	m_scheduler/priv_sema.h \
	m_scheduler/priv_sched-lock.h \
	m_scheduler/priv_sched-lock-impl.h \
	m_syswrap/priv_types_n_macros.h \
	m_syswrap/priv_syswrap-generic.h \
	m_syswrap/priv_syswrap-linux.h \
	m_syswrap/priv_syswrap-linux-variants.h \
	m_syswrap/priv_syswrap-darwin.h \
	m_syswrap/priv_syswrap-main.h \
	m_ume/priv_ume.h


#----------------------------------------------------------------------------
# libcoregrind-<platform>.a
#----------------------------------------------------------------------------
BUILT_SOURCES = $(mach_user_srcs) $(am__append_18)
CLEANFILES = $(mach_user_srcs) $(mach_server_srcs) $(mach_hdrs) \
	$(am__append_19)

#----------------------------------------------------------------------------
# libreplacemalloc_toolpreload-<platform>.a
#----------------------------------------------------------------------------
pkglib_LIBRARIES = libcoregrind-amd64-freebsd.a \
	$(am__append_11) \
	libreplacemalloc_toolpreload-amd64-freebsd.a \
	$(am__append_16)
COREGRIND_SOURCES_COMMON = \
	m_commandline.c \
	m_clientstate.c \
	m_cpuid.S \
	m_debugger.c \
	m_debuglog.c \
	m_errormgr.c \
	m_execontext.c \
	m_poolalloc.c \
	m_hashtable.c \
	m_libcbase.c \
	m_libcassert.c \
	m_libcfile.c \
	m_libcprint.c \
	m_libcproc.c \
	m_libcsetjmp.c \
	m_libcsignal.c \
	m_machine.c \
	m_main.c \
	m_mallocfree.c \
	m_options.c \
	m_oset.c \
	m_redir.c \
	m_seqmatch.c \
	m_signals.c \
	m_sparsewa.c \
	m_stacks.c \
	m_stacktrace.c \
	m_syscall.c \
	m_threadstate.c \
	m_tooliface.c \
	m_trampoline.S \
	m_translate.c \
	m_transtab.c \
	m_vki.c \
	m_vkiscnums.c \
	m_wordfm.c \
	m_xarray.c \
	m_aspacehl.c \
	m_aspacemgr/aspacemgr-common.c \
	m_aspacemgr/aspacemgr-linux.c \
	m_coredump/coredump-elf.c \
	m_coredump/coredump-macho.c \
	m_debuginfo/misc.c \
	m_debuginfo/d3basics.c \
	m_debuginfo/debuginfo.c \
	m_debuginfo/readdwarf.c \
	m_debuginfo/readdwarf3.c \
	m_debuginfo/readelf.c \
	m_debuginfo/readmacho.c \
	m_debuginfo/readpdb.c \
	m_debuginfo/readstabs.c \
	m_debuginfo/storage.c \
	m_debuginfo/tytypes.c \
	m_demangle/cp-demangle.c \
	m_demangle/cplus-dem.c \
	m_demangle/demangle.c \
	m_demangle/dyn-string.c \
	m_demangle/safe-ctype.c \
	m_dispatch/dispatch-x86-linux.S \
	m_dispatch/dispatch-amd64-linux.S \
	m_dispatch/dispatch-ppc32-linux.S \
	m_dispatch/dispatch-ppc64-linux.S \
	m_dispatch/dispatch-x86-freebsd.S \
	m_dispatch/dispatch-amd64-freebsd.S \
	m_dispatch/dispatch-arm-linux.S \
	m_dispatch/dispatch-s390x-linux.S \
	m_dispatch/dispatch-mips32-linux.S \
	m_dispatch/dispatch-x86-darwin.S \
	m_dispatch/dispatch-amd64-darwin.S \
	m_gdbserver/inferiors.c \
	m_gdbserver/m_gdbserver.c \
	m_gdbserver/regcache.c \
	m_gdbserver/remote-utils.c \
	m_gdbserver/server.c \
	m_gdbserver/signals.c \
	m_gdbserver/target.c \
	m_gdbserver/utils.c \
	m_gdbserver/valgrind-low-x86.c \
	m_gdbserver/valgrind-low-amd64.c \
	m_gdbserver/valgrind-low-arm.c \
	m_gdbserver/valgrind-low-ppc32.c \
	m_gdbserver/valgrind-low-ppc64.c \
	m_gdbserver/valgrind-low-s390x.c \
	m_gdbserver/valgrind-low-mips32.c \
	m_gdbserver/version.c \
	m_initimg/initimg-linux.c \
	m_initimg/initimg-freebsd.c \
	m_initimg/initimg-darwin.c \
	m_initimg/initimg-pathscan.c \
	m_mach/mach_basics.c \
	m_mach/mach_msg.c \
	m_mach/mach_traps-x86-darwin.S \
	m_mach/mach_traps-amd64-darwin.S \
	m_replacemalloc/replacemalloc_core.c \
	m_scheduler/scheduler.c \
	m_scheduler/sema.c \
	m_scheduler/sched-lock.c \
	m_scheduler/sched-lock-generic.c \
	m_sigframe/sigframe-x86-linux.c \
	m_sigframe/sigframe-amd64-linux.c \
	m_sigframe/sigframe-x86-freebsd.c \
	m_sigframe/sigframe-amd64-freebsd.c \
	m_sigframe/sigframe-ppc32-linux.c \
	m_sigframe/sigframe-ppc64-linux.c \
	m_sigframe/sigframe-arm-linux.c \
	m_sigframe/sigframe-s390x-linux.c \
	m_sigframe/sigframe-mips32-linux.c \
	m_sigframe/sigframe-x86-darwin.c \
	m_sigframe/sigframe-amd64-darwin.c \
	m_syswrap/syscall-x86-linux.S \
	m_syswrap/syscall-amd64-linux.S \
	m_syswrap/syscall-ppc32-linux.S \
	m_syswrap/syscall-ppc64-linux.S \
	m_syswrap/syscall-x86-freebsd.S \
	m_syswrap/syscall-amd64-freebsd.S \
	m_syswrap/syscall-arm-linux.S \
	m_syswrap/syscall-s390x-linux.S \
	m_syswrap/syscall-mips32-linux.S \
	m_syswrap/syscall-x86-darwin.S \
	m_syswrap/syscall-amd64-darwin.S \
	m_syswrap/syswrap-main.c \
	m_syswrap/syswrap-generic.c \
	m_syswrap/syswrap-linux.c \
	m_syswrap/syswrap-linux-variants.c \
	m_syswrap/syswrap-freebsd.c \
	m_syswrap/syswrap-freebsd-variants.c \
	m_syswrap/syswrap-darwin.c \
	m_syswrap/syswrap-x86-linux.c \
	m_syswrap/syswrap-amd64-linux.c \
	m_syswrap/syswrap-ppc32-linux.c \
	m_syswrap/syswrap-ppc64-linux.c \
	m_syswrap/syswrap-x86-freebsd.c \
	m_syswrap/syswrap-amd64-freebsd.c \
	m_syswrap/syswrap-arm-linux.c \
	m_syswrap/syswrap-s390x-linux.c \
	m_syswrap/syswrap-mips32-linux.c \
	m_syswrap/syswrap-x86-darwin.c \
	m_syswrap/syswrap-amd64-darwin.c \
	m_ume/elf.c \
	m_ume/macho.c \
	m_ume/main.c \
	m_ume/script.c

libcoregrind_amd64_freebsd_a_SOURCES =  \
	$(COREGRIND_SOURCES_COMMON) $(am__append_12)
nodist_libcoregrind_amd64_freebsd_a_SOURCES = \
    $(BUILT_SOURCES)

libcoregrind_amd64_freebsd_a_CPPFLAGS = \
    $(AM_CPPFLAGS_AMD64_FREEBSD)

libcoregrind_amd64_freebsd_a_CFLAGS =  \
	$(AM_CFLAGS_AMD64_FREEBSD) $(am__append_13)
libcoregrind_amd64_freebsd_a_CCASFLAGS = \
    $(AM_CCASFLAGS_AMD64_FREEBSD)

libcoregrind_x86_freebsd_a_SOURCES =  \
	$(COREGRIND_SOURCES_COMMON) \
	$(am__append_14)
nodist_libcoregrind_x86_freebsd_a_SOURCES = \
    $(BUILT_SOURCES)

libcoregrind_x86_freebsd_a_CPPFLAGS = \
    $(AM_CPPFLAGS_X86_FREEBSD)

libcoregrind_x86_freebsd_a_CFLAGS = $(AM_CFLAGS_X86_FREEBSD) \
	$(am__append_15)
libcoregrind_x86_freebsd_a_CCASFLAGS = \
    $(AM_CCASFLAGS_X86_FREEBSD)

libreplacemalloc_toolpreload_amd64_freebsd_a_SOURCES = \
	m_replacemalloc/vg_replace_malloc.c

libreplacemalloc_toolpreload_amd64_freebsd_a_CPPFLAGS = \
	$(AM_CPPFLAGS_AMD64_FREEBSD)

libreplacemalloc_toolpreload_amd64_freebsd_a_CFLAGS = \
	$(AM_CFLAGS_AMD64_FREEBSD) $(AM_CFLAGS_PIC)

libreplacemalloc_toolpreload_x86_freebsd_a_SOURCES = \
	m_replacemalloc/vg_replace_malloc.c

libreplacemalloc_toolpreload_x86_freebsd_a_CPPFLAGS = \
	$(AM_CPPFLAGS_X86_FREEBSD)

libreplacemalloc_toolpreload_x86_freebsd_a_CFLAGS = \
	$(AM_CFLAGS_X86_FREEBSD) $(AM_CFLAGS_PIC)

#noinst_DSYMS = $(noinst_PROGRAMS)
vgpreload_core_amd64_freebsd_so_SOURCES = vg_preloaded.c
vgpreload_core_amd64_freebsd_so_CPPFLAGS = \
	$(AM_CPPFLAGS_AMD64_FREEBSD)

vgpreload_core_amd64_freebsd_so_CFLAGS = \
	$(AM_CFLAGS_AMD64_FREEBSD) $(AM_CFLAGS_PIC)

vgpreload_core_amd64_freebsd_so_LDFLAGS = \
	$(PRELOAD_LDFLAGS_AMD64_FREEBSD)

vgpreload_core_x86_freebsd_so_SOURCES = vg_preloaded.c
vgpreload_core_x86_freebsd_so_CPPFLAGS = \
	$(AM_CPPFLAGS_X86_FREEBSD)

vgpreload_core_x86_freebsd_so_CFLAGS = \
	$(AM_CFLAGS_X86_FREEBSD) $(AM_CFLAGS_PIC)

vgpreload_core_x86_freebsd_so_LDFLAGS = \
	$(PRELOAD_LDFLAGS_X86_FREEBSD)


#----------------------------------------------------------------------------
# gdbserver xml target descriptions
#----------------------------------------------------------------------------
GDBSERVER_XML_FILES = \
	m_gdbserver/32bit-core-valgrind-s1.xml \
	m_gdbserver/32bit-core-valgrind-s2.xml \
	m_gdbserver/32bit-core.xml \
	m_gdbserver/32bit-linux-valgrind-s1.xml \
	m_gdbserver/32bit-linux-valgrind-s2.xml \
	m_gdbserver/32bit-linux.xml \
	m_gdbserver/32bit-sse-valgrind-s1.xml \
	m_gdbserver/32bit-sse-valgrind-s2.xml \
	m_gdbserver/32bit-sse.xml \
	m_gdbserver/64bit-avx-valgrind-s2.xml \
	m_gdbserver/64bit-avx-valgrind-s1.xml \
	m_gdbserver/64bit-avx.xml \
	m_gdbserver/64bit-core-valgrind-s1.xml \
	m_gdbserver/64bit-core-valgrind-s2.xml \
	m_gdbserver/64bit-core.xml \
	m_gdbserver/64bit-linux-valgrind-s1.xml \
	m_gdbserver/64bit-linux-valgrind-s2.xml \
	m_gdbserver/64bit-linux.xml \
	m_gdbserver/64bit-sse-valgrind-s1.xml \
	m_gdbserver/64bit-sse-valgrind-s2.xml \
	m_gdbserver/64bit-sse.xml \
	m_gdbserver/amd64-avx-coresse-valgrind.xml \
	m_gdbserver/amd64-avx-coresse.xml \
	m_gdbserver/amd64-avx-linux-valgrind.xml \
	m_gdbserver/amd64-avx-linux.xml \
	m_gdbserver/amd64-coresse-valgrind.xml \
	m_gdbserver/amd64-linux-valgrind.xml \
	m_gdbserver/arm-core-valgrind-s1.xml \
	m_gdbserver/arm-core-valgrind-s2.xml \
	m_gdbserver/arm-core.xml \
	m_gdbserver/arm-vfpv3-valgrind-s1.xml \
	m_gdbserver/arm-vfpv3-valgrind-s2.xml \
	m_gdbserver/arm-vfpv3.xml \
	m_gdbserver/arm-with-vfpv3-valgrind.xml \
	m_gdbserver/arm-with-vfpv3.xml \
	m_gdbserver/i386-coresse-valgrind.xml \
	m_gdbserver/i386-linux-valgrind.xml \
	m_gdbserver/power64-core-valgrind-s1.xml \
	m_gdbserver/power64-core-valgrind-s2.xml \
	m_gdbserver/power64-core.xml \
	m_gdbserver/power64-linux-valgrind-s1.xml \
	m_gdbserver/power64-linux-valgrind-s2.xml \
	m_gdbserver/power64-linux.xml \
	m_gdbserver/power-altivec-valgrind-s1.xml \
	m_gdbserver/power-altivec-valgrind-s2.xml \
	m_gdbserver/power-altivec.xml \
	m_gdbserver/power-core-valgrind-s1.xml \
	m_gdbserver/power-core-valgrind-s2.xml \
	m_gdbserver/power-core.xml \
	m_gdbserver/power-fpu-valgrind-s1.xml \
	m_gdbserver/power-fpu-valgrind-s2.xml \
	m_gdbserver/power-fpu.xml \
	m_gdbserver/power-linux-valgrind-s1.xml \
	m_gdbserver/power-linux-valgrind-s2.xml \
	m_gdbserver/power-linux.xml \
	m_gdbserver/powerpc-altivec32l-valgrind.xml \
	m_gdbserver/powerpc-altivec32l.xml \
	m_gdbserver/powerpc-altivec64l-valgrind.xml \
	m_gdbserver/powerpc-altivec64l.xml \
	m_gdbserver/s390-acr-valgrind-s1.xml \
	m_gdbserver/s390-acr-valgrind-s2.xml \
	m_gdbserver/s390-acr.xml \
	m_gdbserver/s390-fpr-valgrind-s1.xml \
	m_gdbserver/s390-fpr-valgrind-s2.xml \
	m_gdbserver/s390-fpr.xml \
	m_gdbserver/s390x-core64-valgrind-s1.xml \
	m_gdbserver/s390x-core64-valgrind-s2.xml \
	m_gdbserver/s390x-core64.xml \
	m_gdbserver/s390x-generic-valgrind.xml \
	m_gdbserver/s390x-generic.xml \
	m_gdbserver/s390x-linux64-valgrind-s1.xml \
	m_gdbserver/s390x-linux64-valgrind-s2.xml \
	m_gdbserver/s390x-linux64.xml \
	m_gdbserver/mips-cp0-valgrind-s1.xml \
	m_gdbserver/mips-cp0-valgrind-s2.xml \
	m_gdbserver/mips-cp0.xml \
	m_gdbserver/mips-cpu-valgrind-s1.xml \
	m_gdbserver/mips-cpu-valgrind-s2.xml \
	m_gdbserver/mips-cpu.xml \
	m_gdbserver/mips-linux.xml \
	m_gdbserver/mips-linux-valgrind.xml \
	m_gdbserver/mips-fpu-valgrind-s1.xml \
	m_gdbserver/mips-fpu-valgrind-s2.xml \
	m_gdbserver/mips-fpu.xml


# so as to make sure these get copied into the install tree
vglibdir = $(pkglibdir)
vglib_DATA = $(GDBSERVER_XML_FILES)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .S .c .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/Makefile.all.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign coregrind/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign coregrind/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Makefile.all.am:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
link_tool_exe_linux: $(top_builddir)/config.status $(srcdir)/link_tool_exe_linux.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
link_tool_exe_freebsd: $(top_builddir)/config.status $(srcdir)/link_tool_exe_freebsd.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
link_tool_exe_darwin: $(top_builddir)/config.status $(srcdir)/link_tool_exe_darwin.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-pkglibLIBRARIES: $(pkglib_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(pkglib_LIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkglibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkglibdir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(pkglibdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(pkglibdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(pkglib_LIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(pkglibdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(pkglibdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-pkglibLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglib_LIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkglibdir)'; $(am__uninstall_files_from_dir)

clean-pkglibLIBRARIES:
	-test -z "$(pkglib_LIBRARIES)" || rm -f $(pkglib_LIBRARIES)
libcoregrind-amd64-freebsd.a: $(libcoregrind_amd64_freebsd_a_OBJECTS) $(libcoregrind_amd64_freebsd_a_DEPENDENCIES) $(EXTRA_libcoregrind_amd64_freebsd_a_DEPENDENCIES) 
	-rm -f libcoregrind-amd64-freebsd.a
	$(libcoregrind_amd64_freebsd_a_AR) libcoregrind-amd64-freebsd.a $(libcoregrind_amd64_freebsd_a_OBJECTS) $(libcoregrind_amd64_freebsd_a_LIBADD)
	$(RANLIB) libcoregrind-amd64-freebsd.a
libcoregrind-x86-freebsd.a: $(libcoregrind_x86_freebsd_a_OBJECTS) $(libcoregrind_x86_freebsd_a_DEPENDENCIES) $(EXTRA_libcoregrind_x86_freebsd_a_DEPENDENCIES) 
	-rm -f libcoregrind-x86-freebsd.a
	$(libcoregrind_x86_freebsd_a_AR) libcoregrind-x86-freebsd.a $(libcoregrind_x86_freebsd_a_OBJECTS) $(libcoregrind_x86_freebsd_a_LIBADD)
	$(RANLIB) libcoregrind-x86-freebsd.a
libreplacemalloc_toolpreload-amd64-freebsd.a: $(libreplacemalloc_toolpreload_amd64_freebsd_a_OBJECTS) $(libreplacemalloc_toolpreload_amd64_freebsd_a_DEPENDENCIES) $(EXTRA_libreplacemalloc_toolpreload_amd64_freebsd_a_DEPENDENCIES) 
	-rm -f libreplacemalloc_toolpreload-amd64-freebsd.a
	$(libreplacemalloc_toolpreload_amd64_freebsd_a_AR) libreplacemalloc_toolpreload-amd64-freebsd.a $(libreplacemalloc_toolpreload_amd64_freebsd_a_OBJECTS) $(libreplacemalloc_toolpreload_amd64_freebsd_a_LIBADD)
	$(RANLIB) libreplacemalloc_toolpreload-amd64-freebsd.a
libreplacemalloc_toolpreload-x86-freebsd.a: $(libreplacemalloc_toolpreload_x86_freebsd_a_OBJECTS) $(libreplacemalloc_toolpreload_x86_freebsd_a_DEPENDENCIES) $(EXTRA_libreplacemalloc_toolpreload_x86_freebsd_a_DEPENDENCIES) 
	-rm -f libreplacemalloc_toolpreload-x86-freebsd.a
	$(libreplacemalloc_toolpreload_x86_freebsd_a_AR) libreplacemalloc_toolpreload-x86-freebsd.a $(libreplacemalloc_toolpreload_x86_freebsd_a_OBJECTS) $(libreplacemalloc_toolpreload_x86_freebsd_a_LIBADD)
	$(RANLIB) libreplacemalloc_toolpreload-x86-freebsd.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
valgrind$(EXEEXT): $(valgrind_OBJECTS) $(valgrind_DEPENDENCIES) $(EXTRA_valgrind_DEPENDENCIES) 
	@rm -f valgrind$(EXEEXT)
	$(valgrind_LINK) $(valgrind_OBJECTS) $(valgrind_LDADD) $(LIBS)
vgdb$(EXEEXT): $(vgdb_OBJECTS) $(vgdb_DEPENDENCIES) $(EXTRA_vgdb_DEPENDENCIES) 
	@rm -f vgdb$(EXEEXT)
	$(vgdb_LINK) $(vgdb_OBJECTS) $(vgdb_LDADD) $(LIBS)
vgpreload_core-amd64-freebsd.so$(EXEEXT): $(vgpreload_core_amd64_freebsd_so_OBJECTS) $(vgpreload_core_amd64_freebsd_so_DEPENDENCIES) $(EXTRA_vgpreload_core_amd64_freebsd_so_DEPENDENCIES) 
	@rm -f vgpreload_core-amd64-freebsd.so$(EXEEXT)
	$(vgpreload_core_amd64_freebsd_so_LINK) $(vgpreload_core_amd64_freebsd_so_OBJECTS) $(vgpreload_core_amd64_freebsd_so_LDADD) $(LIBS)
vgpreload_core-x86-freebsd.so$(EXEEXT): $(vgpreload_core_x86_freebsd_so_OBJECTS) $(vgpreload_core_x86_freebsd_so_DEPENDENCIES) $(EXTRA_vgpreload_core_x86_freebsd_so_DEPENDENCIES) 
	@rm -f vgpreload_core-x86-freebsd.so$(EXEEXT)
	$(vgpreload_core_x86_freebsd_so_LINK) $(vgpreload_core_x86_freebsd_so_OBJECTS) $(vgpreload_core_x86_freebsd_so_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-aspacemgr-common.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-aspacemgr-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-coredump-elf.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-coredump-macho.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-cp-demangle.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-cplus-dem.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-d3basics.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-debuginfo.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-demangle.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-amd64-darwin.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-amd64-freebsd.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-amd64-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-arm-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-mips32-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-ppc32-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-ppc64-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-s390x-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-x86-darwin.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-x86-freebsd.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-x86-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-dyn-string.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-elf.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-inferiors.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-darwin.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-freebsd.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-pathscan.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_aspacehl.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_clientstate.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_commandline.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_cpuid.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_debugger.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_debuglog.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_errormgr.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_execontext.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_gdbserver.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_hashtable.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcassert.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcbase.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcfile.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcprint.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcproc.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcsetjmp.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcsignal.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_machine.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_main.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_mallocfree.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_options.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_oset.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_poolalloc.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_redir.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_seqmatch.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_signals.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_sparsewa.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_stacks.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_stacktrace.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_syscall.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_threadstate.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_tooliface.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_trampoline.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_translate.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_transtab.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_vki.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_vkiscnums.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_wordfm.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-m_xarray.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_basics.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_msg.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_traps-amd64-darwin.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_traps-x86-darwin.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_vmUser.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-macho.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-main.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-misc.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-readdwarf.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-readdwarf3.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-readelf.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-readmacho.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-readpdb.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-readstabs.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-regcache.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-remote-utils.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-replacemalloc_core.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-safe-ctype.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-sched-lock-generic.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-sched-lock.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-scheduler.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-script.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-sema.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-server.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-amd64-darwin.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-amd64-freebsd.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-amd64-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-arm-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-mips32-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-ppc32-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-ppc64-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-s390x-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-x86-darwin.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-x86-freebsd.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-x86-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-signals.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-storage.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-amd64-darwin.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-amd64-freebsd.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-amd64-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-arm-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-mips32-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-ppc32-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-ppc64-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-s390x-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-x86-darwin.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-x86-freebsd.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-x86-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-amd64-darwin.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-amd64-freebsd.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-amd64-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-arm-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-darwin.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-freebsd-variants.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-freebsd.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-generic.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-linux-variants.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-main.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-mips32-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-ppc32-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-ppc64-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-s390x-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-x86-darwin.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-x86-freebsd.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-x86-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-target.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-taskUser.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-thread_actUser.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-ticket-lock-linux.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-tytypes.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-utils.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-amd64.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-arm.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-mips32.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-ppc32.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-ppc64.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-s390x.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-x86.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-version.Po
include ./$(DEPDIR)/libcoregrind_amd64_freebsd_a-vm_mapUser.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-aspacemgr-common.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-aspacemgr-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-coredump-elf.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-coredump-macho.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-cp-demangle.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-cplus-dem.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-d3basics.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-debuginfo.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-demangle.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-amd64-darwin.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-amd64-freebsd.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-amd64-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-arm-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-mips32-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-ppc32-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-ppc64-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-s390x-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-x86-darwin.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-x86-freebsd.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-x86-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-dyn-string.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-elf.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-inferiors.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-darwin.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-freebsd.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-pathscan.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_aspacehl.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_clientstate.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_commandline.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_cpuid.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_debugger.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_debuglog.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_errormgr.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_execontext.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_gdbserver.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_hashtable.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcassert.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcbase.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcfile.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcprint.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcproc.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcsetjmp.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcsignal.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_machine.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_main.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_mallocfree.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_options.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_oset.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_poolalloc.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_redir.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_seqmatch.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_signals.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_sparsewa.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_stacks.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_stacktrace.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_syscall.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_threadstate.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_tooliface.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_trampoline.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_translate.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_transtab.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_vki.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_vkiscnums.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_wordfm.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-m_xarray.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-mach_basics.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-mach_msg.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-mach_traps-amd64-darwin.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-mach_traps-x86-darwin.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-mach_vmUser.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-macho.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-main.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-misc.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-readdwarf.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-readdwarf3.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-readelf.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-readmacho.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-readpdb.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-readstabs.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-regcache.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-remote-utils.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-replacemalloc_core.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-safe-ctype.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-sched-lock-generic.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-sched-lock.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-scheduler.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-script.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-sema.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-server.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-amd64-darwin.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-amd64-freebsd.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-amd64-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-arm-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-mips32-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-ppc32-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-ppc64-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-s390x-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-x86-darwin.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-x86-freebsd.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-x86-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-signals.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-storage.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-amd64-darwin.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-amd64-freebsd.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-amd64-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-arm-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-mips32-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-ppc32-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-ppc64-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-s390x-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-x86-darwin.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-x86-freebsd.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-x86-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-amd64-darwin.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-amd64-freebsd.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-amd64-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-arm-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-darwin.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-freebsd-variants.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-freebsd.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-generic.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-linux-variants.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-main.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-mips32-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-ppc32-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-ppc64-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-s390x-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-x86-darwin.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-x86-freebsd.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-x86-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-target.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-taskUser.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-thread_actUser.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-ticket-lock-linux.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-tytypes.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-utils.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-amd64.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-arm.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-mips32.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-ppc32.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-ppc64.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-s390x.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-x86.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-version.Po
include ./$(DEPDIR)/libcoregrind_x86_freebsd_a-vm_mapUser.Po
include ./$(DEPDIR)/libreplacemalloc_toolpreload_amd64_freebsd_a-vg_replace_malloc.Po
include ./$(DEPDIR)/libreplacemalloc_toolpreload_x86_freebsd_a-vg_replace_malloc.Po
include ./$(DEPDIR)/valgrind-launcher-darwin.Po
include ./$(DEPDIR)/valgrind-launcher-freebsd.Po
include ./$(DEPDIR)/valgrind-launcher-linux.Po
include ./$(DEPDIR)/valgrind-m_debuglog.Po
include ./$(DEPDIR)/vgdb-vgdb.Po
include ./$(DEPDIR)/vgpreload_core_amd64_freebsd_so-vg_preloaded.Po
include ./$(DEPDIR)/vgpreload_core_x86_freebsd_so-vg_preloaded.Po

.S.o:
	$(CPPASCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CPPASCOMPILE) -c -o $@ $<

.S.obj:
	$(CPPASCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CPPASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libcoregrind_amd64_freebsd_a-m_cpuid.o: m_cpuid.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-m_cpuid.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_cpuid.Tpo -c -o libcoregrind_amd64_freebsd_a-m_cpuid.o `test -f 'm_cpuid.S' || echo '$(srcdir)/'`m_cpuid.S
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_cpuid.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_cpuid.Po
#	source='m_cpuid.S' object='libcoregrind_amd64_freebsd_a-m_cpuid.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_cpuid.o `test -f 'm_cpuid.S' || echo '$(srcdir)/'`m_cpuid.S

libcoregrind_amd64_freebsd_a-m_cpuid.obj: m_cpuid.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-m_cpuid.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_cpuid.Tpo -c -o libcoregrind_amd64_freebsd_a-m_cpuid.obj `if test -f 'm_cpuid.S'; then $(CYGPATH_W) 'm_cpuid.S'; else $(CYGPATH_W) '$(srcdir)/m_cpuid.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_cpuid.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_cpuid.Po
#	source='m_cpuid.S' object='libcoregrind_amd64_freebsd_a-m_cpuid.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_cpuid.obj `if test -f 'm_cpuid.S'; then $(CYGPATH_W) 'm_cpuid.S'; else $(CYGPATH_W) '$(srcdir)/m_cpuid.S'; fi`

libcoregrind_amd64_freebsd_a-m_trampoline.o: m_trampoline.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-m_trampoline.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_trampoline.Tpo -c -o libcoregrind_amd64_freebsd_a-m_trampoline.o `test -f 'm_trampoline.S' || echo '$(srcdir)/'`m_trampoline.S
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_trampoline.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_trampoline.Po
#	source='m_trampoline.S' object='libcoregrind_amd64_freebsd_a-m_trampoline.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_trampoline.o `test -f 'm_trampoline.S' || echo '$(srcdir)/'`m_trampoline.S

libcoregrind_amd64_freebsd_a-m_trampoline.obj: m_trampoline.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-m_trampoline.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_trampoline.Tpo -c -o libcoregrind_amd64_freebsd_a-m_trampoline.obj `if test -f 'm_trampoline.S'; then $(CYGPATH_W) 'm_trampoline.S'; else $(CYGPATH_W) '$(srcdir)/m_trampoline.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_trampoline.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_trampoline.Po
#	source='m_trampoline.S' object='libcoregrind_amd64_freebsd_a-m_trampoline.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_trampoline.obj `if test -f 'm_trampoline.S'; then $(CYGPATH_W) 'm_trampoline.S'; else $(CYGPATH_W) '$(srcdir)/m_trampoline.S'; fi`

libcoregrind_amd64_freebsd_a-dispatch-x86-linux.o: m_dispatch/dispatch-x86-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-dispatch-x86-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-x86-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-dispatch-x86-linux.o `test -f 'm_dispatch/dispatch-x86-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-x86-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-x86-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-x86-linux.Po
#	source='m_dispatch/dispatch-x86-linux.S' object='libcoregrind_amd64_freebsd_a-dispatch-x86-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-dispatch-x86-linux.o `test -f 'm_dispatch/dispatch-x86-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-x86-linux.S

libcoregrind_amd64_freebsd_a-dispatch-x86-linux.obj: m_dispatch/dispatch-x86-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-dispatch-x86-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-x86-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-dispatch-x86-linux.obj `if test -f 'm_dispatch/dispatch-x86-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-x86-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-x86-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-x86-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-x86-linux.Po
#	source='m_dispatch/dispatch-x86-linux.S' object='libcoregrind_amd64_freebsd_a-dispatch-x86-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-dispatch-x86-linux.obj `if test -f 'm_dispatch/dispatch-x86-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-x86-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-x86-linux.S'; fi`

libcoregrind_amd64_freebsd_a-dispatch-amd64-linux.o: m_dispatch/dispatch-amd64-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-dispatch-amd64-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-amd64-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-dispatch-amd64-linux.o `test -f 'm_dispatch/dispatch-amd64-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-amd64-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-amd64-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-amd64-linux.Po
#	source='m_dispatch/dispatch-amd64-linux.S' object='libcoregrind_amd64_freebsd_a-dispatch-amd64-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-dispatch-amd64-linux.o `test -f 'm_dispatch/dispatch-amd64-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-amd64-linux.S

libcoregrind_amd64_freebsd_a-dispatch-amd64-linux.obj: m_dispatch/dispatch-amd64-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-dispatch-amd64-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-amd64-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-dispatch-amd64-linux.obj `if test -f 'm_dispatch/dispatch-amd64-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-amd64-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-amd64-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-amd64-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-amd64-linux.Po
#	source='m_dispatch/dispatch-amd64-linux.S' object='libcoregrind_amd64_freebsd_a-dispatch-amd64-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-dispatch-amd64-linux.obj `if test -f 'm_dispatch/dispatch-amd64-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-amd64-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-amd64-linux.S'; fi`

libcoregrind_amd64_freebsd_a-dispatch-ppc32-linux.o: m_dispatch/dispatch-ppc32-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-dispatch-ppc32-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-ppc32-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-dispatch-ppc32-linux.o `test -f 'm_dispatch/dispatch-ppc32-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-ppc32-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-ppc32-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-ppc32-linux.Po
#	source='m_dispatch/dispatch-ppc32-linux.S' object='libcoregrind_amd64_freebsd_a-dispatch-ppc32-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-dispatch-ppc32-linux.o `test -f 'm_dispatch/dispatch-ppc32-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-ppc32-linux.S

libcoregrind_amd64_freebsd_a-dispatch-ppc32-linux.obj: m_dispatch/dispatch-ppc32-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-dispatch-ppc32-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-ppc32-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-dispatch-ppc32-linux.obj `if test -f 'm_dispatch/dispatch-ppc32-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-ppc32-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-ppc32-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-ppc32-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-ppc32-linux.Po
#	source='m_dispatch/dispatch-ppc32-linux.S' object='libcoregrind_amd64_freebsd_a-dispatch-ppc32-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-dispatch-ppc32-linux.obj `if test -f 'm_dispatch/dispatch-ppc32-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-ppc32-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-ppc32-linux.S'; fi`

libcoregrind_amd64_freebsd_a-dispatch-ppc64-linux.o: m_dispatch/dispatch-ppc64-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-dispatch-ppc64-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-ppc64-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-dispatch-ppc64-linux.o `test -f 'm_dispatch/dispatch-ppc64-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-ppc64-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-ppc64-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-ppc64-linux.Po
#	source='m_dispatch/dispatch-ppc64-linux.S' object='libcoregrind_amd64_freebsd_a-dispatch-ppc64-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-dispatch-ppc64-linux.o `test -f 'm_dispatch/dispatch-ppc64-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-ppc64-linux.S

libcoregrind_amd64_freebsd_a-dispatch-ppc64-linux.obj: m_dispatch/dispatch-ppc64-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-dispatch-ppc64-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-ppc64-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-dispatch-ppc64-linux.obj `if test -f 'm_dispatch/dispatch-ppc64-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-ppc64-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-ppc64-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-ppc64-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-ppc64-linux.Po
#	source='m_dispatch/dispatch-ppc64-linux.S' object='libcoregrind_amd64_freebsd_a-dispatch-ppc64-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-dispatch-ppc64-linux.obj `if test -f 'm_dispatch/dispatch-ppc64-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-ppc64-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-ppc64-linux.S'; fi`

libcoregrind_amd64_freebsd_a-dispatch-x86-freebsd.o: m_dispatch/dispatch-x86-freebsd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-dispatch-x86-freebsd.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-x86-freebsd.Tpo -c -o libcoregrind_amd64_freebsd_a-dispatch-x86-freebsd.o `test -f 'm_dispatch/dispatch-x86-freebsd.S' || echo '$(srcdir)/'`m_dispatch/dispatch-x86-freebsd.S
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-x86-freebsd.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-x86-freebsd.Po
#	source='m_dispatch/dispatch-x86-freebsd.S' object='libcoregrind_amd64_freebsd_a-dispatch-x86-freebsd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-dispatch-x86-freebsd.o `test -f 'm_dispatch/dispatch-x86-freebsd.S' || echo '$(srcdir)/'`m_dispatch/dispatch-x86-freebsd.S

libcoregrind_amd64_freebsd_a-dispatch-x86-freebsd.obj: m_dispatch/dispatch-x86-freebsd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-dispatch-x86-freebsd.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-x86-freebsd.Tpo -c -o libcoregrind_amd64_freebsd_a-dispatch-x86-freebsd.obj `if test -f 'm_dispatch/dispatch-x86-freebsd.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-x86-freebsd.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-x86-freebsd.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-x86-freebsd.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-x86-freebsd.Po
#	source='m_dispatch/dispatch-x86-freebsd.S' object='libcoregrind_amd64_freebsd_a-dispatch-x86-freebsd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-dispatch-x86-freebsd.obj `if test -f 'm_dispatch/dispatch-x86-freebsd.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-x86-freebsd.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-x86-freebsd.S'; fi`

libcoregrind_amd64_freebsd_a-dispatch-amd64-freebsd.o: m_dispatch/dispatch-amd64-freebsd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-dispatch-amd64-freebsd.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-amd64-freebsd.Tpo -c -o libcoregrind_amd64_freebsd_a-dispatch-amd64-freebsd.o `test -f 'm_dispatch/dispatch-amd64-freebsd.S' || echo '$(srcdir)/'`m_dispatch/dispatch-amd64-freebsd.S
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-amd64-freebsd.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-amd64-freebsd.Po
#	source='m_dispatch/dispatch-amd64-freebsd.S' object='libcoregrind_amd64_freebsd_a-dispatch-amd64-freebsd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-dispatch-amd64-freebsd.o `test -f 'm_dispatch/dispatch-amd64-freebsd.S' || echo '$(srcdir)/'`m_dispatch/dispatch-amd64-freebsd.S

libcoregrind_amd64_freebsd_a-dispatch-amd64-freebsd.obj: m_dispatch/dispatch-amd64-freebsd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-dispatch-amd64-freebsd.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-amd64-freebsd.Tpo -c -o libcoregrind_amd64_freebsd_a-dispatch-amd64-freebsd.obj `if test -f 'm_dispatch/dispatch-amd64-freebsd.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-amd64-freebsd.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-amd64-freebsd.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-amd64-freebsd.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-amd64-freebsd.Po
#	source='m_dispatch/dispatch-amd64-freebsd.S' object='libcoregrind_amd64_freebsd_a-dispatch-amd64-freebsd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-dispatch-amd64-freebsd.obj `if test -f 'm_dispatch/dispatch-amd64-freebsd.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-amd64-freebsd.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-amd64-freebsd.S'; fi`

libcoregrind_amd64_freebsd_a-dispatch-arm-linux.o: m_dispatch/dispatch-arm-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-dispatch-arm-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-arm-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-dispatch-arm-linux.o `test -f 'm_dispatch/dispatch-arm-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-arm-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-arm-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-arm-linux.Po
#	source='m_dispatch/dispatch-arm-linux.S' object='libcoregrind_amd64_freebsd_a-dispatch-arm-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-dispatch-arm-linux.o `test -f 'm_dispatch/dispatch-arm-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-arm-linux.S

libcoregrind_amd64_freebsd_a-dispatch-arm-linux.obj: m_dispatch/dispatch-arm-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-dispatch-arm-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-arm-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-dispatch-arm-linux.obj `if test -f 'm_dispatch/dispatch-arm-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-arm-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-arm-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-arm-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-arm-linux.Po
#	source='m_dispatch/dispatch-arm-linux.S' object='libcoregrind_amd64_freebsd_a-dispatch-arm-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-dispatch-arm-linux.obj `if test -f 'm_dispatch/dispatch-arm-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-arm-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-arm-linux.S'; fi`

libcoregrind_amd64_freebsd_a-dispatch-s390x-linux.o: m_dispatch/dispatch-s390x-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-dispatch-s390x-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-s390x-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-dispatch-s390x-linux.o `test -f 'm_dispatch/dispatch-s390x-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-s390x-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-s390x-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-s390x-linux.Po
#	source='m_dispatch/dispatch-s390x-linux.S' object='libcoregrind_amd64_freebsd_a-dispatch-s390x-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-dispatch-s390x-linux.o `test -f 'm_dispatch/dispatch-s390x-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-s390x-linux.S

libcoregrind_amd64_freebsd_a-dispatch-s390x-linux.obj: m_dispatch/dispatch-s390x-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-dispatch-s390x-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-s390x-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-dispatch-s390x-linux.obj `if test -f 'm_dispatch/dispatch-s390x-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-s390x-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-s390x-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-s390x-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-s390x-linux.Po
#	source='m_dispatch/dispatch-s390x-linux.S' object='libcoregrind_amd64_freebsd_a-dispatch-s390x-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-dispatch-s390x-linux.obj `if test -f 'm_dispatch/dispatch-s390x-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-s390x-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-s390x-linux.S'; fi`

libcoregrind_amd64_freebsd_a-dispatch-mips32-linux.o: m_dispatch/dispatch-mips32-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-dispatch-mips32-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-mips32-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-dispatch-mips32-linux.o `test -f 'm_dispatch/dispatch-mips32-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-mips32-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-mips32-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-mips32-linux.Po
#	source='m_dispatch/dispatch-mips32-linux.S' object='libcoregrind_amd64_freebsd_a-dispatch-mips32-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-dispatch-mips32-linux.o `test -f 'm_dispatch/dispatch-mips32-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-mips32-linux.S

libcoregrind_amd64_freebsd_a-dispatch-mips32-linux.obj: m_dispatch/dispatch-mips32-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-dispatch-mips32-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-mips32-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-dispatch-mips32-linux.obj `if test -f 'm_dispatch/dispatch-mips32-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-mips32-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-mips32-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-mips32-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-mips32-linux.Po
#	source='m_dispatch/dispatch-mips32-linux.S' object='libcoregrind_amd64_freebsd_a-dispatch-mips32-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-dispatch-mips32-linux.obj `if test -f 'm_dispatch/dispatch-mips32-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-mips32-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-mips32-linux.S'; fi`

libcoregrind_amd64_freebsd_a-dispatch-x86-darwin.o: m_dispatch/dispatch-x86-darwin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-dispatch-x86-darwin.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-x86-darwin.Tpo -c -o libcoregrind_amd64_freebsd_a-dispatch-x86-darwin.o `test -f 'm_dispatch/dispatch-x86-darwin.S' || echo '$(srcdir)/'`m_dispatch/dispatch-x86-darwin.S
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-x86-darwin.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-x86-darwin.Po
#	source='m_dispatch/dispatch-x86-darwin.S' object='libcoregrind_amd64_freebsd_a-dispatch-x86-darwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-dispatch-x86-darwin.o `test -f 'm_dispatch/dispatch-x86-darwin.S' || echo '$(srcdir)/'`m_dispatch/dispatch-x86-darwin.S

libcoregrind_amd64_freebsd_a-dispatch-x86-darwin.obj: m_dispatch/dispatch-x86-darwin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-dispatch-x86-darwin.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-x86-darwin.Tpo -c -o libcoregrind_amd64_freebsd_a-dispatch-x86-darwin.obj `if test -f 'm_dispatch/dispatch-x86-darwin.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-x86-darwin.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-x86-darwin.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-x86-darwin.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-x86-darwin.Po
#	source='m_dispatch/dispatch-x86-darwin.S' object='libcoregrind_amd64_freebsd_a-dispatch-x86-darwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-dispatch-x86-darwin.obj `if test -f 'm_dispatch/dispatch-x86-darwin.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-x86-darwin.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-x86-darwin.S'; fi`

libcoregrind_amd64_freebsd_a-dispatch-amd64-darwin.o: m_dispatch/dispatch-amd64-darwin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-dispatch-amd64-darwin.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-amd64-darwin.Tpo -c -o libcoregrind_amd64_freebsd_a-dispatch-amd64-darwin.o `test -f 'm_dispatch/dispatch-amd64-darwin.S' || echo '$(srcdir)/'`m_dispatch/dispatch-amd64-darwin.S
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-amd64-darwin.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-amd64-darwin.Po
#	source='m_dispatch/dispatch-amd64-darwin.S' object='libcoregrind_amd64_freebsd_a-dispatch-amd64-darwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-dispatch-amd64-darwin.o `test -f 'm_dispatch/dispatch-amd64-darwin.S' || echo '$(srcdir)/'`m_dispatch/dispatch-amd64-darwin.S

libcoregrind_amd64_freebsd_a-dispatch-amd64-darwin.obj: m_dispatch/dispatch-amd64-darwin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-dispatch-amd64-darwin.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-amd64-darwin.Tpo -c -o libcoregrind_amd64_freebsd_a-dispatch-amd64-darwin.obj `if test -f 'm_dispatch/dispatch-amd64-darwin.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-amd64-darwin.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-amd64-darwin.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-amd64-darwin.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-dispatch-amd64-darwin.Po
#	source='m_dispatch/dispatch-amd64-darwin.S' object='libcoregrind_amd64_freebsd_a-dispatch-amd64-darwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-dispatch-amd64-darwin.obj `if test -f 'm_dispatch/dispatch-amd64-darwin.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-amd64-darwin.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-amd64-darwin.S'; fi`

libcoregrind_amd64_freebsd_a-mach_traps-x86-darwin.o: m_mach/mach_traps-x86-darwin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-mach_traps-x86-darwin.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_traps-x86-darwin.Tpo -c -o libcoregrind_amd64_freebsd_a-mach_traps-x86-darwin.o `test -f 'm_mach/mach_traps-x86-darwin.S' || echo '$(srcdir)/'`m_mach/mach_traps-x86-darwin.S
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_traps-x86-darwin.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_traps-x86-darwin.Po
#	source='m_mach/mach_traps-x86-darwin.S' object='libcoregrind_amd64_freebsd_a-mach_traps-x86-darwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-mach_traps-x86-darwin.o `test -f 'm_mach/mach_traps-x86-darwin.S' || echo '$(srcdir)/'`m_mach/mach_traps-x86-darwin.S

libcoregrind_amd64_freebsd_a-mach_traps-x86-darwin.obj: m_mach/mach_traps-x86-darwin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-mach_traps-x86-darwin.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_traps-x86-darwin.Tpo -c -o libcoregrind_amd64_freebsd_a-mach_traps-x86-darwin.obj `if test -f 'm_mach/mach_traps-x86-darwin.S'; then $(CYGPATH_W) 'm_mach/mach_traps-x86-darwin.S'; else $(CYGPATH_W) '$(srcdir)/m_mach/mach_traps-x86-darwin.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_traps-x86-darwin.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_traps-x86-darwin.Po
#	source='m_mach/mach_traps-x86-darwin.S' object='libcoregrind_amd64_freebsd_a-mach_traps-x86-darwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-mach_traps-x86-darwin.obj `if test -f 'm_mach/mach_traps-x86-darwin.S'; then $(CYGPATH_W) 'm_mach/mach_traps-x86-darwin.S'; else $(CYGPATH_W) '$(srcdir)/m_mach/mach_traps-x86-darwin.S'; fi`

libcoregrind_amd64_freebsd_a-mach_traps-amd64-darwin.o: m_mach/mach_traps-amd64-darwin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-mach_traps-amd64-darwin.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_traps-amd64-darwin.Tpo -c -o libcoregrind_amd64_freebsd_a-mach_traps-amd64-darwin.o `test -f 'm_mach/mach_traps-amd64-darwin.S' || echo '$(srcdir)/'`m_mach/mach_traps-amd64-darwin.S
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_traps-amd64-darwin.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_traps-amd64-darwin.Po
#	source='m_mach/mach_traps-amd64-darwin.S' object='libcoregrind_amd64_freebsd_a-mach_traps-amd64-darwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-mach_traps-amd64-darwin.o `test -f 'm_mach/mach_traps-amd64-darwin.S' || echo '$(srcdir)/'`m_mach/mach_traps-amd64-darwin.S

libcoregrind_amd64_freebsd_a-mach_traps-amd64-darwin.obj: m_mach/mach_traps-amd64-darwin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-mach_traps-amd64-darwin.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_traps-amd64-darwin.Tpo -c -o libcoregrind_amd64_freebsd_a-mach_traps-amd64-darwin.obj `if test -f 'm_mach/mach_traps-amd64-darwin.S'; then $(CYGPATH_W) 'm_mach/mach_traps-amd64-darwin.S'; else $(CYGPATH_W) '$(srcdir)/m_mach/mach_traps-amd64-darwin.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_traps-amd64-darwin.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_traps-amd64-darwin.Po
#	source='m_mach/mach_traps-amd64-darwin.S' object='libcoregrind_amd64_freebsd_a-mach_traps-amd64-darwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-mach_traps-amd64-darwin.obj `if test -f 'm_mach/mach_traps-amd64-darwin.S'; then $(CYGPATH_W) 'm_mach/mach_traps-amd64-darwin.S'; else $(CYGPATH_W) '$(srcdir)/m_mach/mach_traps-amd64-darwin.S'; fi`

libcoregrind_amd64_freebsd_a-syscall-x86-linux.o: m_syswrap/syscall-x86-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-syscall-x86-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-x86-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syscall-x86-linux.o `test -f 'm_syswrap/syscall-x86-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-x86-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-x86-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-x86-linux.Po
#	source='m_syswrap/syscall-x86-linux.S' object='libcoregrind_amd64_freebsd_a-syscall-x86-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-syscall-x86-linux.o `test -f 'm_syswrap/syscall-x86-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-x86-linux.S

libcoregrind_amd64_freebsd_a-syscall-x86-linux.obj: m_syswrap/syscall-x86-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-syscall-x86-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-x86-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syscall-x86-linux.obj `if test -f 'm_syswrap/syscall-x86-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-x86-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-x86-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-x86-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-x86-linux.Po
#	source='m_syswrap/syscall-x86-linux.S' object='libcoregrind_amd64_freebsd_a-syscall-x86-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-syscall-x86-linux.obj `if test -f 'm_syswrap/syscall-x86-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-x86-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-x86-linux.S'; fi`

libcoregrind_amd64_freebsd_a-syscall-amd64-linux.o: m_syswrap/syscall-amd64-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-syscall-amd64-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-amd64-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syscall-amd64-linux.o `test -f 'm_syswrap/syscall-amd64-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-amd64-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-amd64-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-amd64-linux.Po
#	source='m_syswrap/syscall-amd64-linux.S' object='libcoregrind_amd64_freebsd_a-syscall-amd64-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-syscall-amd64-linux.o `test -f 'm_syswrap/syscall-amd64-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-amd64-linux.S

libcoregrind_amd64_freebsd_a-syscall-amd64-linux.obj: m_syswrap/syscall-amd64-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-syscall-amd64-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-amd64-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syscall-amd64-linux.obj `if test -f 'm_syswrap/syscall-amd64-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-amd64-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-amd64-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-amd64-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-amd64-linux.Po
#	source='m_syswrap/syscall-amd64-linux.S' object='libcoregrind_amd64_freebsd_a-syscall-amd64-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-syscall-amd64-linux.obj `if test -f 'm_syswrap/syscall-amd64-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-amd64-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-amd64-linux.S'; fi`

libcoregrind_amd64_freebsd_a-syscall-ppc32-linux.o: m_syswrap/syscall-ppc32-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-syscall-ppc32-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-ppc32-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syscall-ppc32-linux.o `test -f 'm_syswrap/syscall-ppc32-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-ppc32-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-ppc32-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-ppc32-linux.Po
#	source='m_syswrap/syscall-ppc32-linux.S' object='libcoregrind_amd64_freebsd_a-syscall-ppc32-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-syscall-ppc32-linux.o `test -f 'm_syswrap/syscall-ppc32-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-ppc32-linux.S

libcoregrind_amd64_freebsd_a-syscall-ppc32-linux.obj: m_syswrap/syscall-ppc32-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-syscall-ppc32-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-ppc32-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syscall-ppc32-linux.obj `if test -f 'm_syswrap/syscall-ppc32-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-ppc32-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-ppc32-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-ppc32-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-ppc32-linux.Po
#	source='m_syswrap/syscall-ppc32-linux.S' object='libcoregrind_amd64_freebsd_a-syscall-ppc32-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-syscall-ppc32-linux.obj `if test -f 'm_syswrap/syscall-ppc32-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-ppc32-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-ppc32-linux.S'; fi`

libcoregrind_amd64_freebsd_a-syscall-ppc64-linux.o: m_syswrap/syscall-ppc64-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-syscall-ppc64-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-ppc64-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syscall-ppc64-linux.o `test -f 'm_syswrap/syscall-ppc64-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-ppc64-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-ppc64-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-ppc64-linux.Po
#	source='m_syswrap/syscall-ppc64-linux.S' object='libcoregrind_amd64_freebsd_a-syscall-ppc64-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-syscall-ppc64-linux.o `test -f 'm_syswrap/syscall-ppc64-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-ppc64-linux.S

libcoregrind_amd64_freebsd_a-syscall-ppc64-linux.obj: m_syswrap/syscall-ppc64-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-syscall-ppc64-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-ppc64-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syscall-ppc64-linux.obj `if test -f 'm_syswrap/syscall-ppc64-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-ppc64-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-ppc64-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-ppc64-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-ppc64-linux.Po
#	source='m_syswrap/syscall-ppc64-linux.S' object='libcoregrind_amd64_freebsd_a-syscall-ppc64-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-syscall-ppc64-linux.obj `if test -f 'm_syswrap/syscall-ppc64-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-ppc64-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-ppc64-linux.S'; fi`

libcoregrind_amd64_freebsd_a-syscall-x86-freebsd.o: m_syswrap/syscall-x86-freebsd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-syscall-x86-freebsd.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-x86-freebsd.Tpo -c -o libcoregrind_amd64_freebsd_a-syscall-x86-freebsd.o `test -f 'm_syswrap/syscall-x86-freebsd.S' || echo '$(srcdir)/'`m_syswrap/syscall-x86-freebsd.S
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-x86-freebsd.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-x86-freebsd.Po
#	source='m_syswrap/syscall-x86-freebsd.S' object='libcoregrind_amd64_freebsd_a-syscall-x86-freebsd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-syscall-x86-freebsd.o `test -f 'm_syswrap/syscall-x86-freebsd.S' || echo '$(srcdir)/'`m_syswrap/syscall-x86-freebsd.S

libcoregrind_amd64_freebsd_a-syscall-x86-freebsd.obj: m_syswrap/syscall-x86-freebsd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-syscall-x86-freebsd.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-x86-freebsd.Tpo -c -o libcoregrind_amd64_freebsd_a-syscall-x86-freebsd.obj `if test -f 'm_syswrap/syscall-x86-freebsd.S'; then $(CYGPATH_W) 'm_syswrap/syscall-x86-freebsd.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-x86-freebsd.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-x86-freebsd.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-x86-freebsd.Po
#	source='m_syswrap/syscall-x86-freebsd.S' object='libcoregrind_amd64_freebsd_a-syscall-x86-freebsd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-syscall-x86-freebsd.obj `if test -f 'm_syswrap/syscall-x86-freebsd.S'; then $(CYGPATH_W) 'm_syswrap/syscall-x86-freebsd.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-x86-freebsd.S'; fi`

libcoregrind_amd64_freebsd_a-syscall-amd64-freebsd.o: m_syswrap/syscall-amd64-freebsd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-syscall-amd64-freebsd.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-amd64-freebsd.Tpo -c -o libcoregrind_amd64_freebsd_a-syscall-amd64-freebsd.o `test -f 'm_syswrap/syscall-amd64-freebsd.S' || echo '$(srcdir)/'`m_syswrap/syscall-amd64-freebsd.S
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-amd64-freebsd.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-amd64-freebsd.Po
#	source='m_syswrap/syscall-amd64-freebsd.S' object='libcoregrind_amd64_freebsd_a-syscall-amd64-freebsd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-syscall-amd64-freebsd.o `test -f 'm_syswrap/syscall-amd64-freebsd.S' || echo '$(srcdir)/'`m_syswrap/syscall-amd64-freebsd.S

libcoregrind_amd64_freebsd_a-syscall-amd64-freebsd.obj: m_syswrap/syscall-amd64-freebsd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-syscall-amd64-freebsd.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-amd64-freebsd.Tpo -c -o libcoregrind_amd64_freebsd_a-syscall-amd64-freebsd.obj `if test -f 'm_syswrap/syscall-amd64-freebsd.S'; then $(CYGPATH_W) 'm_syswrap/syscall-amd64-freebsd.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-amd64-freebsd.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-amd64-freebsd.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-amd64-freebsd.Po
#	source='m_syswrap/syscall-amd64-freebsd.S' object='libcoregrind_amd64_freebsd_a-syscall-amd64-freebsd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-syscall-amd64-freebsd.obj `if test -f 'm_syswrap/syscall-amd64-freebsd.S'; then $(CYGPATH_W) 'm_syswrap/syscall-amd64-freebsd.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-amd64-freebsd.S'; fi`

libcoregrind_amd64_freebsd_a-syscall-arm-linux.o: m_syswrap/syscall-arm-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-syscall-arm-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-arm-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syscall-arm-linux.o `test -f 'm_syswrap/syscall-arm-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-arm-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-arm-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-arm-linux.Po
#	source='m_syswrap/syscall-arm-linux.S' object='libcoregrind_amd64_freebsd_a-syscall-arm-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-syscall-arm-linux.o `test -f 'm_syswrap/syscall-arm-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-arm-linux.S

libcoregrind_amd64_freebsd_a-syscall-arm-linux.obj: m_syswrap/syscall-arm-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-syscall-arm-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-arm-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syscall-arm-linux.obj `if test -f 'm_syswrap/syscall-arm-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-arm-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-arm-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-arm-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-arm-linux.Po
#	source='m_syswrap/syscall-arm-linux.S' object='libcoregrind_amd64_freebsd_a-syscall-arm-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-syscall-arm-linux.obj `if test -f 'm_syswrap/syscall-arm-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-arm-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-arm-linux.S'; fi`

libcoregrind_amd64_freebsd_a-syscall-s390x-linux.o: m_syswrap/syscall-s390x-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-syscall-s390x-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-s390x-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syscall-s390x-linux.o `test -f 'm_syswrap/syscall-s390x-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-s390x-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-s390x-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-s390x-linux.Po
#	source='m_syswrap/syscall-s390x-linux.S' object='libcoregrind_amd64_freebsd_a-syscall-s390x-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-syscall-s390x-linux.o `test -f 'm_syswrap/syscall-s390x-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-s390x-linux.S

libcoregrind_amd64_freebsd_a-syscall-s390x-linux.obj: m_syswrap/syscall-s390x-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-syscall-s390x-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-s390x-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syscall-s390x-linux.obj `if test -f 'm_syswrap/syscall-s390x-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-s390x-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-s390x-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-s390x-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-s390x-linux.Po
#	source='m_syswrap/syscall-s390x-linux.S' object='libcoregrind_amd64_freebsd_a-syscall-s390x-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-syscall-s390x-linux.obj `if test -f 'm_syswrap/syscall-s390x-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-s390x-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-s390x-linux.S'; fi`

libcoregrind_amd64_freebsd_a-syscall-mips32-linux.o: m_syswrap/syscall-mips32-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-syscall-mips32-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-mips32-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syscall-mips32-linux.o `test -f 'm_syswrap/syscall-mips32-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-mips32-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-mips32-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-mips32-linux.Po
#	source='m_syswrap/syscall-mips32-linux.S' object='libcoregrind_amd64_freebsd_a-syscall-mips32-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-syscall-mips32-linux.o `test -f 'm_syswrap/syscall-mips32-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-mips32-linux.S

libcoregrind_amd64_freebsd_a-syscall-mips32-linux.obj: m_syswrap/syscall-mips32-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-syscall-mips32-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-mips32-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syscall-mips32-linux.obj `if test -f 'm_syswrap/syscall-mips32-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-mips32-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-mips32-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-mips32-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-mips32-linux.Po
#	source='m_syswrap/syscall-mips32-linux.S' object='libcoregrind_amd64_freebsd_a-syscall-mips32-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-syscall-mips32-linux.obj `if test -f 'm_syswrap/syscall-mips32-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-mips32-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-mips32-linux.S'; fi`

libcoregrind_amd64_freebsd_a-syscall-x86-darwin.o: m_syswrap/syscall-x86-darwin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-syscall-x86-darwin.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-x86-darwin.Tpo -c -o libcoregrind_amd64_freebsd_a-syscall-x86-darwin.o `test -f 'm_syswrap/syscall-x86-darwin.S' || echo '$(srcdir)/'`m_syswrap/syscall-x86-darwin.S
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-x86-darwin.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-x86-darwin.Po
#	source='m_syswrap/syscall-x86-darwin.S' object='libcoregrind_amd64_freebsd_a-syscall-x86-darwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-syscall-x86-darwin.o `test -f 'm_syswrap/syscall-x86-darwin.S' || echo '$(srcdir)/'`m_syswrap/syscall-x86-darwin.S

libcoregrind_amd64_freebsd_a-syscall-x86-darwin.obj: m_syswrap/syscall-x86-darwin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-syscall-x86-darwin.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-x86-darwin.Tpo -c -o libcoregrind_amd64_freebsd_a-syscall-x86-darwin.obj `if test -f 'm_syswrap/syscall-x86-darwin.S'; then $(CYGPATH_W) 'm_syswrap/syscall-x86-darwin.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-x86-darwin.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-x86-darwin.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-x86-darwin.Po
#	source='m_syswrap/syscall-x86-darwin.S' object='libcoregrind_amd64_freebsd_a-syscall-x86-darwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-syscall-x86-darwin.obj `if test -f 'm_syswrap/syscall-x86-darwin.S'; then $(CYGPATH_W) 'm_syswrap/syscall-x86-darwin.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-x86-darwin.S'; fi`

libcoregrind_amd64_freebsd_a-syscall-amd64-darwin.o: m_syswrap/syscall-amd64-darwin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-syscall-amd64-darwin.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-amd64-darwin.Tpo -c -o libcoregrind_amd64_freebsd_a-syscall-amd64-darwin.o `test -f 'm_syswrap/syscall-amd64-darwin.S' || echo '$(srcdir)/'`m_syswrap/syscall-amd64-darwin.S
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-amd64-darwin.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-amd64-darwin.Po
#	source='m_syswrap/syscall-amd64-darwin.S' object='libcoregrind_amd64_freebsd_a-syscall-amd64-darwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-syscall-amd64-darwin.o `test -f 'm_syswrap/syscall-amd64-darwin.S' || echo '$(srcdir)/'`m_syswrap/syscall-amd64-darwin.S

libcoregrind_amd64_freebsd_a-syscall-amd64-darwin.obj: m_syswrap/syscall-amd64-darwin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_amd64_freebsd_a-syscall-amd64-darwin.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-amd64-darwin.Tpo -c -o libcoregrind_amd64_freebsd_a-syscall-amd64-darwin.obj `if test -f 'm_syswrap/syscall-amd64-darwin.S'; then $(CYGPATH_W) 'm_syswrap/syscall-amd64-darwin.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-amd64-darwin.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-amd64-darwin.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syscall-amd64-darwin.Po
#	source='m_syswrap/syscall-amd64-darwin.S' object='libcoregrind_amd64_freebsd_a-syscall-amd64-darwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_amd64_freebsd_a-syscall-amd64-darwin.obj `if test -f 'm_syswrap/syscall-amd64-darwin.S'; then $(CYGPATH_W) 'm_syswrap/syscall-amd64-darwin.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-amd64-darwin.S'; fi`

libcoregrind_x86_freebsd_a-m_cpuid.o: m_cpuid.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-m_cpuid.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_cpuid.Tpo -c -o libcoregrind_x86_freebsd_a-m_cpuid.o `test -f 'm_cpuid.S' || echo '$(srcdir)/'`m_cpuid.S
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_cpuid.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_cpuid.Po
#	source='m_cpuid.S' object='libcoregrind_x86_freebsd_a-m_cpuid.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-m_cpuid.o `test -f 'm_cpuid.S' || echo '$(srcdir)/'`m_cpuid.S

libcoregrind_x86_freebsd_a-m_cpuid.obj: m_cpuid.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-m_cpuid.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_cpuid.Tpo -c -o libcoregrind_x86_freebsd_a-m_cpuid.obj `if test -f 'm_cpuid.S'; then $(CYGPATH_W) 'm_cpuid.S'; else $(CYGPATH_W) '$(srcdir)/m_cpuid.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_cpuid.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_cpuid.Po
#	source='m_cpuid.S' object='libcoregrind_x86_freebsd_a-m_cpuid.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-m_cpuid.obj `if test -f 'm_cpuid.S'; then $(CYGPATH_W) 'm_cpuid.S'; else $(CYGPATH_W) '$(srcdir)/m_cpuid.S'; fi`

libcoregrind_x86_freebsd_a-m_trampoline.o: m_trampoline.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-m_trampoline.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_trampoline.Tpo -c -o libcoregrind_x86_freebsd_a-m_trampoline.o `test -f 'm_trampoline.S' || echo '$(srcdir)/'`m_trampoline.S
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_trampoline.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_trampoline.Po
#	source='m_trampoline.S' object='libcoregrind_x86_freebsd_a-m_trampoline.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-m_trampoline.o `test -f 'm_trampoline.S' || echo '$(srcdir)/'`m_trampoline.S

libcoregrind_x86_freebsd_a-m_trampoline.obj: m_trampoline.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-m_trampoline.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_trampoline.Tpo -c -o libcoregrind_x86_freebsd_a-m_trampoline.obj `if test -f 'm_trampoline.S'; then $(CYGPATH_W) 'm_trampoline.S'; else $(CYGPATH_W) '$(srcdir)/m_trampoline.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_trampoline.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_trampoline.Po
#	source='m_trampoline.S' object='libcoregrind_x86_freebsd_a-m_trampoline.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-m_trampoline.obj `if test -f 'm_trampoline.S'; then $(CYGPATH_W) 'm_trampoline.S'; else $(CYGPATH_W) '$(srcdir)/m_trampoline.S'; fi`

libcoregrind_x86_freebsd_a-dispatch-x86-linux.o: m_dispatch/dispatch-x86-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-dispatch-x86-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-x86-linux.Tpo -c -o libcoregrind_x86_freebsd_a-dispatch-x86-linux.o `test -f 'm_dispatch/dispatch-x86-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-x86-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-x86-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-x86-linux.Po
#	source='m_dispatch/dispatch-x86-linux.S' object='libcoregrind_x86_freebsd_a-dispatch-x86-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-dispatch-x86-linux.o `test -f 'm_dispatch/dispatch-x86-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-x86-linux.S

libcoregrind_x86_freebsd_a-dispatch-x86-linux.obj: m_dispatch/dispatch-x86-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-dispatch-x86-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-x86-linux.Tpo -c -o libcoregrind_x86_freebsd_a-dispatch-x86-linux.obj `if test -f 'm_dispatch/dispatch-x86-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-x86-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-x86-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-x86-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-x86-linux.Po
#	source='m_dispatch/dispatch-x86-linux.S' object='libcoregrind_x86_freebsd_a-dispatch-x86-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-dispatch-x86-linux.obj `if test -f 'm_dispatch/dispatch-x86-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-x86-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-x86-linux.S'; fi`

libcoregrind_x86_freebsd_a-dispatch-amd64-linux.o: m_dispatch/dispatch-amd64-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-dispatch-amd64-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-amd64-linux.Tpo -c -o libcoregrind_x86_freebsd_a-dispatch-amd64-linux.o `test -f 'm_dispatch/dispatch-amd64-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-amd64-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-amd64-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-amd64-linux.Po
#	source='m_dispatch/dispatch-amd64-linux.S' object='libcoregrind_x86_freebsd_a-dispatch-amd64-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-dispatch-amd64-linux.o `test -f 'm_dispatch/dispatch-amd64-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-amd64-linux.S

libcoregrind_x86_freebsd_a-dispatch-amd64-linux.obj: m_dispatch/dispatch-amd64-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-dispatch-amd64-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-amd64-linux.Tpo -c -o libcoregrind_x86_freebsd_a-dispatch-amd64-linux.obj `if test -f 'm_dispatch/dispatch-amd64-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-amd64-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-amd64-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-amd64-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-amd64-linux.Po
#	source='m_dispatch/dispatch-amd64-linux.S' object='libcoregrind_x86_freebsd_a-dispatch-amd64-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-dispatch-amd64-linux.obj `if test -f 'm_dispatch/dispatch-amd64-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-amd64-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-amd64-linux.S'; fi`

libcoregrind_x86_freebsd_a-dispatch-ppc32-linux.o: m_dispatch/dispatch-ppc32-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-dispatch-ppc32-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-ppc32-linux.Tpo -c -o libcoregrind_x86_freebsd_a-dispatch-ppc32-linux.o `test -f 'm_dispatch/dispatch-ppc32-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-ppc32-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-ppc32-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-ppc32-linux.Po
#	source='m_dispatch/dispatch-ppc32-linux.S' object='libcoregrind_x86_freebsd_a-dispatch-ppc32-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-dispatch-ppc32-linux.o `test -f 'm_dispatch/dispatch-ppc32-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-ppc32-linux.S

libcoregrind_x86_freebsd_a-dispatch-ppc32-linux.obj: m_dispatch/dispatch-ppc32-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-dispatch-ppc32-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-ppc32-linux.Tpo -c -o libcoregrind_x86_freebsd_a-dispatch-ppc32-linux.obj `if test -f 'm_dispatch/dispatch-ppc32-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-ppc32-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-ppc32-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-ppc32-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-ppc32-linux.Po
#	source='m_dispatch/dispatch-ppc32-linux.S' object='libcoregrind_x86_freebsd_a-dispatch-ppc32-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-dispatch-ppc32-linux.obj `if test -f 'm_dispatch/dispatch-ppc32-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-ppc32-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-ppc32-linux.S'; fi`

libcoregrind_x86_freebsd_a-dispatch-ppc64-linux.o: m_dispatch/dispatch-ppc64-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-dispatch-ppc64-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-ppc64-linux.Tpo -c -o libcoregrind_x86_freebsd_a-dispatch-ppc64-linux.o `test -f 'm_dispatch/dispatch-ppc64-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-ppc64-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-ppc64-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-ppc64-linux.Po
#	source='m_dispatch/dispatch-ppc64-linux.S' object='libcoregrind_x86_freebsd_a-dispatch-ppc64-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-dispatch-ppc64-linux.o `test -f 'm_dispatch/dispatch-ppc64-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-ppc64-linux.S

libcoregrind_x86_freebsd_a-dispatch-ppc64-linux.obj: m_dispatch/dispatch-ppc64-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-dispatch-ppc64-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-ppc64-linux.Tpo -c -o libcoregrind_x86_freebsd_a-dispatch-ppc64-linux.obj `if test -f 'm_dispatch/dispatch-ppc64-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-ppc64-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-ppc64-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-ppc64-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-ppc64-linux.Po
#	source='m_dispatch/dispatch-ppc64-linux.S' object='libcoregrind_x86_freebsd_a-dispatch-ppc64-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-dispatch-ppc64-linux.obj `if test -f 'm_dispatch/dispatch-ppc64-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-ppc64-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-ppc64-linux.S'; fi`

libcoregrind_x86_freebsd_a-dispatch-x86-freebsd.o: m_dispatch/dispatch-x86-freebsd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-dispatch-x86-freebsd.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-x86-freebsd.Tpo -c -o libcoregrind_x86_freebsd_a-dispatch-x86-freebsd.o `test -f 'm_dispatch/dispatch-x86-freebsd.S' || echo '$(srcdir)/'`m_dispatch/dispatch-x86-freebsd.S
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-x86-freebsd.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-x86-freebsd.Po
#	source='m_dispatch/dispatch-x86-freebsd.S' object='libcoregrind_x86_freebsd_a-dispatch-x86-freebsd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-dispatch-x86-freebsd.o `test -f 'm_dispatch/dispatch-x86-freebsd.S' || echo '$(srcdir)/'`m_dispatch/dispatch-x86-freebsd.S

libcoregrind_x86_freebsd_a-dispatch-x86-freebsd.obj: m_dispatch/dispatch-x86-freebsd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-dispatch-x86-freebsd.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-x86-freebsd.Tpo -c -o libcoregrind_x86_freebsd_a-dispatch-x86-freebsd.obj `if test -f 'm_dispatch/dispatch-x86-freebsd.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-x86-freebsd.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-x86-freebsd.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-x86-freebsd.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-x86-freebsd.Po
#	source='m_dispatch/dispatch-x86-freebsd.S' object='libcoregrind_x86_freebsd_a-dispatch-x86-freebsd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-dispatch-x86-freebsd.obj `if test -f 'm_dispatch/dispatch-x86-freebsd.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-x86-freebsd.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-x86-freebsd.S'; fi`

libcoregrind_x86_freebsd_a-dispatch-amd64-freebsd.o: m_dispatch/dispatch-amd64-freebsd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-dispatch-amd64-freebsd.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-amd64-freebsd.Tpo -c -o libcoregrind_x86_freebsd_a-dispatch-amd64-freebsd.o `test -f 'm_dispatch/dispatch-amd64-freebsd.S' || echo '$(srcdir)/'`m_dispatch/dispatch-amd64-freebsd.S
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-amd64-freebsd.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-amd64-freebsd.Po
#	source='m_dispatch/dispatch-amd64-freebsd.S' object='libcoregrind_x86_freebsd_a-dispatch-amd64-freebsd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-dispatch-amd64-freebsd.o `test -f 'm_dispatch/dispatch-amd64-freebsd.S' || echo '$(srcdir)/'`m_dispatch/dispatch-amd64-freebsd.S

libcoregrind_x86_freebsd_a-dispatch-amd64-freebsd.obj: m_dispatch/dispatch-amd64-freebsd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-dispatch-amd64-freebsd.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-amd64-freebsd.Tpo -c -o libcoregrind_x86_freebsd_a-dispatch-amd64-freebsd.obj `if test -f 'm_dispatch/dispatch-amd64-freebsd.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-amd64-freebsd.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-amd64-freebsd.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-amd64-freebsd.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-amd64-freebsd.Po
#	source='m_dispatch/dispatch-amd64-freebsd.S' object='libcoregrind_x86_freebsd_a-dispatch-amd64-freebsd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-dispatch-amd64-freebsd.obj `if test -f 'm_dispatch/dispatch-amd64-freebsd.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-amd64-freebsd.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-amd64-freebsd.S'; fi`

libcoregrind_x86_freebsd_a-dispatch-arm-linux.o: m_dispatch/dispatch-arm-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-dispatch-arm-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-arm-linux.Tpo -c -o libcoregrind_x86_freebsd_a-dispatch-arm-linux.o `test -f 'm_dispatch/dispatch-arm-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-arm-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-arm-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-arm-linux.Po
#	source='m_dispatch/dispatch-arm-linux.S' object='libcoregrind_x86_freebsd_a-dispatch-arm-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-dispatch-arm-linux.o `test -f 'm_dispatch/dispatch-arm-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-arm-linux.S

libcoregrind_x86_freebsd_a-dispatch-arm-linux.obj: m_dispatch/dispatch-arm-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-dispatch-arm-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-arm-linux.Tpo -c -o libcoregrind_x86_freebsd_a-dispatch-arm-linux.obj `if test -f 'm_dispatch/dispatch-arm-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-arm-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-arm-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-arm-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-arm-linux.Po
#	source='m_dispatch/dispatch-arm-linux.S' object='libcoregrind_x86_freebsd_a-dispatch-arm-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-dispatch-arm-linux.obj `if test -f 'm_dispatch/dispatch-arm-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-arm-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-arm-linux.S'; fi`

libcoregrind_x86_freebsd_a-dispatch-s390x-linux.o: m_dispatch/dispatch-s390x-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-dispatch-s390x-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-s390x-linux.Tpo -c -o libcoregrind_x86_freebsd_a-dispatch-s390x-linux.o `test -f 'm_dispatch/dispatch-s390x-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-s390x-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-s390x-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-s390x-linux.Po
#	source='m_dispatch/dispatch-s390x-linux.S' object='libcoregrind_x86_freebsd_a-dispatch-s390x-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-dispatch-s390x-linux.o `test -f 'm_dispatch/dispatch-s390x-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-s390x-linux.S

libcoregrind_x86_freebsd_a-dispatch-s390x-linux.obj: m_dispatch/dispatch-s390x-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-dispatch-s390x-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-s390x-linux.Tpo -c -o libcoregrind_x86_freebsd_a-dispatch-s390x-linux.obj `if test -f 'm_dispatch/dispatch-s390x-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-s390x-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-s390x-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-s390x-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-s390x-linux.Po
#	source='m_dispatch/dispatch-s390x-linux.S' object='libcoregrind_x86_freebsd_a-dispatch-s390x-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-dispatch-s390x-linux.obj `if test -f 'm_dispatch/dispatch-s390x-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-s390x-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-s390x-linux.S'; fi`

libcoregrind_x86_freebsd_a-dispatch-mips32-linux.o: m_dispatch/dispatch-mips32-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-dispatch-mips32-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-mips32-linux.Tpo -c -o libcoregrind_x86_freebsd_a-dispatch-mips32-linux.o `test -f 'm_dispatch/dispatch-mips32-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-mips32-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-mips32-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-mips32-linux.Po
#	source='m_dispatch/dispatch-mips32-linux.S' object='libcoregrind_x86_freebsd_a-dispatch-mips32-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-dispatch-mips32-linux.o `test -f 'm_dispatch/dispatch-mips32-linux.S' || echo '$(srcdir)/'`m_dispatch/dispatch-mips32-linux.S

libcoregrind_x86_freebsd_a-dispatch-mips32-linux.obj: m_dispatch/dispatch-mips32-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-dispatch-mips32-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-mips32-linux.Tpo -c -o libcoregrind_x86_freebsd_a-dispatch-mips32-linux.obj `if test -f 'm_dispatch/dispatch-mips32-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-mips32-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-mips32-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-mips32-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-mips32-linux.Po
#	source='m_dispatch/dispatch-mips32-linux.S' object='libcoregrind_x86_freebsd_a-dispatch-mips32-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-dispatch-mips32-linux.obj `if test -f 'm_dispatch/dispatch-mips32-linux.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-mips32-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-mips32-linux.S'; fi`

libcoregrind_x86_freebsd_a-dispatch-x86-darwin.o: m_dispatch/dispatch-x86-darwin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-dispatch-x86-darwin.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-x86-darwin.Tpo -c -o libcoregrind_x86_freebsd_a-dispatch-x86-darwin.o `test -f 'm_dispatch/dispatch-x86-darwin.S' || echo '$(srcdir)/'`m_dispatch/dispatch-x86-darwin.S
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-x86-darwin.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-x86-darwin.Po
#	source='m_dispatch/dispatch-x86-darwin.S' object='libcoregrind_x86_freebsd_a-dispatch-x86-darwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-dispatch-x86-darwin.o `test -f 'm_dispatch/dispatch-x86-darwin.S' || echo '$(srcdir)/'`m_dispatch/dispatch-x86-darwin.S

libcoregrind_x86_freebsd_a-dispatch-x86-darwin.obj: m_dispatch/dispatch-x86-darwin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-dispatch-x86-darwin.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-x86-darwin.Tpo -c -o libcoregrind_x86_freebsd_a-dispatch-x86-darwin.obj `if test -f 'm_dispatch/dispatch-x86-darwin.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-x86-darwin.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-x86-darwin.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-x86-darwin.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-x86-darwin.Po
#	source='m_dispatch/dispatch-x86-darwin.S' object='libcoregrind_x86_freebsd_a-dispatch-x86-darwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-dispatch-x86-darwin.obj `if test -f 'm_dispatch/dispatch-x86-darwin.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-x86-darwin.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-x86-darwin.S'; fi`

libcoregrind_x86_freebsd_a-dispatch-amd64-darwin.o: m_dispatch/dispatch-amd64-darwin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-dispatch-amd64-darwin.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-amd64-darwin.Tpo -c -o libcoregrind_x86_freebsd_a-dispatch-amd64-darwin.o `test -f 'm_dispatch/dispatch-amd64-darwin.S' || echo '$(srcdir)/'`m_dispatch/dispatch-amd64-darwin.S
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-amd64-darwin.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-amd64-darwin.Po
#	source='m_dispatch/dispatch-amd64-darwin.S' object='libcoregrind_x86_freebsd_a-dispatch-amd64-darwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-dispatch-amd64-darwin.o `test -f 'm_dispatch/dispatch-amd64-darwin.S' || echo '$(srcdir)/'`m_dispatch/dispatch-amd64-darwin.S

libcoregrind_x86_freebsd_a-dispatch-amd64-darwin.obj: m_dispatch/dispatch-amd64-darwin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-dispatch-amd64-darwin.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-amd64-darwin.Tpo -c -o libcoregrind_x86_freebsd_a-dispatch-amd64-darwin.obj `if test -f 'm_dispatch/dispatch-amd64-darwin.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-amd64-darwin.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-amd64-darwin.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-amd64-darwin.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-dispatch-amd64-darwin.Po
#	source='m_dispatch/dispatch-amd64-darwin.S' object='libcoregrind_x86_freebsd_a-dispatch-amd64-darwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-dispatch-amd64-darwin.obj `if test -f 'm_dispatch/dispatch-amd64-darwin.S'; then $(CYGPATH_W) 'm_dispatch/dispatch-amd64-darwin.S'; else $(CYGPATH_W) '$(srcdir)/m_dispatch/dispatch-amd64-darwin.S'; fi`

libcoregrind_x86_freebsd_a-mach_traps-x86-darwin.o: m_mach/mach_traps-x86-darwin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-mach_traps-x86-darwin.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_traps-x86-darwin.Tpo -c -o libcoregrind_x86_freebsd_a-mach_traps-x86-darwin.o `test -f 'm_mach/mach_traps-x86-darwin.S' || echo '$(srcdir)/'`m_mach/mach_traps-x86-darwin.S
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_traps-x86-darwin.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_traps-x86-darwin.Po
#	source='m_mach/mach_traps-x86-darwin.S' object='libcoregrind_x86_freebsd_a-mach_traps-x86-darwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-mach_traps-x86-darwin.o `test -f 'm_mach/mach_traps-x86-darwin.S' || echo '$(srcdir)/'`m_mach/mach_traps-x86-darwin.S

libcoregrind_x86_freebsd_a-mach_traps-x86-darwin.obj: m_mach/mach_traps-x86-darwin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-mach_traps-x86-darwin.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_traps-x86-darwin.Tpo -c -o libcoregrind_x86_freebsd_a-mach_traps-x86-darwin.obj `if test -f 'm_mach/mach_traps-x86-darwin.S'; then $(CYGPATH_W) 'm_mach/mach_traps-x86-darwin.S'; else $(CYGPATH_W) '$(srcdir)/m_mach/mach_traps-x86-darwin.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_traps-x86-darwin.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_traps-x86-darwin.Po
#	source='m_mach/mach_traps-x86-darwin.S' object='libcoregrind_x86_freebsd_a-mach_traps-x86-darwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-mach_traps-x86-darwin.obj `if test -f 'm_mach/mach_traps-x86-darwin.S'; then $(CYGPATH_W) 'm_mach/mach_traps-x86-darwin.S'; else $(CYGPATH_W) '$(srcdir)/m_mach/mach_traps-x86-darwin.S'; fi`

libcoregrind_x86_freebsd_a-mach_traps-amd64-darwin.o: m_mach/mach_traps-amd64-darwin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-mach_traps-amd64-darwin.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_traps-amd64-darwin.Tpo -c -o libcoregrind_x86_freebsd_a-mach_traps-amd64-darwin.o `test -f 'm_mach/mach_traps-amd64-darwin.S' || echo '$(srcdir)/'`m_mach/mach_traps-amd64-darwin.S
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_traps-amd64-darwin.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_traps-amd64-darwin.Po
#	source='m_mach/mach_traps-amd64-darwin.S' object='libcoregrind_x86_freebsd_a-mach_traps-amd64-darwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-mach_traps-amd64-darwin.o `test -f 'm_mach/mach_traps-amd64-darwin.S' || echo '$(srcdir)/'`m_mach/mach_traps-amd64-darwin.S

libcoregrind_x86_freebsd_a-mach_traps-amd64-darwin.obj: m_mach/mach_traps-amd64-darwin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-mach_traps-amd64-darwin.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_traps-amd64-darwin.Tpo -c -o libcoregrind_x86_freebsd_a-mach_traps-amd64-darwin.obj `if test -f 'm_mach/mach_traps-amd64-darwin.S'; then $(CYGPATH_W) 'm_mach/mach_traps-amd64-darwin.S'; else $(CYGPATH_W) '$(srcdir)/m_mach/mach_traps-amd64-darwin.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_traps-amd64-darwin.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_traps-amd64-darwin.Po
#	source='m_mach/mach_traps-amd64-darwin.S' object='libcoregrind_x86_freebsd_a-mach_traps-amd64-darwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-mach_traps-amd64-darwin.obj `if test -f 'm_mach/mach_traps-amd64-darwin.S'; then $(CYGPATH_W) 'm_mach/mach_traps-amd64-darwin.S'; else $(CYGPATH_W) '$(srcdir)/m_mach/mach_traps-amd64-darwin.S'; fi`

libcoregrind_x86_freebsd_a-syscall-x86-linux.o: m_syswrap/syscall-x86-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-syscall-x86-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-x86-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syscall-x86-linux.o `test -f 'm_syswrap/syscall-x86-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-x86-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-x86-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-x86-linux.Po
#	source='m_syswrap/syscall-x86-linux.S' object='libcoregrind_x86_freebsd_a-syscall-x86-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-syscall-x86-linux.o `test -f 'm_syswrap/syscall-x86-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-x86-linux.S

libcoregrind_x86_freebsd_a-syscall-x86-linux.obj: m_syswrap/syscall-x86-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-syscall-x86-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-x86-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syscall-x86-linux.obj `if test -f 'm_syswrap/syscall-x86-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-x86-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-x86-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-x86-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-x86-linux.Po
#	source='m_syswrap/syscall-x86-linux.S' object='libcoregrind_x86_freebsd_a-syscall-x86-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-syscall-x86-linux.obj `if test -f 'm_syswrap/syscall-x86-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-x86-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-x86-linux.S'; fi`

libcoregrind_x86_freebsd_a-syscall-amd64-linux.o: m_syswrap/syscall-amd64-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-syscall-amd64-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-amd64-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syscall-amd64-linux.o `test -f 'm_syswrap/syscall-amd64-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-amd64-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-amd64-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-amd64-linux.Po
#	source='m_syswrap/syscall-amd64-linux.S' object='libcoregrind_x86_freebsd_a-syscall-amd64-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-syscall-amd64-linux.o `test -f 'm_syswrap/syscall-amd64-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-amd64-linux.S

libcoregrind_x86_freebsd_a-syscall-amd64-linux.obj: m_syswrap/syscall-amd64-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-syscall-amd64-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-amd64-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syscall-amd64-linux.obj `if test -f 'm_syswrap/syscall-amd64-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-amd64-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-amd64-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-amd64-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-amd64-linux.Po
#	source='m_syswrap/syscall-amd64-linux.S' object='libcoregrind_x86_freebsd_a-syscall-amd64-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-syscall-amd64-linux.obj `if test -f 'm_syswrap/syscall-amd64-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-amd64-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-amd64-linux.S'; fi`

libcoregrind_x86_freebsd_a-syscall-ppc32-linux.o: m_syswrap/syscall-ppc32-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-syscall-ppc32-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-ppc32-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syscall-ppc32-linux.o `test -f 'm_syswrap/syscall-ppc32-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-ppc32-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-ppc32-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-ppc32-linux.Po
#	source='m_syswrap/syscall-ppc32-linux.S' object='libcoregrind_x86_freebsd_a-syscall-ppc32-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-syscall-ppc32-linux.o `test -f 'm_syswrap/syscall-ppc32-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-ppc32-linux.S

libcoregrind_x86_freebsd_a-syscall-ppc32-linux.obj: m_syswrap/syscall-ppc32-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-syscall-ppc32-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-ppc32-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syscall-ppc32-linux.obj `if test -f 'm_syswrap/syscall-ppc32-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-ppc32-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-ppc32-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-ppc32-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-ppc32-linux.Po
#	source='m_syswrap/syscall-ppc32-linux.S' object='libcoregrind_x86_freebsd_a-syscall-ppc32-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-syscall-ppc32-linux.obj `if test -f 'm_syswrap/syscall-ppc32-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-ppc32-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-ppc32-linux.S'; fi`

libcoregrind_x86_freebsd_a-syscall-ppc64-linux.o: m_syswrap/syscall-ppc64-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-syscall-ppc64-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-ppc64-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syscall-ppc64-linux.o `test -f 'm_syswrap/syscall-ppc64-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-ppc64-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-ppc64-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-ppc64-linux.Po
#	source='m_syswrap/syscall-ppc64-linux.S' object='libcoregrind_x86_freebsd_a-syscall-ppc64-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-syscall-ppc64-linux.o `test -f 'm_syswrap/syscall-ppc64-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-ppc64-linux.S

libcoregrind_x86_freebsd_a-syscall-ppc64-linux.obj: m_syswrap/syscall-ppc64-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-syscall-ppc64-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-ppc64-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syscall-ppc64-linux.obj `if test -f 'm_syswrap/syscall-ppc64-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-ppc64-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-ppc64-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-ppc64-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-ppc64-linux.Po
#	source='m_syswrap/syscall-ppc64-linux.S' object='libcoregrind_x86_freebsd_a-syscall-ppc64-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-syscall-ppc64-linux.obj `if test -f 'm_syswrap/syscall-ppc64-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-ppc64-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-ppc64-linux.S'; fi`

libcoregrind_x86_freebsd_a-syscall-x86-freebsd.o: m_syswrap/syscall-x86-freebsd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-syscall-x86-freebsd.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-x86-freebsd.Tpo -c -o libcoregrind_x86_freebsd_a-syscall-x86-freebsd.o `test -f 'm_syswrap/syscall-x86-freebsd.S' || echo '$(srcdir)/'`m_syswrap/syscall-x86-freebsd.S
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-x86-freebsd.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-x86-freebsd.Po
#	source='m_syswrap/syscall-x86-freebsd.S' object='libcoregrind_x86_freebsd_a-syscall-x86-freebsd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-syscall-x86-freebsd.o `test -f 'm_syswrap/syscall-x86-freebsd.S' || echo '$(srcdir)/'`m_syswrap/syscall-x86-freebsd.S

libcoregrind_x86_freebsd_a-syscall-x86-freebsd.obj: m_syswrap/syscall-x86-freebsd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-syscall-x86-freebsd.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-x86-freebsd.Tpo -c -o libcoregrind_x86_freebsd_a-syscall-x86-freebsd.obj `if test -f 'm_syswrap/syscall-x86-freebsd.S'; then $(CYGPATH_W) 'm_syswrap/syscall-x86-freebsd.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-x86-freebsd.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-x86-freebsd.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-x86-freebsd.Po
#	source='m_syswrap/syscall-x86-freebsd.S' object='libcoregrind_x86_freebsd_a-syscall-x86-freebsd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-syscall-x86-freebsd.obj `if test -f 'm_syswrap/syscall-x86-freebsd.S'; then $(CYGPATH_W) 'm_syswrap/syscall-x86-freebsd.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-x86-freebsd.S'; fi`

libcoregrind_x86_freebsd_a-syscall-amd64-freebsd.o: m_syswrap/syscall-amd64-freebsd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-syscall-amd64-freebsd.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-amd64-freebsd.Tpo -c -o libcoregrind_x86_freebsd_a-syscall-amd64-freebsd.o `test -f 'm_syswrap/syscall-amd64-freebsd.S' || echo '$(srcdir)/'`m_syswrap/syscall-amd64-freebsd.S
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-amd64-freebsd.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-amd64-freebsd.Po
#	source='m_syswrap/syscall-amd64-freebsd.S' object='libcoregrind_x86_freebsd_a-syscall-amd64-freebsd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-syscall-amd64-freebsd.o `test -f 'm_syswrap/syscall-amd64-freebsd.S' || echo '$(srcdir)/'`m_syswrap/syscall-amd64-freebsd.S

libcoregrind_x86_freebsd_a-syscall-amd64-freebsd.obj: m_syswrap/syscall-amd64-freebsd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-syscall-amd64-freebsd.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-amd64-freebsd.Tpo -c -o libcoregrind_x86_freebsd_a-syscall-amd64-freebsd.obj `if test -f 'm_syswrap/syscall-amd64-freebsd.S'; then $(CYGPATH_W) 'm_syswrap/syscall-amd64-freebsd.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-amd64-freebsd.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-amd64-freebsd.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-amd64-freebsd.Po
#	source='m_syswrap/syscall-amd64-freebsd.S' object='libcoregrind_x86_freebsd_a-syscall-amd64-freebsd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-syscall-amd64-freebsd.obj `if test -f 'm_syswrap/syscall-amd64-freebsd.S'; then $(CYGPATH_W) 'm_syswrap/syscall-amd64-freebsd.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-amd64-freebsd.S'; fi`

libcoregrind_x86_freebsd_a-syscall-arm-linux.o: m_syswrap/syscall-arm-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-syscall-arm-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-arm-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syscall-arm-linux.o `test -f 'm_syswrap/syscall-arm-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-arm-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-arm-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-arm-linux.Po
#	source='m_syswrap/syscall-arm-linux.S' object='libcoregrind_x86_freebsd_a-syscall-arm-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-syscall-arm-linux.o `test -f 'm_syswrap/syscall-arm-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-arm-linux.S

libcoregrind_x86_freebsd_a-syscall-arm-linux.obj: m_syswrap/syscall-arm-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-syscall-arm-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-arm-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syscall-arm-linux.obj `if test -f 'm_syswrap/syscall-arm-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-arm-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-arm-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-arm-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-arm-linux.Po
#	source='m_syswrap/syscall-arm-linux.S' object='libcoregrind_x86_freebsd_a-syscall-arm-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-syscall-arm-linux.obj `if test -f 'm_syswrap/syscall-arm-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-arm-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-arm-linux.S'; fi`

libcoregrind_x86_freebsd_a-syscall-s390x-linux.o: m_syswrap/syscall-s390x-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-syscall-s390x-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-s390x-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syscall-s390x-linux.o `test -f 'm_syswrap/syscall-s390x-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-s390x-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-s390x-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-s390x-linux.Po
#	source='m_syswrap/syscall-s390x-linux.S' object='libcoregrind_x86_freebsd_a-syscall-s390x-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-syscall-s390x-linux.o `test -f 'm_syswrap/syscall-s390x-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-s390x-linux.S

libcoregrind_x86_freebsd_a-syscall-s390x-linux.obj: m_syswrap/syscall-s390x-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-syscall-s390x-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-s390x-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syscall-s390x-linux.obj `if test -f 'm_syswrap/syscall-s390x-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-s390x-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-s390x-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-s390x-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-s390x-linux.Po
#	source='m_syswrap/syscall-s390x-linux.S' object='libcoregrind_x86_freebsd_a-syscall-s390x-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-syscall-s390x-linux.obj `if test -f 'm_syswrap/syscall-s390x-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-s390x-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-s390x-linux.S'; fi`

libcoregrind_x86_freebsd_a-syscall-mips32-linux.o: m_syswrap/syscall-mips32-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-syscall-mips32-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-mips32-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syscall-mips32-linux.o `test -f 'm_syswrap/syscall-mips32-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-mips32-linux.S
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-mips32-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-mips32-linux.Po
#	source='m_syswrap/syscall-mips32-linux.S' object='libcoregrind_x86_freebsd_a-syscall-mips32-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-syscall-mips32-linux.o `test -f 'm_syswrap/syscall-mips32-linux.S' || echo '$(srcdir)/'`m_syswrap/syscall-mips32-linux.S

libcoregrind_x86_freebsd_a-syscall-mips32-linux.obj: m_syswrap/syscall-mips32-linux.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-syscall-mips32-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-mips32-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syscall-mips32-linux.obj `if test -f 'm_syswrap/syscall-mips32-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-mips32-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-mips32-linux.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-mips32-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-mips32-linux.Po
#	source='m_syswrap/syscall-mips32-linux.S' object='libcoregrind_x86_freebsd_a-syscall-mips32-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-syscall-mips32-linux.obj `if test -f 'm_syswrap/syscall-mips32-linux.S'; then $(CYGPATH_W) 'm_syswrap/syscall-mips32-linux.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-mips32-linux.S'; fi`

libcoregrind_x86_freebsd_a-syscall-x86-darwin.o: m_syswrap/syscall-x86-darwin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-syscall-x86-darwin.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-x86-darwin.Tpo -c -o libcoregrind_x86_freebsd_a-syscall-x86-darwin.o `test -f 'm_syswrap/syscall-x86-darwin.S' || echo '$(srcdir)/'`m_syswrap/syscall-x86-darwin.S
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-x86-darwin.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-x86-darwin.Po
#	source='m_syswrap/syscall-x86-darwin.S' object='libcoregrind_x86_freebsd_a-syscall-x86-darwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-syscall-x86-darwin.o `test -f 'm_syswrap/syscall-x86-darwin.S' || echo '$(srcdir)/'`m_syswrap/syscall-x86-darwin.S

libcoregrind_x86_freebsd_a-syscall-x86-darwin.obj: m_syswrap/syscall-x86-darwin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-syscall-x86-darwin.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-x86-darwin.Tpo -c -o libcoregrind_x86_freebsd_a-syscall-x86-darwin.obj `if test -f 'm_syswrap/syscall-x86-darwin.S'; then $(CYGPATH_W) 'm_syswrap/syscall-x86-darwin.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-x86-darwin.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-x86-darwin.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-x86-darwin.Po
#	source='m_syswrap/syscall-x86-darwin.S' object='libcoregrind_x86_freebsd_a-syscall-x86-darwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-syscall-x86-darwin.obj `if test -f 'm_syswrap/syscall-x86-darwin.S'; then $(CYGPATH_W) 'm_syswrap/syscall-x86-darwin.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-x86-darwin.S'; fi`

libcoregrind_x86_freebsd_a-syscall-amd64-darwin.o: m_syswrap/syscall-amd64-darwin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-syscall-amd64-darwin.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-amd64-darwin.Tpo -c -o libcoregrind_x86_freebsd_a-syscall-amd64-darwin.o `test -f 'm_syswrap/syscall-amd64-darwin.S' || echo '$(srcdir)/'`m_syswrap/syscall-amd64-darwin.S
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-amd64-darwin.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-amd64-darwin.Po
#	source='m_syswrap/syscall-amd64-darwin.S' object='libcoregrind_x86_freebsd_a-syscall-amd64-darwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-syscall-amd64-darwin.o `test -f 'm_syswrap/syscall-amd64-darwin.S' || echo '$(srcdir)/'`m_syswrap/syscall-amd64-darwin.S

libcoregrind_x86_freebsd_a-syscall-amd64-darwin.obj: m_syswrap/syscall-amd64-darwin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -MT libcoregrind_x86_freebsd_a-syscall-amd64-darwin.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-amd64-darwin.Tpo -c -o libcoregrind_x86_freebsd_a-syscall-amd64-darwin.obj `if test -f 'm_syswrap/syscall-amd64-darwin.S'; then $(CYGPATH_W) 'm_syswrap/syscall-amd64-darwin.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-amd64-darwin.S'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-amd64-darwin.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syscall-amd64-darwin.Po
#	source='m_syswrap/syscall-amd64-darwin.S' object='libcoregrind_x86_freebsd_a-syscall-amd64-darwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CCASFLAGS) $(CCASFLAGS) -c -o libcoregrind_x86_freebsd_a-syscall-amd64-darwin.obj `if test -f 'm_syswrap/syscall-amd64-darwin.S'; then $(CYGPATH_W) 'm_syswrap/syscall-amd64-darwin.S'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syscall-amd64-darwin.S'; fi`

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

libcoregrind_amd64_freebsd_a-m_commandline.o: m_commandline.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_commandline.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_commandline.Tpo -c -o libcoregrind_amd64_freebsd_a-m_commandline.o `test -f 'm_commandline.c' || echo '$(srcdir)/'`m_commandline.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_commandline.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_commandline.Po
#	source='m_commandline.c' object='libcoregrind_amd64_freebsd_a-m_commandline.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_commandline.o `test -f 'm_commandline.c' || echo '$(srcdir)/'`m_commandline.c

libcoregrind_amd64_freebsd_a-m_commandline.obj: m_commandline.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_commandline.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_commandline.Tpo -c -o libcoregrind_amd64_freebsd_a-m_commandline.obj `if test -f 'm_commandline.c'; then $(CYGPATH_W) 'm_commandline.c'; else $(CYGPATH_W) '$(srcdir)/m_commandline.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_commandline.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_commandline.Po
#	source='m_commandline.c' object='libcoregrind_amd64_freebsd_a-m_commandline.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_commandline.obj `if test -f 'm_commandline.c'; then $(CYGPATH_W) 'm_commandline.c'; else $(CYGPATH_W) '$(srcdir)/m_commandline.c'; fi`

libcoregrind_amd64_freebsd_a-m_clientstate.o: m_clientstate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_clientstate.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_clientstate.Tpo -c -o libcoregrind_amd64_freebsd_a-m_clientstate.o `test -f 'm_clientstate.c' || echo '$(srcdir)/'`m_clientstate.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_clientstate.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_clientstate.Po
#	source='m_clientstate.c' object='libcoregrind_amd64_freebsd_a-m_clientstate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_clientstate.o `test -f 'm_clientstate.c' || echo '$(srcdir)/'`m_clientstate.c

libcoregrind_amd64_freebsd_a-m_clientstate.obj: m_clientstate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_clientstate.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_clientstate.Tpo -c -o libcoregrind_amd64_freebsd_a-m_clientstate.obj `if test -f 'm_clientstate.c'; then $(CYGPATH_W) 'm_clientstate.c'; else $(CYGPATH_W) '$(srcdir)/m_clientstate.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_clientstate.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_clientstate.Po
#	source='m_clientstate.c' object='libcoregrind_amd64_freebsd_a-m_clientstate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_clientstate.obj `if test -f 'm_clientstate.c'; then $(CYGPATH_W) 'm_clientstate.c'; else $(CYGPATH_W) '$(srcdir)/m_clientstate.c'; fi`

libcoregrind_amd64_freebsd_a-m_debugger.o: m_debugger.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_debugger.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_debugger.Tpo -c -o libcoregrind_amd64_freebsd_a-m_debugger.o `test -f 'm_debugger.c' || echo '$(srcdir)/'`m_debugger.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_debugger.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_debugger.Po
#	source='m_debugger.c' object='libcoregrind_amd64_freebsd_a-m_debugger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_debugger.o `test -f 'm_debugger.c' || echo '$(srcdir)/'`m_debugger.c

libcoregrind_amd64_freebsd_a-m_debugger.obj: m_debugger.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_debugger.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_debugger.Tpo -c -o libcoregrind_amd64_freebsd_a-m_debugger.obj `if test -f 'm_debugger.c'; then $(CYGPATH_W) 'm_debugger.c'; else $(CYGPATH_W) '$(srcdir)/m_debugger.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_debugger.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_debugger.Po
#	source='m_debugger.c' object='libcoregrind_amd64_freebsd_a-m_debugger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_debugger.obj `if test -f 'm_debugger.c'; then $(CYGPATH_W) 'm_debugger.c'; else $(CYGPATH_W) '$(srcdir)/m_debugger.c'; fi`

libcoregrind_amd64_freebsd_a-m_debuglog.o: m_debuglog.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_debuglog.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_debuglog.Tpo -c -o libcoregrind_amd64_freebsd_a-m_debuglog.o `test -f 'm_debuglog.c' || echo '$(srcdir)/'`m_debuglog.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_debuglog.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_debuglog.Po
#	source='m_debuglog.c' object='libcoregrind_amd64_freebsd_a-m_debuglog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_debuglog.o `test -f 'm_debuglog.c' || echo '$(srcdir)/'`m_debuglog.c

libcoregrind_amd64_freebsd_a-m_debuglog.obj: m_debuglog.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_debuglog.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_debuglog.Tpo -c -o libcoregrind_amd64_freebsd_a-m_debuglog.obj `if test -f 'm_debuglog.c'; then $(CYGPATH_W) 'm_debuglog.c'; else $(CYGPATH_W) '$(srcdir)/m_debuglog.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_debuglog.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_debuglog.Po
#	source='m_debuglog.c' object='libcoregrind_amd64_freebsd_a-m_debuglog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_debuglog.obj `if test -f 'm_debuglog.c'; then $(CYGPATH_W) 'm_debuglog.c'; else $(CYGPATH_W) '$(srcdir)/m_debuglog.c'; fi`

libcoregrind_amd64_freebsd_a-m_errormgr.o: m_errormgr.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_errormgr.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_errormgr.Tpo -c -o libcoregrind_amd64_freebsd_a-m_errormgr.o `test -f 'm_errormgr.c' || echo '$(srcdir)/'`m_errormgr.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_errormgr.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_errormgr.Po
#	source='m_errormgr.c' object='libcoregrind_amd64_freebsd_a-m_errormgr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_errormgr.o `test -f 'm_errormgr.c' || echo '$(srcdir)/'`m_errormgr.c

libcoregrind_amd64_freebsd_a-m_errormgr.obj: m_errormgr.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_errormgr.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_errormgr.Tpo -c -o libcoregrind_amd64_freebsd_a-m_errormgr.obj `if test -f 'm_errormgr.c'; then $(CYGPATH_W) 'm_errormgr.c'; else $(CYGPATH_W) '$(srcdir)/m_errormgr.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_errormgr.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_errormgr.Po
#	source='m_errormgr.c' object='libcoregrind_amd64_freebsd_a-m_errormgr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_errormgr.obj `if test -f 'm_errormgr.c'; then $(CYGPATH_W) 'm_errormgr.c'; else $(CYGPATH_W) '$(srcdir)/m_errormgr.c'; fi`

libcoregrind_amd64_freebsd_a-m_execontext.o: m_execontext.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_execontext.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_execontext.Tpo -c -o libcoregrind_amd64_freebsd_a-m_execontext.o `test -f 'm_execontext.c' || echo '$(srcdir)/'`m_execontext.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_execontext.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_execontext.Po
#	source='m_execontext.c' object='libcoregrind_amd64_freebsd_a-m_execontext.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_execontext.o `test -f 'm_execontext.c' || echo '$(srcdir)/'`m_execontext.c

libcoregrind_amd64_freebsd_a-m_execontext.obj: m_execontext.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_execontext.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_execontext.Tpo -c -o libcoregrind_amd64_freebsd_a-m_execontext.obj `if test -f 'm_execontext.c'; then $(CYGPATH_W) 'm_execontext.c'; else $(CYGPATH_W) '$(srcdir)/m_execontext.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_execontext.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_execontext.Po
#	source='m_execontext.c' object='libcoregrind_amd64_freebsd_a-m_execontext.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_execontext.obj `if test -f 'm_execontext.c'; then $(CYGPATH_W) 'm_execontext.c'; else $(CYGPATH_W) '$(srcdir)/m_execontext.c'; fi`

libcoregrind_amd64_freebsd_a-m_poolalloc.o: m_poolalloc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_poolalloc.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_poolalloc.Tpo -c -o libcoregrind_amd64_freebsd_a-m_poolalloc.o `test -f 'm_poolalloc.c' || echo '$(srcdir)/'`m_poolalloc.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_poolalloc.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_poolalloc.Po
#	source='m_poolalloc.c' object='libcoregrind_amd64_freebsd_a-m_poolalloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_poolalloc.o `test -f 'm_poolalloc.c' || echo '$(srcdir)/'`m_poolalloc.c

libcoregrind_amd64_freebsd_a-m_poolalloc.obj: m_poolalloc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_poolalloc.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_poolalloc.Tpo -c -o libcoregrind_amd64_freebsd_a-m_poolalloc.obj `if test -f 'm_poolalloc.c'; then $(CYGPATH_W) 'm_poolalloc.c'; else $(CYGPATH_W) '$(srcdir)/m_poolalloc.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_poolalloc.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_poolalloc.Po
#	source='m_poolalloc.c' object='libcoregrind_amd64_freebsd_a-m_poolalloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_poolalloc.obj `if test -f 'm_poolalloc.c'; then $(CYGPATH_W) 'm_poolalloc.c'; else $(CYGPATH_W) '$(srcdir)/m_poolalloc.c'; fi`

libcoregrind_amd64_freebsd_a-m_hashtable.o: m_hashtable.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_hashtable.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_hashtable.Tpo -c -o libcoregrind_amd64_freebsd_a-m_hashtable.o `test -f 'm_hashtable.c' || echo '$(srcdir)/'`m_hashtable.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_hashtable.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_hashtable.Po
#	source='m_hashtable.c' object='libcoregrind_amd64_freebsd_a-m_hashtable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_hashtable.o `test -f 'm_hashtable.c' || echo '$(srcdir)/'`m_hashtable.c

libcoregrind_amd64_freebsd_a-m_hashtable.obj: m_hashtable.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_hashtable.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_hashtable.Tpo -c -o libcoregrind_amd64_freebsd_a-m_hashtable.obj `if test -f 'm_hashtable.c'; then $(CYGPATH_W) 'm_hashtable.c'; else $(CYGPATH_W) '$(srcdir)/m_hashtable.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_hashtable.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_hashtable.Po
#	source='m_hashtable.c' object='libcoregrind_amd64_freebsd_a-m_hashtable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_hashtable.obj `if test -f 'm_hashtable.c'; then $(CYGPATH_W) 'm_hashtable.c'; else $(CYGPATH_W) '$(srcdir)/m_hashtable.c'; fi`

libcoregrind_amd64_freebsd_a-m_libcbase.o: m_libcbase.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_libcbase.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcbase.Tpo -c -o libcoregrind_amd64_freebsd_a-m_libcbase.o `test -f 'm_libcbase.c' || echo '$(srcdir)/'`m_libcbase.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcbase.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcbase.Po
#	source='m_libcbase.c' object='libcoregrind_amd64_freebsd_a-m_libcbase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_libcbase.o `test -f 'm_libcbase.c' || echo '$(srcdir)/'`m_libcbase.c

libcoregrind_amd64_freebsd_a-m_libcbase.obj: m_libcbase.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_libcbase.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcbase.Tpo -c -o libcoregrind_amd64_freebsd_a-m_libcbase.obj `if test -f 'm_libcbase.c'; then $(CYGPATH_W) 'm_libcbase.c'; else $(CYGPATH_W) '$(srcdir)/m_libcbase.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcbase.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcbase.Po
#	source='m_libcbase.c' object='libcoregrind_amd64_freebsd_a-m_libcbase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_libcbase.obj `if test -f 'm_libcbase.c'; then $(CYGPATH_W) 'm_libcbase.c'; else $(CYGPATH_W) '$(srcdir)/m_libcbase.c'; fi`

libcoregrind_amd64_freebsd_a-m_libcassert.o: m_libcassert.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_libcassert.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcassert.Tpo -c -o libcoregrind_amd64_freebsd_a-m_libcassert.o `test -f 'm_libcassert.c' || echo '$(srcdir)/'`m_libcassert.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcassert.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcassert.Po
#	source='m_libcassert.c' object='libcoregrind_amd64_freebsd_a-m_libcassert.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_libcassert.o `test -f 'm_libcassert.c' || echo '$(srcdir)/'`m_libcassert.c

libcoregrind_amd64_freebsd_a-m_libcassert.obj: m_libcassert.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_libcassert.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcassert.Tpo -c -o libcoregrind_amd64_freebsd_a-m_libcassert.obj `if test -f 'm_libcassert.c'; then $(CYGPATH_W) 'm_libcassert.c'; else $(CYGPATH_W) '$(srcdir)/m_libcassert.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcassert.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcassert.Po
#	source='m_libcassert.c' object='libcoregrind_amd64_freebsd_a-m_libcassert.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_libcassert.obj `if test -f 'm_libcassert.c'; then $(CYGPATH_W) 'm_libcassert.c'; else $(CYGPATH_W) '$(srcdir)/m_libcassert.c'; fi`

libcoregrind_amd64_freebsd_a-m_libcfile.o: m_libcfile.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_libcfile.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcfile.Tpo -c -o libcoregrind_amd64_freebsd_a-m_libcfile.o `test -f 'm_libcfile.c' || echo '$(srcdir)/'`m_libcfile.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcfile.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcfile.Po
#	source='m_libcfile.c' object='libcoregrind_amd64_freebsd_a-m_libcfile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_libcfile.o `test -f 'm_libcfile.c' || echo '$(srcdir)/'`m_libcfile.c

libcoregrind_amd64_freebsd_a-m_libcfile.obj: m_libcfile.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_libcfile.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcfile.Tpo -c -o libcoregrind_amd64_freebsd_a-m_libcfile.obj `if test -f 'm_libcfile.c'; then $(CYGPATH_W) 'm_libcfile.c'; else $(CYGPATH_W) '$(srcdir)/m_libcfile.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcfile.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcfile.Po
#	source='m_libcfile.c' object='libcoregrind_amd64_freebsd_a-m_libcfile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_libcfile.obj `if test -f 'm_libcfile.c'; then $(CYGPATH_W) 'm_libcfile.c'; else $(CYGPATH_W) '$(srcdir)/m_libcfile.c'; fi`

libcoregrind_amd64_freebsd_a-m_libcprint.o: m_libcprint.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_libcprint.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcprint.Tpo -c -o libcoregrind_amd64_freebsd_a-m_libcprint.o `test -f 'm_libcprint.c' || echo '$(srcdir)/'`m_libcprint.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcprint.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcprint.Po
#	source='m_libcprint.c' object='libcoregrind_amd64_freebsd_a-m_libcprint.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_libcprint.o `test -f 'm_libcprint.c' || echo '$(srcdir)/'`m_libcprint.c

libcoregrind_amd64_freebsd_a-m_libcprint.obj: m_libcprint.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_libcprint.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcprint.Tpo -c -o libcoregrind_amd64_freebsd_a-m_libcprint.obj `if test -f 'm_libcprint.c'; then $(CYGPATH_W) 'm_libcprint.c'; else $(CYGPATH_W) '$(srcdir)/m_libcprint.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcprint.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcprint.Po
#	source='m_libcprint.c' object='libcoregrind_amd64_freebsd_a-m_libcprint.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_libcprint.obj `if test -f 'm_libcprint.c'; then $(CYGPATH_W) 'm_libcprint.c'; else $(CYGPATH_W) '$(srcdir)/m_libcprint.c'; fi`

libcoregrind_amd64_freebsd_a-m_libcproc.o: m_libcproc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_libcproc.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcproc.Tpo -c -o libcoregrind_amd64_freebsd_a-m_libcproc.o `test -f 'm_libcproc.c' || echo '$(srcdir)/'`m_libcproc.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcproc.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcproc.Po
#	source='m_libcproc.c' object='libcoregrind_amd64_freebsd_a-m_libcproc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_libcproc.o `test -f 'm_libcproc.c' || echo '$(srcdir)/'`m_libcproc.c

libcoregrind_amd64_freebsd_a-m_libcproc.obj: m_libcproc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_libcproc.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcproc.Tpo -c -o libcoregrind_amd64_freebsd_a-m_libcproc.obj `if test -f 'm_libcproc.c'; then $(CYGPATH_W) 'm_libcproc.c'; else $(CYGPATH_W) '$(srcdir)/m_libcproc.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcproc.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcproc.Po
#	source='m_libcproc.c' object='libcoregrind_amd64_freebsd_a-m_libcproc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_libcproc.obj `if test -f 'm_libcproc.c'; then $(CYGPATH_W) 'm_libcproc.c'; else $(CYGPATH_W) '$(srcdir)/m_libcproc.c'; fi`

libcoregrind_amd64_freebsd_a-m_libcsetjmp.o: m_libcsetjmp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_libcsetjmp.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcsetjmp.Tpo -c -o libcoregrind_amd64_freebsd_a-m_libcsetjmp.o `test -f 'm_libcsetjmp.c' || echo '$(srcdir)/'`m_libcsetjmp.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcsetjmp.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcsetjmp.Po
#	source='m_libcsetjmp.c' object='libcoregrind_amd64_freebsd_a-m_libcsetjmp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_libcsetjmp.o `test -f 'm_libcsetjmp.c' || echo '$(srcdir)/'`m_libcsetjmp.c

libcoregrind_amd64_freebsd_a-m_libcsetjmp.obj: m_libcsetjmp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_libcsetjmp.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcsetjmp.Tpo -c -o libcoregrind_amd64_freebsd_a-m_libcsetjmp.obj `if test -f 'm_libcsetjmp.c'; then $(CYGPATH_W) 'm_libcsetjmp.c'; else $(CYGPATH_W) '$(srcdir)/m_libcsetjmp.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcsetjmp.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcsetjmp.Po
#	source='m_libcsetjmp.c' object='libcoregrind_amd64_freebsd_a-m_libcsetjmp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_libcsetjmp.obj `if test -f 'm_libcsetjmp.c'; then $(CYGPATH_W) 'm_libcsetjmp.c'; else $(CYGPATH_W) '$(srcdir)/m_libcsetjmp.c'; fi`

libcoregrind_amd64_freebsd_a-m_libcsignal.o: m_libcsignal.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_libcsignal.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcsignal.Tpo -c -o libcoregrind_amd64_freebsd_a-m_libcsignal.o `test -f 'm_libcsignal.c' || echo '$(srcdir)/'`m_libcsignal.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcsignal.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcsignal.Po
#	source='m_libcsignal.c' object='libcoregrind_amd64_freebsd_a-m_libcsignal.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_libcsignal.o `test -f 'm_libcsignal.c' || echo '$(srcdir)/'`m_libcsignal.c

libcoregrind_amd64_freebsd_a-m_libcsignal.obj: m_libcsignal.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_libcsignal.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcsignal.Tpo -c -o libcoregrind_amd64_freebsd_a-m_libcsignal.obj `if test -f 'm_libcsignal.c'; then $(CYGPATH_W) 'm_libcsignal.c'; else $(CYGPATH_W) '$(srcdir)/m_libcsignal.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcsignal.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_libcsignal.Po
#	source='m_libcsignal.c' object='libcoregrind_amd64_freebsd_a-m_libcsignal.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_libcsignal.obj `if test -f 'm_libcsignal.c'; then $(CYGPATH_W) 'm_libcsignal.c'; else $(CYGPATH_W) '$(srcdir)/m_libcsignal.c'; fi`

libcoregrind_amd64_freebsd_a-m_machine.o: m_machine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_machine.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_machine.Tpo -c -o libcoregrind_amd64_freebsd_a-m_machine.o `test -f 'm_machine.c' || echo '$(srcdir)/'`m_machine.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_machine.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_machine.Po
#	source='m_machine.c' object='libcoregrind_amd64_freebsd_a-m_machine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_machine.o `test -f 'm_machine.c' || echo '$(srcdir)/'`m_machine.c

libcoregrind_amd64_freebsd_a-m_machine.obj: m_machine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_machine.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_machine.Tpo -c -o libcoregrind_amd64_freebsd_a-m_machine.obj `if test -f 'm_machine.c'; then $(CYGPATH_W) 'm_machine.c'; else $(CYGPATH_W) '$(srcdir)/m_machine.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_machine.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_machine.Po
#	source='m_machine.c' object='libcoregrind_amd64_freebsd_a-m_machine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_machine.obj `if test -f 'm_machine.c'; then $(CYGPATH_W) 'm_machine.c'; else $(CYGPATH_W) '$(srcdir)/m_machine.c'; fi`

libcoregrind_amd64_freebsd_a-m_main.o: m_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_main.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_main.Tpo -c -o libcoregrind_amd64_freebsd_a-m_main.o `test -f 'm_main.c' || echo '$(srcdir)/'`m_main.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_main.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_main.Po
#	source='m_main.c' object='libcoregrind_amd64_freebsd_a-m_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_main.o `test -f 'm_main.c' || echo '$(srcdir)/'`m_main.c

libcoregrind_amd64_freebsd_a-m_main.obj: m_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_main.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_main.Tpo -c -o libcoregrind_amd64_freebsd_a-m_main.obj `if test -f 'm_main.c'; then $(CYGPATH_W) 'm_main.c'; else $(CYGPATH_W) '$(srcdir)/m_main.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_main.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_main.Po
#	source='m_main.c' object='libcoregrind_amd64_freebsd_a-m_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_main.obj `if test -f 'm_main.c'; then $(CYGPATH_W) 'm_main.c'; else $(CYGPATH_W) '$(srcdir)/m_main.c'; fi`

libcoregrind_amd64_freebsd_a-m_mallocfree.o: m_mallocfree.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_mallocfree.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_mallocfree.Tpo -c -o libcoregrind_amd64_freebsd_a-m_mallocfree.o `test -f 'm_mallocfree.c' || echo '$(srcdir)/'`m_mallocfree.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_mallocfree.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_mallocfree.Po
#	source='m_mallocfree.c' object='libcoregrind_amd64_freebsd_a-m_mallocfree.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_mallocfree.o `test -f 'm_mallocfree.c' || echo '$(srcdir)/'`m_mallocfree.c

libcoregrind_amd64_freebsd_a-m_mallocfree.obj: m_mallocfree.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_mallocfree.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_mallocfree.Tpo -c -o libcoregrind_amd64_freebsd_a-m_mallocfree.obj `if test -f 'm_mallocfree.c'; then $(CYGPATH_W) 'm_mallocfree.c'; else $(CYGPATH_W) '$(srcdir)/m_mallocfree.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_mallocfree.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_mallocfree.Po
#	source='m_mallocfree.c' object='libcoregrind_amd64_freebsd_a-m_mallocfree.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_mallocfree.obj `if test -f 'm_mallocfree.c'; then $(CYGPATH_W) 'm_mallocfree.c'; else $(CYGPATH_W) '$(srcdir)/m_mallocfree.c'; fi`

libcoregrind_amd64_freebsd_a-m_options.o: m_options.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_options.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_options.Tpo -c -o libcoregrind_amd64_freebsd_a-m_options.o `test -f 'm_options.c' || echo '$(srcdir)/'`m_options.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_options.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_options.Po
#	source='m_options.c' object='libcoregrind_amd64_freebsd_a-m_options.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_options.o `test -f 'm_options.c' || echo '$(srcdir)/'`m_options.c

libcoregrind_amd64_freebsd_a-m_options.obj: m_options.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_options.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_options.Tpo -c -o libcoregrind_amd64_freebsd_a-m_options.obj `if test -f 'm_options.c'; then $(CYGPATH_W) 'm_options.c'; else $(CYGPATH_W) '$(srcdir)/m_options.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_options.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_options.Po
#	source='m_options.c' object='libcoregrind_amd64_freebsd_a-m_options.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_options.obj `if test -f 'm_options.c'; then $(CYGPATH_W) 'm_options.c'; else $(CYGPATH_W) '$(srcdir)/m_options.c'; fi`

libcoregrind_amd64_freebsd_a-m_oset.o: m_oset.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_oset.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_oset.Tpo -c -o libcoregrind_amd64_freebsd_a-m_oset.o `test -f 'm_oset.c' || echo '$(srcdir)/'`m_oset.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_oset.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_oset.Po
#	source='m_oset.c' object='libcoregrind_amd64_freebsd_a-m_oset.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_oset.o `test -f 'm_oset.c' || echo '$(srcdir)/'`m_oset.c

libcoregrind_amd64_freebsd_a-m_oset.obj: m_oset.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_oset.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_oset.Tpo -c -o libcoregrind_amd64_freebsd_a-m_oset.obj `if test -f 'm_oset.c'; then $(CYGPATH_W) 'm_oset.c'; else $(CYGPATH_W) '$(srcdir)/m_oset.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_oset.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_oset.Po
#	source='m_oset.c' object='libcoregrind_amd64_freebsd_a-m_oset.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_oset.obj `if test -f 'm_oset.c'; then $(CYGPATH_W) 'm_oset.c'; else $(CYGPATH_W) '$(srcdir)/m_oset.c'; fi`

libcoregrind_amd64_freebsd_a-m_redir.o: m_redir.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_redir.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_redir.Tpo -c -o libcoregrind_amd64_freebsd_a-m_redir.o `test -f 'm_redir.c' || echo '$(srcdir)/'`m_redir.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_redir.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_redir.Po
#	source='m_redir.c' object='libcoregrind_amd64_freebsd_a-m_redir.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_redir.o `test -f 'm_redir.c' || echo '$(srcdir)/'`m_redir.c

libcoregrind_amd64_freebsd_a-m_redir.obj: m_redir.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_redir.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_redir.Tpo -c -o libcoregrind_amd64_freebsd_a-m_redir.obj `if test -f 'm_redir.c'; then $(CYGPATH_W) 'm_redir.c'; else $(CYGPATH_W) '$(srcdir)/m_redir.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_redir.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_redir.Po
#	source='m_redir.c' object='libcoregrind_amd64_freebsd_a-m_redir.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_redir.obj `if test -f 'm_redir.c'; then $(CYGPATH_W) 'm_redir.c'; else $(CYGPATH_W) '$(srcdir)/m_redir.c'; fi`

libcoregrind_amd64_freebsd_a-m_seqmatch.o: m_seqmatch.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_seqmatch.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_seqmatch.Tpo -c -o libcoregrind_amd64_freebsd_a-m_seqmatch.o `test -f 'm_seqmatch.c' || echo '$(srcdir)/'`m_seqmatch.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_seqmatch.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_seqmatch.Po
#	source='m_seqmatch.c' object='libcoregrind_amd64_freebsd_a-m_seqmatch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_seqmatch.o `test -f 'm_seqmatch.c' || echo '$(srcdir)/'`m_seqmatch.c

libcoregrind_amd64_freebsd_a-m_seqmatch.obj: m_seqmatch.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_seqmatch.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_seqmatch.Tpo -c -o libcoregrind_amd64_freebsd_a-m_seqmatch.obj `if test -f 'm_seqmatch.c'; then $(CYGPATH_W) 'm_seqmatch.c'; else $(CYGPATH_W) '$(srcdir)/m_seqmatch.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_seqmatch.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_seqmatch.Po
#	source='m_seqmatch.c' object='libcoregrind_amd64_freebsd_a-m_seqmatch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_seqmatch.obj `if test -f 'm_seqmatch.c'; then $(CYGPATH_W) 'm_seqmatch.c'; else $(CYGPATH_W) '$(srcdir)/m_seqmatch.c'; fi`

libcoregrind_amd64_freebsd_a-m_signals.o: m_signals.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_signals.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_signals.Tpo -c -o libcoregrind_amd64_freebsd_a-m_signals.o `test -f 'm_signals.c' || echo '$(srcdir)/'`m_signals.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_signals.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_signals.Po
#	source='m_signals.c' object='libcoregrind_amd64_freebsd_a-m_signals.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_signals.o `test -f 'm_signals.c' || echo '$(srcdir)/'`m_signals.c

libcoregrind_amd64_freebsd_a-m_signals.obj: m_signals.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_signals.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_signals.Tpo -c -o libcoregrind_amd64_freebsd_a-m_signals.obj `if test -f 'm_signals.c'; then $(CYGPATH_W) 'm_signals.c'; else $(CYGPATH_W) '$(srcdir)/m_signals.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_signals.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_signals.Po
#	source='m_signals.c' object='libcoregrind_amd64_freebsd_a-m_signals.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_signals.obj `if test -f 'm_signals.c'; then $(CYGPATH_W) 'm_signals.c'; else $(CYGPATH_W) '$(srcdir)/m_signals.c'; fi`

libcoregrind_amd64_freebsd_a-m_sparsewa.o: m_sparsewa.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_sparsewa.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_sparsewa.Tpo -c -o libcoregrind_amd64_freebsd_a-m_sparsewa.o `test -f 'm_sparsewa.c' || echo '$(srcdir)/'`m_sparsewa.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_sparsewa.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_sparsewa.Po
#	source='m_sparsewa.c' object='libcoregrind_amd64_freebsd_a-m_sparsewa.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_sparsewa.o `test -f 'm_sparsewa.c' || echo '$(srcdir)/'`m_sparsewa.c

libcoregrind_amd64_freebsd_a-m_sparsewa.obj: m_sparsewa.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_sparsewa.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_sparsewa.Tpo -c -o libcoregrind_amd64_freebsd_a-m_sparsewa.obj `if test -f 'm_sparsewa.c'; then $(CYGPATH_W) 'm_sparsewa.c'; else $(CYGPATH_W) '$(srcdir)/m_sparsewa.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_sparsewa.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_sparsewa.Po
#	source='m_sparsewa.c' object='libcoregrind_amd64_freebsd_a-m_sparsewa.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_sparsewa.obj `if test -f 'm_sparsewa.c'; then $(CYGPATH_W) 'm_sparsewa.c'; else $(CYGPATH_W) '$(srcdir)/m_sparsewa.c'; fi`

libcoregrind_amd64_freebsd_a-m_stacks.o: m_stacks.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_stacks.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_stacks.Tpo -c -o libcoregrind_amd64_freebsd_a-m_stacks.o `test -f 'm_stacks.c' || echo '$(srcdir)/'`m_stacks.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_stacks.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_stacks.Po
#	source='m_stacks.c' object='libcoregrind_amd64_freebsd_a-m_stacks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_stacks.o `test -f 'm_stacks.c' || echo '$(srcdir)/'`m_stacks.c

libcoregrind_amd64_freebsd_a-m_stacks.obj: m_stacks.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_stacks.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_stacks.Tpo -c -o libcoregrind_amd64_freebsd_a-m_stacks.obj `if test -f 'm_stacks.c'; then $(CYGPATH_W) 'm_stacks.c'; else $(CYGPATH_W) '$(srcdir)/m_stacks.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_stacks.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_stacks.Po
#	source='m_stacks.c' object='libcoregrind_amd64_freebsd_a-m_stacks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_stacks.obj `if test -f 'm_stacks.c'; then $(CYGPATH_W) 'm_stacks.c'; else $(CYGPATH_W) '$(srcdir)/m_stacks.c'; fi`

libcoregrind_amd64_freebsd_a-m_stacktrace.o: m_stacktrace.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_stacktrace.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_stacktrace.Tpo -c -o libcoregrind_amd64_freebsd_a-m_stacktrace.o `test -f 'm_stacktrace.c' || echo '$(srcdir)/'`m_stacktrace.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_stacktrace.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_stacktrace.Po
#	source='m_stacktrace.c' object='libcoregrind_amd64_freebsd_a-m_stacktrace.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_stacktrace.o `test -f 'm_stacktrace.c' || echo '$(srcdir)/'`m_stacktrace.c

libcoregrind_amd64_freebsd_a-m_stacktrace.obj: m_stacktrace.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_stacktrace.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_stacktrace.Tpo -c -o libcoregrind_amd64_freebsd_a-m_stacktrace.obj `if test -f 'm_stacktrace.c'; then $(CYGPATH_W) 'm_stacktrace.c'; else $(CYGPATH_W) '$(srcdir)/m_stacktrace.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_stacktrace.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_stacktrace.Po
#	source='m_stacktrace.c' object='libcoregrind_amd64_freebsd_a-m_stacktrace.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_stacktrace.obj `if test -f 'm_stacktrace.c'; then $(CYGPATH_W) 'm_stacktrace.c'; else $(CYGPATH_W) '$(srcdir)/m_stacktrace.c'; fi`

libcoregrind_amd64_freebsd_a-m_syscall.o: m_syscall.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_syscall.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_syscall.Tpo -c -o libcoregrind_amd64_freebsd_a-m_syscall.o `test -f 'm_syscall.c' || echo '$(srcdir)/'`m_syscall.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_syscall.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_syscall.Po
#	source='m_syscall.c' object='libcoregrind_amd64_freebsd_a-m_syscall.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_syscall.o `test -f 'm_syscall.c' || echo '$(srcdir)/'`m_syscall.c

libcoregrind_amd64_freebsd_a-m_syscall.obj: m_syscall.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_syscall.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_syscall.Tpo -c -o libcoregrind_amd64_freebsd_a-m_syscall.obj `if test -f 'm_syscall.c'; then $(CYGPATH_W) 'm_syscall.c'; else $(CYGPATH_W) '$(srcdir)/m_syscall.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_syscall.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_syscall.Po
#	source='m_syscall.c' object='libcoregrind_amd64_freebsd_a-m_syscall.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_syscall.obj `if test -f 'm_syscall.c'; then $(CYGPATH_W) 'm_syscall.c'; else $(CYGPATH_W) '$(srcdir)/m_syscall.c'; fi`

libcoregrind_amd64_freebsd_a-m_threadstate.o: m_threadstate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_threadstate.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_threadstate.Tpo -c -o libcoregrind_amd64_freebsd_a-m_threadstate.o `test -f 'm_threadstate.c' || echo '$(srcdir)/'`m_threadstate.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_threadstate.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_threadstate.Po
#	source='m_threadstate.c' object='libcoregrind_amd64_freebsd_a-m_threadstate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_threadstate.o `test -f 'm_threadstate.c' || echo '$(srcdir)/'`m_threadstate.c

libcoregrind_amd64_freebsd_a-m_threadstate.obj: m_threadstate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_threadstate.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_threadstate.Tpo -c -o libcoregrind_amd64_freebsd_a-m_threadstate.obj `if test -f 'm_threadstate.c'; then $(CYGPATH_W) 'm_threadstate.c'; else $(CYGPATH_W) '$(srcdir)/m_threadstate.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_threadstate.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_threadstate.Po
#	source='m_threadstate.c' object='libcoregrind_amd64_freebsd_a-m_threadstate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_threadstate.obj `if test -f 'm_threadstate.c'; then $(CYGPATH_W) 'm_threadstate.c'; else $(CYGPATH_W) '$(srcdir)/m_threadstate.c'; fi`

libcoregrind_amd64_freebsd_a-m_tooliface.o: m_tooliface.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_tooliface.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_tooliface.Tpo -c -o libcoregrind_amd64_freebsd_a-m_tooliface.o `test -f 'm_tooliface.c' || echo '$(srcdir)/'`m_tooliface.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_tooliface.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_tooliface.Po
#	source='m_tooliface.c' object='libcoregrind_amd64_freebsd_a-m_tooliface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_tooliface.o `test -f 'm_tooliface.c' || echo '$(srcdir)/'`m_tooliface.c

libcoregrind_amd64_freebsd_a-m_tooliface.obj: m_tooliface.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_tooliface.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_tooliface.Tpo -c -o libcoregrind_amd64_freebsd_a-m_tooliface.obj `if test -f 'm_tooliface.c'; then $(CYGPATH_W) 'm_tooliface.c'; else $(CYGPATH_W) '$(srcdir)/m_tooliface.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_tooliface.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_tooliface.Po
#	source='m_tooliface.c' object='libcoregrind_amd64_freebsd_a-m_tooliface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_tooliface.obj `if test -f 'm_tooliface.c'; then $(CYGPATH_W) 'm_tooliface.c'; else $(CYGPATH_W) '$(srcdir)/m_tooliface.c'; fi`

libcoregrind_amd64_freebsd_a-m_translate.o: m_translate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_translate.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_translate.Tpo -c -o libcoregrind_amd64_freebsd_a-m_translate.o `test -f 'm_translate.c' || echo '$(srcdir)/'`m_translate.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_translate.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_translate.Po
#	source='m_translate.c' object='libcoregrind_amd64_freebsd_a-m_translate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_translate.o `test -f 'm_translate.c' || echo '$(srcdir)/'`m_translate.c

libcoregrind_amd64_freebsd_a-m_translate.obj: m_translate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_translate.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_translate.Tpo -c -o libcoregrind_amd64_freebsd_a-m_translate.obj `if test -f 'm_translate.c'; then $(CYGPATH_W) 'm_translate.c'; else $(CYGPATH_W) '$(srcdir)/m_translate.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_translate.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_translate.Po
#	source='m_translate.c' object='libcoregrind_amd64_freebsd_a-m_translate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_translate.obj `if test -f 'm_translate.c'; then $(CYGPATH_W) 'm_translate.c'; else $(CYGPATH_W) '$(srcdir)/m_translate.c'; fi`

libcoregrind_amd64_freebsd_a-m_transtab.o: m_transtab.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_transtab.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_transtab.Tpo -c -o libcoregrind_amd64_freebsd_a-m_transtab.o `test -f 'm_transtab.c' || echo '$(srcdir)/'`m_transtab.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_transtab.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_transtab.Po
#	source='m_transtab.c' object='libcoregrind_amd64_freebsd_a-m_transtab.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_transtab.o `test -f 'm_transtab.c' || echo '$(srcdir)/'`m_transtab.c

libcoregrind_amd64_freebsd_a-m_transtab.obj: m_transtab.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_transtab.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_transtab.Tpo -c -o libcoregrind_amd64_freebsd_a-m_transtab.obj `if test -f 'm_transtab.c'; then $(CYGPATH_W) 'm_transtab.c'; else $(CYGPATH_W) '$(srcdir)/m_transtab.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_transtab.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_transtab.Po
#	source='m_transtab.c' object='libcoregrind_amd64_freebsd_a-m_transtab.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_transtab.obj `if test -f 'm_transtab.c'; then $(CYGPATH_W) 'm_transtab.c'; else $(CYGPATH_W) '$(srcdir)/m_transtab.c'; fi`

libcoregrind_amd64_freebsd_a-m_vki.o: m_vki.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_vki.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_vki.Tpo -c -o libcoregrind_amd64_freebsd_a-m_vki.o `test -f 'm_vki.c' || echo '$(srcdir)/'`m_vki.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_vki.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_vki.Po
#	source='m_vki.c' object='libcoregrind_amd64_freebsd_a-m_vki.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_vki.o `test -f 'm_vki.c' || echo '$(srcdir)/'`m_vki.c

libcoregrind_amd64_freebsd_a-m_vki.obj: m_vki.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_vki.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_vki.Tpo -c -o libcoregrind_amd64_freebsd_a-m_vki.obj `if test -f 'm_vki.c'; then $(CYGPATH_W) 'm_vki.c'; else $(CYGPATH_W) '$(srcdir)/m_vki.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_vki.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_vki.Po
#	source='m_vki.c' object='libcoregrind_amd64_freebsd_a-m_vki.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_vki.obj `if test -f 'm_vki.c'; then $(CYGPATH_W) 'm_vki.c'; else $(CYGPATH_W) '$(srcdir)/m_vki.c'; fi`

libcoregrind_amd64_freebsd_a-m_vkiscnums.o: m_vkiscnums.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_vkiscnums.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_vkiscnums.Tpo -c -o libcoregrind_amd64_freebsd_a-m_vkiscnums.o `test -f 'm_vkiscnums.c' || echo '$(srcdir)/'`m_vkiscnums.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_vkiscnums.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_vkiscnums.Po
#	source='m_vkiscnums.c' object='libcoregrind_amd64_freebsd_a-m_vkiscnums.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_vkiscnums.o `test -f 'm_vkiscnums.c' || echo '$(srcdir)/'`m_vkiscnums.c

libcoregrind_amd64_freebsd_a-m_vkiscnums.obj: m_vkiscnums.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_vkiscnums.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_vkiscnums.Tpo -c -o libcoregrind_amd64_freebsd_a-m_vkiscnums.obj `if test -f 'm_vkiscnums.c'; then $(CYGPATH_W) 'm_vkiscnums.c'; else $(CYGPATH_W) '$(srcdir)/m_vkiscnums.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_vkiscnums.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_vkiscnums.Po
#	source='m_vkiscnums.c' object='libcoregrind_amd64_freebsd_a-m_vkiscnums.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_vkiscnums.obj `if test -f 'm_vkiscnums.c'; then $(CYGPATH_W) 'm_vkiscnums.c'; else $(CYGPATH_W) '$(srcdir)/m_vkiscnums.c'; fi`

libcoregrind_amd64_freebsd_a-m_wordfm.o: m_wordfm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_wordfm.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_wordfm.Tpo -c -o libcoregrind_amd64_freebsd_a-m_wordfm.o `test -f 'm_wordfm.c' || echo '$(srcdir)/'`m_wordfm.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_wordfm.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_wordfm.Po
#	source='m_wordfm.c' object='libcoregrind_amd64_freebsd_a-m_wordfm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_wordfm.o `test -f 'm_wordfm.c' || echo '$(srcdir)/'`m_wordfm.c

libcoregrind_amd64_freebsd_a-m_wordfm.obj: m_wordfm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_wordfm.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_wordfm.Tpo -c -o libcoregrind_amd64_freebsd_a-m_wordfm.obj `if test -f 'm_wordfm.c'; then $(CYGPATH_W) 'm_wordfm.c'; else $(CYGPATH_W) '$(srcdir)/m_wordfm.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_wordfm.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_wordfm.Po
#	source='m_wordfm.c' object='libcoregrind_amd64_freebsd_a-m_wordfm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_wordfm.obj `if test -f 'm_wordfm.c'; then $(CYGPATH_W) 'm_wordfm.c'; else $(CYGPATH_W) '$(srcdir)/m_wordfm.c'; fi`

libcoregrind_amd64_freebsd_a-m_xarray.o: m_xarray.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_xarray.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_xarray.Tpo -c -o libcoregrind_amd64_freebsd_a-m_xarray.o `test -f 'm_xarray.c' || echo '$(srcdir)/'`m_xarray.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_xarray.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_xarray.Po
#	source='m_xarray.c' object='libcoregrind_amd64_freebsd_a-m_xarray.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_xarray.o `test -f 'm_xarray.c' || echo '$(srcdir)/'`m_xarray.c

libcoregrind_amd64_freebsd_a-m_xarray.obj: m_xarray.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_xarray.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_xarray.Tpo -c -o libcoregrind_amd64_freebsd_a-m_xarray.obj `if test -f 'm_xarray.c'; then $(CYGPATH_W) 'm_xarray.c'; else $(CYGPATH_W) '$(srcdir)/m_xarray.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_xarray.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_xarray.Po
#	source='m_xarray.c' object='libcoregrind_amd64_freebsd_a-m_xarray.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_xarray.obj `if test -f 'm_xarray.c'; then $(CYGPATH_W) 'm_xarray.c'; else $(CYGPATH_W) '$(srcdir)/m_xarray.c'; fi`

libcoregrind_amd64_freebsd_a-m_aspacehl.o: m_aspacehl.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_aspacehl.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_aspacehl.Tpo -c -o libcoregrind_amd64_freebsd_a-m_aspacehl.o `test -f 'm_aspacehl.c' || echo '$(srcdir)/'`m_aspacehl.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_aspacehl.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_aspacehl.Po
#	source='m_aspacehl.c' object='libcoregrind_amd64_freebsd_a-m_aspacehl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_aspacehl.o `test -f 'm_aspacehl.c' || echo '$(srcdir)/'`m_aspacehl.c

libcoregrind_amd64_freebsd_a-m_aspacehl.obj: m_aspacehl.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_aspacehl.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_aspacehl.Tpo -c -o libcoregrind_amd64_freebsd_a-m_aspacehl.obj `if test -f 'm_aspacehl.c'; then $(CYGPATH_W) 'm_aspacehl.c'; else $(CYGPATH_W) '$(srcdir)/m_aspacehl.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_aspacehl.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_aspacehl.Po
#	source='m_aspacehl.c' object='libcoregrind_amd64_freebsd_a-m_aspacehl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_aspacehl.obj `if test -f 'm_aspacehl.c'; then $(CYGPATH_W) 'm_aspacehl.c'; else $(CYGPATH_W) '$(srcdir)/m_aspacehl.c'; fi`

libcoregrind_amd64_freebsd_a-aspacemgr-common.o: m_aspacemgr/aspacemgr-common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-aspacemgr-common.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-aspacemgr-common.Tpo -c -o libcoregrind_amd64_freebsd_a-aspacemgr-common.o `test -f 'm_aspacemgr/aspacemgr-common.c' || echo '$(srcdir)/'`m_aspacemgr/aspacemgr-common.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-aspacemgr-common.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-aspacemgr-common.Po
#	source='m_aspacemgr/aspacemgr-common.c' object='libcoregrind_amd64_freebsd_a-aspacemgr-common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-aspacemgr-common.o `test -f 'm_aspacemgr/aspacemgr-common.c' || echo '$(srcdir)/'`m_aspacemgr/aspacemgr-common.c

libcoregrind_amd64_freebsd_a-aspacemgr-common.obj: m_aspacemgr/aspacemgr-common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-aspacemgr-common.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-aspacemgr-common.Tpo -c -o libcoregrind_amd64_freebsd_a-aspacemgr-common.obj `if test -f 'm_aspacemgr/aspacemgr-common.c'; then $(CYGPATH_W) 'm_aspacemgr/aspacemgr-common.c'; else $(CYGPATH_W) '$(srcdir)/m_aspacemgr/aspacemgr-common.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-aspacemgr-common.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-aspacemgr-common.Po
#	source='m_aspacemgr/aspacemgr-common.c' object='libcoregrind_amd64_freebsd_a-aspacemgr-common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-aspacemgr-common.obj `if test -f 'm_aspacemgr/aspacemgr-common.c'; then $(CYGPATH_W) 'm_aspacemgr/aspacemgr-common.c'; else $(CYGPATH_W) '$(srcdir)/m_aspacemgr/aspacemgr-common.c'; fi`

libcoregrind_amd64_freebsd_a-aspacemgr-linux.o: m_aspacemgr/aspacemgr-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-aspacemgr-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-aspacemgr-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-aspacemgr-linux.o `test -f 'm_aspacemgr/aspacemgr-linux.c' || echo '$(srcdir)/'`m_aspacemgr/aspacemgr-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-aspacemgr-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-aspacemgr-linux.Po
#	source='m_aspacemgr/aspacemgr-linux.c' object='libcoregrind_amd64_freebsd_a-aspacemgr-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-aspacemgr-linux.o `test -f 'm_aspacemgr/aspacemgr-linux.c' || echo '$(srcdir)/'`m_aspacemgr/aspacemgr-linux.c

libcoregrind_amd64_freebsd_a-aspacemgr-linux.obj: m_aspacemgr/aspacemgr-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-aspacemgr-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-aspacemgr-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-aspacemgr-linux.obj `if test -f 'm_aspacemgr/aspacemgr-linux.c'; then $(CYGPATH_W) 'm_aspacemgr/aspacemgr-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_aspacemgr/aspacemgr-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-aspacemgr-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-aspacemgr-linux.Po
#	source='m_aspacemgr/aspacemgr-linux.c' object='libcoregrind_amd64_freebsd_a-aspacemgr-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-aspacemgr-linux.obj `if test -f 'm_aspacemgr/aspacemgr-linux.c'; then $(CYGPATH_W) 'm_aspacemgr/aspacemgr-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_aspacemgr/aspacemgr-linux.c'; fi`

libcoregrind_amd64_freebsd_a-coredump-elf.o: m_coredump/coredump-elf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-coredump-elf.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-coredump-elf.Tpo -c -o libcoregrind_amd64_freebsd_a-coredump-elf.o `test -f 'm_coredump/coredump-elf.c' || echo '$(srcdir)/'`m_coredump/coredump-elf.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-coredump-elf.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-coredump-elf.Po
#	source='m_coredump/coredump-elf.c' object='libcoregrind_amd64_freebsd_a-coredump-elf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-coredump-elf.o `test -f 'm_coredump/coredump-elf.c' || echo '$(srcdir)/'`m_coredump/coredump-elf.c

libcoregrind_amd64_freebsd_a-coredump-elf.obj: m_coredump/coredump-elf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-coredump-elf.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-coredump-elf.Tpo -c -o libcoregrind_amd64_freebsd_a-coredump-elf.obj `if test -f 'm_coredump/coredump-elf.c'; then $(CYGPATH_W) 'm_coredump/coredump-elf.c'; else $(CYGPATH_W) '$(srcdir)/m_coredump/coredump-elf.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-coredump-elf.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-coredump-elf.Po
#	source='m_coredump/coredump-elf.c' object='libcoregrind_amd64_freebsd_a-coredump-elf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-coredump-elf.obj `if test -f 'm_coredump/coredump-elf.c'; then $(CYGPATH_W) 'm_coredump/coredump-elf.c'; else $(CYGPATH_W) '$(srcdir)/m_coredump/coredump-elf.c'; fi`

libcoregrind_amd64_freebsd_a-coredump-macho.o: m_coredump/coredump-macho.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-coredump-macho.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-coredump-macho.Tpo -c -o libcoregrind_amd64_freebsd_a-coredump-macho.o `test -f 'm_coredump/coredump-macho.c' || echo '$(srcdir)/'`m_coredump/coredump-macho.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-coredump-macho.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-coredump-macho.Po
#	source='m_coredump/coredump-macho.c' object='libcoregrind_amd64_freebsd_a-coredump-macho.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-coredump-macho.o `test -f 'm_coredump/coredump-macho.c' || echo '$(srcdir)/'`m_coredump/coredump-macho.c

libcoregrind_amd64_freebsd_a-coredump-macho.obj: m_coredump/coredump-macho.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-coredump-macho.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-coredump-macho.Tpo -c -o libcoregrind_amd64_freebsd_a-coredump-macho.obj `if test -f 'm_coredump/coredump-macho.c'; then $(CYGPATH_W) 'm_coredump/coredump-macho.c'; else $(CYGPATH_W) '$(srcdir)/m_coredump/coredump-macho.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-coredump-macho.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-coredump-macho.Po
#	source='m_coredump/coredump-macho.c' object='libcoregrind_amd64_freebsd_a-coredump-macho.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-coredump-macho.obj `if test -f 'm_coredump/coredump-macho.c'; then $(CYGPATH_W) 'm_coredump/coredump-macho.c'; else $(CYGPATH_W) '$(srcdir)/m_coredump/coredump-macho.c'; fi`

libcoregrind_amd64_freebsd_a-misc.o: m_debuginfo/misc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-misc.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-misc.Tpo -c -o libcoregrind_amd64_freebsd_a-misc.o `test -f 'm_debuginfo/misc.c' || echo '$(srcdir)/'`m_debuginfo/misc.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-misc.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-misc.Po
#	source='m_debuginfo/misc.c' object='libcoregrind_amd64_freebsd_a-misc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-misc.o `test -f 'm_debuginfo/misc.c' || echo '$(srcdir)/'`m_debuginfo/misc.c

libcoregrind_amd64_freebsd_a-misc.obj: m_debuginfo/misc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-misc.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-misc.Tpo -c -o libcoregrind_amd64_freebsd_a-misc.obj `if test -f 'm_debuginfo/misc.c'; then $(CYGPATH_W) 'm_debuginfo/misc.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/misc.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-misc.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-misc.Po
#	source='m_debuginfo/misc.c' object='libcoregrind_amd64_freebsd_a-misc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-misc.obj `if test -f 'm_debuginfo/misc.c'; then $(CYGPATH_W) 'm_debuginfo/misc.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/misc.c'; fi`

libcoregrind_amd64_freebsd_a-d3basics.o: m_debuginfo/d3basics.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-d3basics.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-d3basics.Tpo -c -o libcoregrind_amd64_freebsd_a-d3basics.o `test -f 'm_debuginfo/d3basics.c' || echo '$(srcdir)/'`m_debuginfo/d3basics.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-d3basics.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-d3basics.Po
#	source='m_debuginfo/d3basics.c' object='libcoregrind_amd64_freebsd_a-d3basics.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-d3basics.o `test -f 'm_debuginfo/d3basics.c' || echo '$(srcdir)/'`m_debuginfo/d3basics.c

libcoregrind_amd64_freebsd_a-d3basics.obj: m_debuginfo/d3basics.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-d3basics.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-d3basics.Tpo -c -o libcoregrind_amd64_freebsd_a-d3basics.obj `if test -f 'm_debuginfo/d3basics.c'; then $(CYGPATH_W) 'm_debuginfo/d3basics.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/d3basics.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-d3basics.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-d3basics.Po
#	source='m_debuginfo/d3basics.c' object='libcoregrind_amd64_freebsd_a-d3basics.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-d3basics.obj `if test -f 'm_debuginfo/d3basics.c'; then $(CYGPATH_W) 'm_debuginfo/d3basics.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/d3basics.c'; fi`

libcoregrind_amd64_freebsd_a-debuginfo.o: m_debuginfo/debuginfo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-debuginfo.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-debuginfo.Tpo -c -o libcoregrind_amd64_freebsd_a-debuginfo.o `test -f 'm_debuginfo/debuginfo.c' || echo '$(srcdir)/'`m_debuginfo/debuginfo.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-debuginfo.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-debuginfo.Po
#	source='m_debuginfo/debuginfo.c' object='libcoregrind_amd64_freebsd_a-debuginfo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-debuginfo.o `test -f 'm_debuginfo/debuginfo.c' || echo '$(srcdir)/'`m_debuginfo/debuginfo.c

libcoregrind_amd64_freebsd_a-debuginfo.obj: m_debuginfo/debuginfo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-debuginfo.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-debuginfo.Tpo -c -o libcoregrind_amd64_freebsd_a-debuginfo.obj `if test -f 'm_debuginfo/debuginfo.c'; then $(CYGPATH_W) 'm_debuginfo/debuginfo.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/debuginfo.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-debuginfo.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-debuginfo.Po
#	source='m_debuginfo/debuginfo.c' object='libcoregrind_amd64_freebsd_a-debuginfo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-debuginfo.obj `if test -f 'm_debuginfo/debuginfo.c'; then $(CYGPATH_W) 'm_debuginfo/debuginfo.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/debuginfo.c'; fi`

libcoregrind_amd64_freebsd_a-readdwarf.o: m_debuginfo/readdwarf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-readdwarf.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-readdwarf.Tpo -c -o libcoregrind_amd64_freebsd_a-readdwarf.o `test -f 'm_debuginfo/readdwarf.c' || echo '$(srcdir)/'`m_debuginfo/readdwarf.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-readdwarf.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-readdwarf.Po
#	source='m_debuginfo/readdwarf.c' object='libcoregrind_amd64_freebsd_a-readdwarf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-readdwarf.o `test -f 'm_debuginfo/readdwarf.c' || echo '$(srcdir)/'`m_debuginfo/readdwarf.c

libcoregrind_amd64_freebsd_a-readdwarf.obj: m_debuginfo/readdwarf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-readdwarf.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-readdwarf.Tpo -c -o libcoregrind_amd64_freebsd_a-readdwarf.obj `if test -f 'm_debuginfo/readdwarf.c'; then $(CYGPATH_W) 'm_debuginfo/readdwarf.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/readdwarf.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-readdwarf.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-readdwarf.Po
#	source='m_debuginfo/readdwarf.c' object='libcoregrind_amd64_freebsd_a-readdwarf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-readdwarf.obj `if test -f 'm_debuginfo/readdwarf.c'; then $(CYGPATH_W) 'm_debuginfo/readdwarf.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/readdwarf.c'; fi`

libcoregrind_amd64_freebsd_a-readdwarf3.o: m_debuginfo/readdwarf3.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-readdwarf3.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-readdwarf3.Tpo -c -o libcoregrind_amd64_freebsd_a-readdwarf3.o `test -f 'm_debuginfo/readdwarf3.c' || echo '$(srcdir)/'`m_debuginfo/readdwarf3.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-readdwarf3.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-readdwarf3.Po
#	source='m_debuginfo/readdwarf3.c' object='libcoregrind_amd64_freebsd_a-readdwarf3.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-readdwarf3.o `test -f 'm_debuginfo/readdwarf3.c' || echo '$(srcdir)/'`m_debuginfo/readdwarf3.c

libcoregrind_amd64_freebsd_a-readdwarf3.obj: m_debuginfo/readdwarf3.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-readdwarf3.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-readdwarf3.Tpo -c -o libcoregrind_amd64_freebsd_a-readdwarf3.obj `if test -f 'm_debuginfo/readdwarf3.c'; then $(CYGPATH_W) 'm_debuginfo/readdwarf3.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/readdwarf3.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-readdwarf3.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-readdwarf3.Po
#	source='m_debuginfo/readdwarf3.c' object='libcoregrind_amd64_freebsd_a-readdwarf3.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-readdwarf3.obj `if test -f 'm_debuginfo/readdwarf3.c'; then $(CYGPATH_W) 'm_debuginfo/readdwarf3.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/readdwarf3.c'; fi`

libcoregrind_amd64_freebsd_a-readelf.o: m_debuginfo/readelf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-readelf.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-readelf.Tpo -c -o libcoregrind_amd64_freebsd_a-readelf.o `test -f 'm_debuginfo/readelf.c' || echo '$(srcdir)/'`m_debuginfo/readelf.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-readelf.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-readelf.Po
#	source='m_debuginfo/readelf.c' object='libcoregrind_amd64_freebsd_a-readelf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-readelf.o `test -f 'm_debuginfo/readelf.c' || echo '$(srcdir)/'`m_debuginfo/readelf.c

libcoregrind_amd64_freebsd_a-readelf.obj: m_debuginfo/readelf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-readelf.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-readelf.Tpo -c -o libcoregrind_amd64_freebsd_a-readelf.obj `if test -f 'm_debuginfo/readelf.c'; then $(CYGPATH_W) 'm_debuginfo/readelf.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/readelf.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-readelf.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-readelf.Po
#	source='m_debuginfo/readelf.c' object='libcoregrind_amd64_freebsd_a-readelf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-readelf.obj `if test -f 'm_debuginfo/readelf.c'; then $(CYGPATH_W) 'm_debuginfo/readelf.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/readelf.c'; fi`

libcoregrind_amd64_freebsd_a-readmacho.o: m_debuginfo/readmacho.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-readmacho.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-readmacho.Tpo -c -o libcoregrind_amd64_freebsd_a-readmacho.o `test -f 'm_debuginfo/readmacho.c' || echo '$(srcdir)/'`m_debuginfo/readmacho.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-readmacho.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-readmacho.Po
#	source='m_debuginfo/readmacho.c' object='libcoregrind_amd64_freebsd_a-readmacho.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-readmacho.o `test -f 'm_debuginfo/readmacho.c' || echo '$(srcdir)/'`m_debuginfo/readmacho.c

libcoregrind_amd64_freebsd_a-readmacho.obj: m_debuginfo/readmacho.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-readmacho.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-readmacho.Tpo -c -o libcoregrind_amd64_freebsd_a-readmacho.obj `if test -f 'm_debuginfo/readmacho.c'; then $(CYGPATH_W) 'm_debuginfo/readmacho.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/readmacho.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-readmacho.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-readmacho.Po
#	source='m_debuginfo/readmacho.c' object='libcoregrind_amd64_freebsd_a-readmacho.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-readmacho.obj `if test -f 'm_debuginfo/readmacho.c'; then $(CYGPATH_W) 'm_debuginfo/readmacho.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/readmacho.c'; fi`

libcoregrind_amd64_freebsd_a-readpdb.o: m_debuginfo/readpdb.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-readpdb.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-readpdb.Tpo -c -o libcoregrind_amd64_freebsd_a-readpdb.o `test -f 'm_debuginfo/readpdb.c' || echo '$(srcdir)/'`m_debuginfo/readpdb.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-readpdb.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-readpdb.Po
#	source='m_debuginfo/readpdb.c' object='libcoregrind_amd64_freebsd_a-readpdb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-readpdb.o `test -f 'm_debuginfo/readpdb.c' || echo '$(srcdir)/'`m_debuginfo/readpdb.c

libcoregrind_amd64_freebsd_a-readpdb.obj: m_debuginfo/readpdb.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-readpdb.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-readpdb.Tpo -c -o libcoregrind_amd64_freebsd_a-readpdb.obj `if test -f 'm_debuginfo/readpdb.c'; then $(CYGPATH_W) 'm_debuginfo/readpdb.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/readpdb.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-readpdb.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-readpdb.Po
#	source='m_debuginfo/readpdb.c' object='libcoregrind_amd64_freebsd_a-readpdb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-readpdb.obj `if test -f 'm_debuginfo/readpdb.c'; then $(CYGPATH_W) 'm_debuginfo/readpdb.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/readpdb.c'; fi`

libcoregrind_amd64_freebsd_a-readstabs.o: m_debuginfo/readstabs.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-readstabs.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-readstabs.Tpo -c -o libcoregrind_amd64_freebsd_a-readstabs.o `test -f 'm_debuginfo/readstabs.c' || echo '$(srcdir)/'`m_debuginfo/readstabs.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-readstabs.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-readstabs.Po
#	source='m_debuginfo/readstabs.c' object='libcoregrind_amd64_freebsd_a-readstabs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-readstabs.o `test -f 'm_debuginfo/readstabs.c' || echo '$(srcdir)/'`m_debuginfo/readstabs.c

libcoregrind_amd64_freebsd_a-readstabs.obj: m_debuginfo/readstabs.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-readstabs.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-readstabs.Tpo -c -o libcoregrind_amd64_freebsd_a-readstabs.obj `if test -f 'm_debuginfo/readstabs.c'; then $(CYGPATH_W) 'm_debuginfo/readstabs.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/readstabs.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-readstabs.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-readstabs.Po
#	source='m_debuginfo/readstabs.c' object='libcoregrind_amd64_freebsd_a-readstabs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-readstabs.obj `if test -f 'm_debuginfo/readstabs.c'; then $(CYGPATH_W) 'm_debuginfo/readstabs.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/readstabs.c'; fi`

libcoregrind_amd64_freebsd_a-storage.o: m_debuginfo/storage.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-storage.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-storage.Tpo -c -o libcoregrind_amd64_freebsd_a-storage.o `test -f 'm_debuginfo/storage.c' || echo '$(srcdir)/'`m_debuginfo/storage.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-storage.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-storage.Po
#	source='m_debuginfo/storage.c' object='libcoregrind_amd64_freebsd_a-storage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-storage.o `test -f 'm_debuginfo/storage.c' || echo '$(srcdir)/'`m_debuginfo/storage.c

libcoregrind_amd64_freebsd_a-storage.obj: m_debuginfo/storage.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-storage.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-storage.Tpo -c -o libcoregrind_amd64_freebsd_a-storage.obj `if test -f 'm_debuginfo/storage.c'; then $(CYGPATH_W) 'm_debuginfo/storage.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/storage.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-storage.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-storage.Po
#	source='m_debuginfo/storage.c' object='libcoregrind_amd64_freebsd_a-storage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-storage.obj `if test -f 'm_debuginfo/storage.c'; then $(CYGPATH_W) 'm_debuginfo/storage.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/storage.c'; fi`

libcoregrind_amd64_freebsd_a-tytypes.o: m_debuginfo/tytypes.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-tytypes.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-tytypes.Tpo -c -o libcoregrind_amd64_freebsd_a-tytypes.o `test -f 'm_debuginfo/tytypes.c' || echo '$(srcdir)/'`m_debuginfo/tytypes.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-tytypes.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-tytypes.Po
#	source='m_debuginfo/tytypes.c' object='libcoregrind_amd64_freebsd_a-tytypes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-tytypes.o `test -f 'm_debuginfo/tytypes.c' || echo '$(srcdir)/'`m_debuginfo/tytypes.c

libcoregrind_amd64_freebsd_a-tytypes.obj: m_debuginfo/tytypes.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-tytypes.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-tytypes.Tpo -c -o libcoregrind_amd64_freebsd_a-tytypes.obj `if test -f 'm_debuginfo/tytypes.c'; then $(CYGPATH_W) 'm_debuginfo/tytypes.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/tytypes.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-tytypes.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-tytypes.Po
#	source='m_debuginfo/tytypes.c' object='libcoregrind_amd64_freebsd_a-tytypes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-tytypes.obj `if test -f 'm_debuginfo/tytypes.c'; then $(CYGPATH_W) 'm_debuginfo/tytypes.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/tytypes.c'; fi`

libcoregrind_amd64_freebsd_a-cp-demangle.o: m_demangle/cp-demangle.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-cp-demangle.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-cp-demangle.Tpo -c -o libcoregrind_amd64_freebsd_a-cp-demangle.o `test -f 'm_demangle/cp-demangle.c' || echo '$(srcdir)/'`m_demangle/cp-demangle.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-cp-demangle.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-cp-demangle.Po
#	source='m_demangle/cp-demangle.c' object='libcoregrind_amd64_freebsd_a-cp-demangle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-cp-demangle.o `test -f 'm_demangle/cp-demangle.c' || echo '$(srcdir)/'`m_demangle/cp-demangle.c

libcoregrind_amd64_freebsd_a-cp-demangle.obj: m_demangle/cp-demangle.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-cp-demangle.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-cp-demangle.Tpo -c -o libcoregrind_amd64_freebsd_a-cp-demangle.obj `if test -f 'm_demangle/cp-demangle.c'; then $(CYGPATH_W) 'm_demangle/cp-demangle.c'; else $(CYGPATH_W) '$(srcdir)/m_demangle/cp-demangle.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-cp-demangle.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-cp-demangle.Po
#	source='m_demangle/cp-demangle.c' object='libcoregrind_amd64_freebsd_a-cp-demangle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-cp-demangle.obj `if test -f 'm_demangle/cp-demangle.c'; then $(CYGPATH_W) 'm_demangle/cp-demangle.c'; else $(CYGPATH_W) '$(srcdir)/m_demangle/cp-demangle.c'; fi`

libcoregrind_amd64_freebsd_a-cplus-dem.o: m_demangle/cplus-dem.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-cplus-dem.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-cplus-dem.Tpo -c -o libcoregrind_amd64_freebsd_a-cplus-dem.o `test -f 'm_demangle/cplus-dem.c' || echo '$(srcdir)/'`m_demangle/cplus-dem.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-cplus-dem.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-cplus-dem.Po
#	source='m_demangle/cplus-dem.c' object='libcoregrind_amd64_freebsd_a-cplus-dem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-cplus-dem.o `test -f 'm_demangle/cplus-dem.c' || echo '$(srcdir)/'`m_demangle/cplus-dem.c

libcoregrind_amd64_freebsd_a-cplus-dem.obj: m_demangle/cplus-dem.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-cplus-dem.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-cplus-dem.Tpo -c -o libcoregrind_amd64_freebsd_a-cplus-dem.obj `if test -f 'm_demangle/cplus-dem.c'; then $(CYGPATH_W) 'm_demangle/cplus-dem.c'; else $(CYGPATH_W) '$(srcdir)/m_demangle/cplus-dem.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-cplus-dem.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-cplus-dem.Po
#	source='m_demangle/cplus-dem.c' object='libcoregrind_amd64_freebsd_a-cplus-dem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-cplus-dem.obj `if test -f 'm_demangle/cplus-dem.c'; then $(CYGPATH_W) 'm_demangle/cplus-dem.c'; else $(CYGPATH_W) '$(srcdir)/m_demangle/cplus-dem.c'; fi`

libcoregrind_amd64_freebsd_a-demangle.o: m_demangle/demangle.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-demangle.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-demangle.Tpo -c -o libcoregrind_amd64_freebsd_a-demangle.o `test -f 'm_demangle/demangle.c' || echo '$(srcdir)/'`m_demangle/demangle.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-demangle.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-demangle.Po
#	source='m_demangle/demangle.c' object='libcoregrind_amd64_freebsd_a-demangle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-demangle.o `test -f 'm_demangle/demangle.c' || echo '$(srcdir)/'`m_demangle/demangle.c

libcoregrind_amd64_freebsd_a-demangle.obj: m_demangle/demangle.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-demangle.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-demangle.Tpo -c -o libcoregrind_amd64_freebsd_a-demangle.obj `if test -f 'm_demangle/demangle.c'; then $(CYGPATH_W) 'm_demangle/demangle.c'; else $(CYGPATH_W) '$(srcdir)/m_demangle/demangle.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-demangle.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-demangle.Po
#	source='m_demangle/demangle.c' object='libcoregrind_amd64_freebsd_a-demangle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-demangle.obj `if test -f 'm_demangle/demangle.c'; then $(CYGPATH_W) 'm_demangle/demangle.c'; else $(CYGPATH_W) '$(srcdir)/m_demangle/demangle.c'; fi`

libcoregrind_amd64_freebsd_a-dyn-string.o: m_demangle/dyn-string.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-dyn-string.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-dyn-string.Tpo -c -o libcoregrind_amd64_freebsd_a-dyn-string.o `test -f 'm_demangle/dyn-string.c' || echo '$(srcdir)/'`m_demangle/dyn-string.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-dyn-string.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-dyn-string.Po
#	source='m_demangle/dyn-string.c' object='libcoregrind_amd64_freebsd_a-dyn-string.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-dyn-string.o `test -f 'm_demangle/dyn-string.c' || echo '$(srcdir)/'`m_demangle/dyn-string.c

libcoregrind_amd64_freebsd_a-dyn-string.obj: m_demangle/dyn-string.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-dyn-string.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-dyn-string.Tpo -c -o libcoregrind_amd64_freebsd_a-dyn-string.obj `if test -f 'm_demangle/dyn-string.c'; then $(CYGPATH_W) 'm_demangle/dyn-string.c'; else $(CYGPATH_W) '$(srcdir)/m_demangle/dyn-string.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-dyn-string.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-dyn-string.Po
#	source='m_demangle/dyn-string.c' object='libcoregrind_amd64_freebsd_a-dyn-string.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-dyn-string.obj `if test -f 'm_demangle/dyn-string.c'; then $(CYGPATH_W) 'm_demangle/dyn-string.c'; else $(CYGPATH_W) '$(srcdir)/m_demangle/dyn-string.c'; fi`

libcoregrind_amd64_freebsd_a-safe-ctype.o: m_demangle/safe-ctype.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-safe-ctype.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-safe-ctype.Tpo -c -o libcoregrind_amd64_freebsd_a-safe-ctype.o `test -f 'm_demangle/safe-ctype.c' || echo '$(srcdir)/'`m_demangle/safe-ctype.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-safe-ctype.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-safe-ctype.Po
#	source='m_demangle/safe-ctype.c' object='libcoregrind_amd64_freebsd_a-safe-ctype.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-safe-ctype.o `test -f 'm_demangle/safe-ctype.c' || echo '$(srcdir)/'`m_demangle/safe-ctype.c

libcoregrind_amd64_freebsd_a-safe-ctype.obj: m_demangle/safe-ctype.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-safe-ctype.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-safe-ctype.Tpo -c -o libcoregrind_amd64_freebsd_a-safe-ctype.obj `if test -f 'm_demangle/safe-ctype.c'; then $(CYGPATH_W) 'm_demangle/safe-ctype.c'; else $(CYGPATH_W) '$(srcdir)/m_demangle/safe-ctype.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-safe-ctype.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-safe-ctype.Po
#	source='m_demangle/safe-ctype.c' object='libcoregrind_amd64_freebsd_a-safe-ctype.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-safe-ctype.obj `if test -f 'm_demangle/safe-ctype.c'; then $(CYGPATH_W) 'm_demangle/safe-ctype.c'; else $(CYGPATH_W) '$(srcdir)/m_demangle/safe-ctype.c'; fi`

libcoregrind_amd64_freebsd_a-inferiors.o: m_gdbserver/inferiors.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-inferiors.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-inferiors.Tpo -c -o libcoregrind_amd64_freebsd_a-inferiors.o `test -f 'm_gdbserver/inferiors.c' || echo '$(srcdir)/'`m_gdbserver/inferiors.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-inferiors.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-inferiors.Po
#	source='m_gdbserver/inferiors.c' object='libcoregrind_amd64_freebsd_a-inferiors.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-inferiors.o `test -f 'm_gdbserver/inferiors.c' || echo '$(srcdir)/'`m_gdbserver/inferiors.c

libcoregrind_amd64_freebsd_a-inferiors.obj: m_gdbserver/inferiors.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-inferiors.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-inferiors.Tpo -c -o libcoregrind_amd64_freebsd_a-inferiors.obj `if test -f 'm_gdbserver/inferiors.c'; then $(CYGPATH_W) 'm_gdbserver/inferiors.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/inferiors.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-inferiors.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-inferiors.Po
#	source='m_gdbserver/inferiors.c' object='libcoregrind_amd64_freebsd_a-inferiors.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-inferiors.obj `if test -f 'm_gdbserver/inferiors.c'; then $(CYGPATH_W) 'm_gdbserver/inferiors.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/inferiors.c'; fi`

libcoregrind_amd64_freebsd_a-m_gdbserver.o: m_gdbserver/m_gdbserver.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_gdbserver.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_gdbserver.Tpo -c -o libcoregrind_amd64_freebsd_a-m_gdbserver.o `test -f 'm_gdbserver/m_gdbserver.c' || echo '$(srcdir)/'`m_gdbserver/m_gdbserver.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_gdbserver.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_gdbserver.Po
#	source='m_gdbserver/m_gdbserver.c' object='libcoregrind_amd64_freebsd_a-m_gdbserver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_gdbserver.o `test -f 'm_gdbserver/m_gdbserver.c' || echo '$(srcdir)/'`m_gdbserver/m_gdbserver.c

libcoregrind_amd64_freebsd_a-m_gdbserver.obj: m_gdbserver/m_gdbserver.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-m_gdbserver.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_gdbserver.Tpo -c -o libcoregrind_amd64_freebsd_a-m_gdbserver.obj `if test -f 'm_gdbserver/m_gdbserver.c'; then $(CYGPATH_W) 'm_gdbserver/m_gdbserver.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/m_gdbserver.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_gdbserver.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-m_gdbserver.Po
#	source='m_gdbserver/m_gdbserver.c' object='libcoregrind_amd64_freebsd_a-m_gdbserver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-m_gdbserver.obj `if test -f 'm_gdbserver/m_gdbserver.c'; then $(CYGPATH_W) 'm_gdbserver/m_gdbserver.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/m_gdbserver.c'; fi`

libcoregrind_amd64_freebsd_a-regcache.o: m_gdbserver/regcache.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-regcache.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-regcache.Tpo -c -o libcoregrind_amd64_freebsd_a-regcache.o `test -f 'm_gdbserver/regcache.c' || echo '$(srcdir)/'`m_gdbserver/regcache.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-regcache.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-regcache.Po
#	source='m_gdbserver/regcache.c' object='libcoregrind_amd64_freebsd_a-regcache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-regcache.o `test -f 'm_gdbserver/regcache.c' || echo '$(srcdir)/'`m_gdbserver/regcache.c

libcoregrind_amd64_freebsd_a-regcache.obj: m_gdbserver/regcache.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-regcache.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-regcache.Tpo -c -o libcoregrind_amd64_freebsd_a-regcache.obj `if test -f 'm_gdbserver/regcache.c'; then $(CYGPATH_W) 'm_gdbserver/regcache.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/regcache.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-regcache.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-regcache.Po
#	source='m_gdbserver/regcache.c' object='libcoregrind_amd64_freebsd_a-regcache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-regcache.obj `if test -f 'm_gdbserver/regcache.c'; then $(CYGPATH_W) 'm_gdbserver/regcache.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/regcache.c'; fi`

libcoregrind_amd64_freebsd_a-remote-utils.o: m_gdbserver/remote-utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-remote-utils.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-remote-utils.Tpo -c -o libcoregrind_amd64_freebsd_a-remote-utils.o `test -f 'm_gdbserver/remote-utils.c' || echo '$(srcdir)/'`m_gdbserver/remote-utils.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-remote-utils.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-remote-utils.Po
#	source='m_gdbserver/remote-utils.c' object='libcoregrind_amd64_freebsd_a-remote-utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-remote-utils.o `test -f 'm_gdbserver/remote-utils.c' || echo '$(srcdir)/'`m_gdbserver/remote-utils.c

libcoregrind_amd64_freebsd_a-remote-utils.obj: m_gdbserver/remote-utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-remote-utils.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-remote-utils.Tpo -c -o libcoregrind_amd64_freebsd_a-remote-utils.obj `if test -f 'm_gdbserver/remote-utils.c'; then $(CYGPATH_W) 'm_gdbserver/remote-utils.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/remote-utils.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-remote-utils.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-remote-utils.Po
#	source='m_gdbserver/remote-utils.c' object='libcoregrind_amd64_freebsd_a-remote-utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-remote-utils.obj `if test -f 'm_gdbserver/remote-utils.c'; then $(CYGPATH_W) 'm_gdbserver/remote-utils.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/remote-utils.c'; fi`

libcoregrind_amd64_freebsd_a-server.o: m_gdbserver/server.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-server.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-server.Tpo -c -o libcoregrind_amd64_freebsd_a-server.o `test -f 'm_gdbserver/server.c' || echo '$(srcdir)/'`m_gdbserver/server.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-server.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-server.Po
#	source='m_gdbserver/server.c' object='libcoregrind_amd64_freebsd_a-server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-server.o `test -f 'm_gdbserver/server.c' || echo '$(srcdir)/'`m_gdbserver/server.c

libcoregrind_amd64_freebsd_a-server.obj: m_gdbserver/server.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-server.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-server.Tpo -c -o libcoregrind_amd64_freebsd_a-server.obj `if test -f 'm_gdbserver/server.c'; then $(CYGPATH_W) 'm_gdbserver/server.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/server.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-server.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-server.Po
#	source='m_gdbserver/server.c' object='libcoregrind_amd64_freebsd_a-server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-server.obj `if test -f 'm_gdbserver/server.c'; then $(CYGPATH_W) 'm_gdbserver/server.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/server.c'; fi`

libcoregrind_amd64_freebsd_a-signals.o: m_gdbserver/signals.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-signals.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-signals.Tpo -c -o libcoregrind_amd64_freebsd_a-signals.o `test -f 'm_gdbserver/signals.c' || echo '$(srcdir)/'`m_gdbserver/signals.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-signals.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-signals.Po
#	source='m_gdbserver/signals.c' object='libcoregrind_amd64_freebsd_a-signals.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-signals.o `test -f 'm_gdbserver/signals.c' || echo '$(srcdir)/'`m_gdbserver/signals.c

libcoregrind_amd64_freebsd_a-signals.obj: m_gdbserver/signals.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-signals.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-signals.Tpo -c -o libcoregrind_amd64_freebsd_a-signals.obj `if test -f 'm_gdbserver/signals.c'; then $(CYGPATH_W) 'm_gdbserver/signals.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/signals.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-signals.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-signals.Po
#	source='m_gdbserver/signals.c' object='libcoregrind_amd64_freebsd_a-signals.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-signals.obj `if test -f 'm_gdbserver/signals.c'; then $(CYGPATH_W) 'm_gdbserver/signals.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/signals.c'; fi`

libcoregrind_amd64_freebsd_a-target.o: m_gdbserver/target.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-target.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-target.Tpo -c -o libcoregrind_amd64_freebsd_a-target.o `test -f 'm_gdbserver/target.c' || echo '$(srcdir)/'`m_gdbserver/target.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-target.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-target.Po
#	source='m_gdbserver/target.c' object='libcoregrind_amd64_freebsd_a-target.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-target.o `test -f 'm_gdbserver/target.c' || echo '$(srcdir)/'`m_gdbserver/target.c

libcoregrind_amd64_freebsd_a-target.obj: m_gdbserver/target.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-target.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-target.Tpo -c -o libcoregrind_amd64_freebsd_a-target.obj `if test -f 'm_gdbserver/target.c'; then $(CYGPATH_W) 'm_gdbserver/target.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/target.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-target.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-target.Po
#	source='m_gdbserver/target.c' object='libcoregrind_amd64_freebsd_a-target.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-target.obj `if test -f 'm_gdbserver/target.c'; then $(CYGPATH_W) 'm_gdbserver/target.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/target.c'; fi`

libcoregrind_amd64_freebsd_a-utils.o: m_gdbserver/utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-utils.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-utils.Tpo -c -o libcoregrind_amd64_freebsd_a-utils.o `test -f 'm_gdbserver/utils.c' || echo '$(srcdir)/'`m_gdbserver/utils.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-utils.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-utils.Po
#	source='m_gdbserver/utils.c' object='libcoregrind_amd64_freebsd_a-utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-utils.o `test -f 'm_gdbserver/utils.c' || echo '$(srcdir)/'`m_gdbserver/utils.c

libcoregrind_amd64_freebsd_a-utils.obj: m_gdbserver/utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-utils.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-utils.Tpo -c -o libcoregrind_amd64_freebsd_a-utils.obj `if test -f 'm_gdbserver/utils.c'; then $(CYGPATH_W) 'm_gdbserver/utils.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/utils.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-utils.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-utils.Po
#	source='m_gdbserver/utils.c' object='libcoregrind_amd64_freebsd_a-utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-utils.obj `if test -f 'm_gdbserver/utils.c'; then $(CYGPATH_W) 'm_gdbserver/utils.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/utils.c'; fi`

libcoregrind_amd64_freebsd_a-valgrind-low-x86.o: m_gdbserver/valgrind-low-x86.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-valgrind-low-x86.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-x86.Tpo -c -o libcoregrind_amd64_freebsd_a-valgrind-low-x86.o `test -f 'm_gdbserver/valgrind-low-x86.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-x86.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-x86.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-x86.Po
#	source='m_gdbserver/valgrind-low-x86.c' object='libcoregrind_amd64_freebsd_a-valgrind-low-x86.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-valgrind-low-x86.o `test -f 'm_gdbserver/valgrind-low-x86.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-x86.c

libcoregrind_amd64_freebsd_a-valgrind-low-x86.obj: m_gdbserver/valgrind-low-x86.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-valgrind-low-x86.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-x86.Tpo -c -o libcoregrind_amd64_freebsd_a-valgrind-low-x86.obj `if test -f 'm_gdbserver/valgrind-low-x86.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-x86.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-x86.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-x86.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-x86.Po
#	source='m_gdbserver/valgrind-low-x86.c' object='libcoregrind_amd64_freebsd_a-valgrind-low-x86.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-valgrind-low-x86.obj `if test -f 'm_gdbserver/valgrind-low-x86.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-x86.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-x86.c'; fi`

libcoregrind_amd64_freebsd_a-valgrind-low-amd64.o: m_gdbserver/valgrind-low-amd64.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-valgrind-low-amd64.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-amd64.Tpo -c -o libcoregrind_amd64_freebsd_a-valgrind-low-amd64.o `test -f 'm_gdbserver/valgrind-low-amd64.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-amd64.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-amd64.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-amd64.Po
#	source='m_gdbserver/valgrind-low-amd64.c' object='libcoregrind_amd64_freebsd_a-valgrind-low-amd64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-valgrind-low-amd64.o `test -f 'm_gdbserver/valgrind-low-amd64.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-amd64.c

libcoregrind_amd64_freebsd_a-valgrind-low-amd64.obj: m_gdbserver/valgrind-low-amd64.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-valgrind-low-amd64.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-amd64.Tpo -c -o libcoregrind_amd64_freebsd_a-valgrind-low-amd64.obj `if test -f 'm_gdbserver/valgrind-low-amd64.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-amd64.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-amd64.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-amd64.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-amd64.Po
#	source='m_gdbserver/valgrind-low-amd64.c' object='libcoregrind_amd64_freebsd_a-valgrind-low-amd64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-valgrind-low-amd64.obj `if test -f 'm_gdbserver/valgrind-low-amd64.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-amd64.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-amd64.c'; fi`

libcoregrind_amd64_freebsd_a-valgrind-low-arm.o: m_gdbserver/valgrind-low-arm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-valgrind-low-arm.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-arm.Tpo -c -o libcoregrind_amd64_freebsd_a-valgrind-low-arm.o `test -f 'm_gdbserver/valgrind-low-arm.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-arm.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-arm.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-arm.Po
#	source='m_gdbserver/valgrind-low-arm.c' object='libcoregrind_amd64_freebsd_a-valgrind-low-arm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-valgrind-low-arm.o `test -f 'm_gdbserver/valgrind-low-arm.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-arm.c

libcoregrind_amd64_freebsd_a-valgrind-low-arm.obj: m_gdbserver/valgrind-low-arm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-valgrind-low-arm.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-arm.Tpo -c -o libcoregrind_amd64_freebsd_a-valgrind-low-arm.obj `if test -f 'm_gdbserver/valgrind-low-arm.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-arm.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-arm.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-arm.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-arm.Po
#	source='m_gdbserver/valgrind-low-arm.c' object='libcoregrind_amd64_freebsd_a-valgrind-low-arm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-valgrind-low-arm.obj `if test -f 'm_gdbserver/valgrind-low-arm.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-arm.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-arm.c'; fi`

libcoregrind_amd64_freebsd_a-valgrind-low-ppc32.o: m_gdbserver/valgrind-low-ppc32.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-valgrind-low-ppc32.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-ppc32.Tpo -c -o libcoregrind_amd64_freebsd_a-valgrind-low-ppc32.o `test -f 'm_gdbserver/valgrind-low-ppc32.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-ppc32.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-ppc32.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-ppc32.Po
#	source='m_gdbserver/valgrind-low-ppc32.c' object='libcoregrind_amd64_freebsd_a-valgrind-low-ppc32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-valgrind-low-ppc32.o `test -f 'm_gdbserver/valgrind-low-ppc32.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-ppc32.c

libcoregrind_amd64_freebsd_a-valgrind-low-ppc32.obj: m_gdbserver/valgrind-low-ppc32.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-valgrind-low-ppc32.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-ppc32.Tpo -c -o libcoregrind_amd64_freebsd_a-valgrind-low-ppc32.obj `if test -f 'm_gdbserver/valgrind-low-ppc32.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-ppc32.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-ppc32.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-ppc32.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-ppc32.Po
#	source='m_gdbserver/valgrind-low-ppc32.c' object='libcoregrind_amd64_freebsd_a-valgrind-low-ppc32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-valgrind-low-ppc32.obj `if test -f 'm_gdbserver/valgrind-low-ppc32.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-ppc32.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-ppc32.c'; fi`

libcoregrind_amd64_freebsd_a-valgrind-low-ppc64.o: m_gdbserver/valgrind-low-ppc64.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-valgrind-low-ppc64.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-ppc64.Tpo -c -o libcoregrind_amd64_freebsd_a-valgrind-low-ppc64.o `test -f 'm_gdbserver/valgrind-low-ppc64.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-ppc64.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-ppc64.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-ppc64.Po
#	source='m_gdbserver/valgrind-low-ppc64.c' object='libcoregrind_amd64_freebsd_a-valgrind-low-ppc64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-valgrind-low-ppc64.o `test -f 'm_gdbserver/valgrind-low-ppc64.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-ppc64.c

libcoregrind_amd64_freebsd_a-valgrind-low-ppc64.obj: m_gdbserver/valgrind-low-ppc64.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-valgrind-low-ppc64.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-ppc64.Tpo -c -o libcoregrind_amd64_freebsd_a-valgrind-low-ppc64.obj `if test -f 'm_gdbserver/valgrind-low-ppc64.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-ppc64.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-ppc64.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-ppc64.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-ppc64.Po
#	source='m_gdbserver/valgrind-low-ppc64.c' object='libcoregrind_amd64_freebsd_a-valgrind-low-ppc64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-valgrind-low-ppc64.obj `if test -f 'm_gdbserver/valgrind-low-ppc64.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-ppc64.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-ppc64.c'; fi`

libcoregrind_amd64_freebsd_a-valgrind-low-s390x.o: m_gdbserver/valgrind-low-s390x.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-valgrind-low-s390x.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-s390x.Tpo -c -o libcoregrind_amd64_freebsd_a-valgrind-low-s390x.o `test -f 'm_gdbserver/valgrind-low-s390x.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-s390x.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-s390x.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-s390x.Po
#	source='m_gdbserver/valgrind-low-s390x.c' object='libcoregrind_amd64_freebsd_a-valgrind-low-s390x.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-valgrind-low-s390x.o `test -f 'm_gdbserver/valgrind-low-s390x.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-s390x.c

libcoregrind_amd64_freebsd_a-valgrind-low-s390x.obj: m_gdbserver/valgrind-low-s390x.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-valgrind-low-s390x.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-s390x.Tpo -c -o libcoregrind_amd64_freebsd_a-valgrind-low-s390x.obj `if test -f 'm_gdbserver/valgrind-low-s390x.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-s390x.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-s390x.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-s390x.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-s390x.Po
#	source='m_gdbserver/valgrind-low-s390x.c' object='libcoregrind_amd64_freebsd_a-valgrind-low-s390x.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-valgrind-low-s390x.obj `if test -f 'm_gdbserver/valgrind-low-s390x.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-s390x.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-s390x.c'; fi`

libcoregrind_amd64_freebsd_a-valgrind-low-mips32.o: m_gdbserver/valgrind-low-mips32.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-valgrind-low-mips32.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-mips32.Tpo -c -o libcoregrind_amd64_freebsd_a-valgrind-low-mips32.o `test -f 'm_gdbserver/valgrind-low-mips32.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-mips32.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-mips32.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-mips32.Po
#	source='m_gdbserver/valgrind-low-mips32.c' object='libcoregrind_amd64_freebsd_a-valgrind-low-mips32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-valgrind-low-mips32.o `test -f 'm_gdbserver/valgrind-low-mips32.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-mips32.c

libcoregrind_amd64_freebsd_a-valgrind-low-mips32.obj: m_gdbserver/valgrind-low-mips32.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-valgrind-low-mips32.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-mips32.Tpo -c -o libcoregrind_amd64_freebsd_a-valgrind-low-mips32.obj `if test -f 'm_gdbserver/valgrind-low-mips32.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-mips32.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-mips32.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-mips32.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-valgrind-low-mips32.Po
#	source='m_gdbserver/valgrind-low-mips32.c' object='libcoregrind_amd64_freebsd_a-valgrind-low-mips32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-valgrind-low-mips32.obj `if test -f 'm_gdbserver/valgrind-low-mips32.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-mips32.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-mips32.c'; fi`

libcoregrind_amd64_freebsd_a-version.o: m_gdbserver/version.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-version.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-version.Tpo -c -o libcoregrind_amd64_freebsd_a-version.o `test -f 'm_gdbserver/version.c' || echo '$(srcdir)/'`m_gdbserver/version.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-version.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-version.Po
#	source='m_gdbserver/version.c' object='libcoregrind_amd64_freebsd_a-version.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-version.o `test -f 'm_gdbserver/version.c' || echo '$(srcdir)/'`m_gdbserver/version.c

libcoregrind_amd64_freebsd_a-version.obj: m_gdbserver/version.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-version.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-version.Tpo -c -o libcoregrind_amd64_freebsd_a-version.obj `if test -f 'm_gdbserver/version.c'; then $(CYGPATH_W) 'm_gdbserver/version.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/version.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-version.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-version.Po
#	source='m_gdbserver/version.c' object='libcoregrind_amd64_freebsd_a-version.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-version.obj `if test -f 'm_gdbserver/version.c'; then $(CYGPATH_W) 'm_gdbserver/version.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/version.c'; fi`

libcoregrind_amd64_freebsd_a-initimg-linux.o: m_initimg/initimg-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-initimg-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-initimg-linux.o `test -f 'm_initimg/initimg-linux.c' || echo '$(srcdir)/'`m_initimg/initimg-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-linux.Po
#	source='m_initimg/initimg-linux.c' object='libcoregrind_amd64_freebsd_a-initimg-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-initimg-linux.o `test -f 'm_initimg/initimg-linux.c' || echo '$(srcdir)/'`m_initimg/initimg-linux.c

libcoregrind_amd64_freebsd_a-initimg-linux.obj: m_initimg/initimg-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-initimg-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-initimg-linux.obj `if test -f 'm_initimg/initimg-linux.c'; then $(CYGPATH_W) 'm_initimg/initimg-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_initimg/initimg-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-linux.Po
#	source='m_initimg/initimg-linux.c' object='libcoregrind_amd64_freebsd_a-initimg-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-initimg-linux.obj `if test -f 'm_initimg/initimg-linux.c'; then $(CYGPATH_W) 'm_initimg/initimg-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_initimg/initimg-linux.c'; fi`

libcoregrind_amd64_freebsd_a-initimg-freebsd.o: m_initimg/initimg-freebsd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-initimg-freebsd.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-freebsd.Tpo -c -o libcoregrind_amd64_freebsd_a-initimg-freebsd.o `test -f 'm_initimg/initimg-freebsd.c' || echo '$(srcdir)/'`m_initimg/initimg-freebsd.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-freebsd.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-freebsd.Po
#	source='m_initimg/initimg-freebsd.c' object='libcoregrind_amd64_freebsd_a-initimg-freebsd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-initimg-freebsd.o `test -f 'm_initimg/initimg-freebsd.c' || echo '$(srcdir)/'`m_initimg/initimg-freebsd.c

libcoregrind_amd64_freebsd_a-initimg-freebsd.obj: m_initimg/initimg-freebsd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-initimg-freebsd.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-freebsd.Tpo -c -o libcoregrind_amd64_freebsd_a-initimg-freebsd.obj `if test -f 'm_initimg/initimg-freebsd.c'; then $(CYGPATH_W) 'm_initimg/initimg-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/m_initimg/initimg-freebsd.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-freebsd.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-freebsd.Po
#	source='m_initimg/initimg-freebsd.c' object='libcoregrind_amd64_freebsd_a-initimg-freebsd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-initimg-freebsd.obj `if test -f 'm_initimg/initimg-freebsd.c'; then $(CYGPATH_W) 'm_initimg/initimg-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/m_initimg/initimg-freebsd.c'; fi`

libcoregrind_amd64_freebsd_a-initimg-darwin.o: m_initimg/initimg-darwin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-initimg-darwin.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-darwin.Tpo -c -o libcoregrind_amd64_freebsd_a-initimg-darwin.o `test -f 'm_initimg/initimg-darwin.c' || echo '$(srcdir)/'`m_initimg/initimg-darwin.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-darwin.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-darwin.Po
#	source='m_initimg/initimg-darwin.c' object='libcoregrind_amd64_freebsd_a-initimg-darwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-initimg-darwin.o `test -f 'm_initimg/initimg-darwin.c' || echo '$(srcdir)/'`m_initimg/initimg-darwin.c

libcoregrind_amd64_freebsd_a-initimg-darwin.obj: m_initimg/initimg-darwin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-initimg-darwin.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-darwin.Tpo -c -o libcoregrind_amd64_freebsd_a-initimg-darwin.obj `if test -f 'm_initimg/initimg-darwin.c'; then $(CYGPATH_W) 'm_initimg/initimg-darwin.c'; else $(CYGPATH_W) '$(srcdir)/m_initimg/initimg-darwin.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-darwin.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-darwin.Po
#	source='m_initimg/initimg-darwin.c' object='libcoregrind_amd64_freebsd_a-initimg-darwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-initimg-darwin.obj `if test -f 'm_initimg/initimg-darwin.c'; then $(CYGPATH_W) 'm_initimg/initimg-darwin.c'; else $(CYGPATH_W) '$(srcdir)/m_initimg/initimg-darwin.c'; fi`

libcoregrind_amd64_freebsd_a-initimg-pathscan.o: m_initimg/initimg-pathscan.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-initimg-pathscan.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-pathscan.Tpo -c -o libcoregrind_amd64_freebsd_a-initimg-pathscan.o `test -f 'm_initimg/initimg-pathscan.c' || echo '$(srcdir)/'`m_initimg/initimg-pathscan.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-pathscan.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-pathscan.Po
#	source='m_initimg/initimg-pathscan.c' object='libcoregrind_amd64_freebsd_a-initimg-pathscan.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-initimg-pathscan.o `test -f 'm_initimg/initimg-pathscan.c' || echo '$(srcdir)/'`m_initimg/initimg-pathscan.c

libcoregrind_amd64_freebsd_a-initimg-pathscan.obj: m_initimg/initimg-pathscan.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-initimg-pathscan.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-pathscan.Tpo -c -o libcoregrind_amd64_freebsd_a-initimg-pathscan.obj `if test -f 'm_initimg/initimg-pathscan.c'; then $(CYGPATH_W) 'm_initimg/initimg-pathscan.c'; else $(CYGPATH_W) '$(srcdir)/m_initimg/initimg-pathscan.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-pathscan.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-initimg-pathscan.Po
#	source='m_initimg/initimg-pathscan.c' object='libcoregrind_amd64_freebsd_a-initimg-pathscan.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-initimg-pathscan.obj `if test -f 'm_initimg/initimg-pathscan.c'; then $(CYGPATH_W) 'm_initimg/initimg-pathscan.c'; else $(CYGPATH_W) '$(srcdir)/m_initimg/initimg-pathscan.c'; fi`

libcoregrind_amd64_freebsd_a-mach_basics.o: m_mach/mach_basics.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-mach_basics.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_basics.Tpo -c -o libcoregrind_amd64_freebsd_a-mach_basics.o `test -f 'm_mach/mach_basics.c' || echo '$(srcdir)/'`m_mach/mach_basics.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_basics.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_basics.Po
#	source='m_mach/mach_basics.c' object='libcoregrind_amd64_freebsd_a-mach_basics.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-mach_basics.o `test -f 'm_mach/mach_basics.c' || echo '$(srcdir)/'`m_mach/mach_basics.c

libcoregrind_amd64_freebsd_a-mach_basics.obj: m_mach/mach_basics.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-mach_basics.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_basics.Tpo -c -o libcoregrind_amd64_freebsd_a-mach_basics.obj `if test -f 'm_mach/mach_basics.c'; then $(CYGPATH_W) 'm_mach/mach_basics.c'; else $(CYGPATH_W) '$(srcdir)/m_mach/mach_basics.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_basics.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_basics.Po
#	source='m_mach/mach_basics.c' object='libcoregrind_amd64_freebsd_a-mach_basics.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-mach_basics.obj `if test -f 'm_mach/mach_basics.c'; then $(CYGPATH_W) 'm_mach/mach_basics.c'; else $(CYGPATH_W) '$(srcdir)/m_mach/mach_basics.c'; fi`

libcoregrind_amd64_freebsd_a-mach_msg.o: m_mach/mach_msg.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-mach_msg.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_msg.Tpo -c -o libcoregrind_amd64_freebsd_a-mach_msg.o `test -f 'm_mach/mach_msg.c' || echo '$(srcdir)/'`m_mach/mach_msg.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_msg.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_msg.Po
#	source='m_mach/mach_msg.c' object='libcoregrind_amd64_freebsd_a-mach_msg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-mach_msg.o `test -f 'm_mach/mach_msg.c' || echo '$(srcdir)/'`m_mach/mach_msg.c

libcoregrind_amd64_freebsd_a-mach_msg.obj: m_mach/mach_msg.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-mach_msg.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_msg.Tpo -c -o libcoregrind_amd64_freebsd_a-mach_msg.obj `if test -f 'm_mach/mach_msg.c'; then $(CYGPATH_W) 'm_mach/mach_msg.c'; else $(CYGPATH_W) '$(srcdir)/m_mach/mach_msg.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_msg.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_msg.Po
#	source='m_mach/mach_msg.c' object='libcoregrind_amd64_freebsd_a-mach_msg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-mach_msg.obj `if test -f 'm_mach/mach_msg.c'; then $(CYGPATH_W) 'm_mach/mach_msg.c'; else $(CYGPATH_W) '$(srcdir)/m_mach/mach_msg.c'; fi`

libcoregrind_amd64_freebsd_a-replacemalloc_core.o: m_replacemalloc/replacemalloc_core.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-replacemalloc_core.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-replacemalloc_core.Tpo -c -o libcoregrind_amd64_freebsd_a-replacemalloc_core.o `test -f 'm_replacemalloc/replacemalloc_core.c' || echo '$(srcdir)/'`m_replacemalloc/replacemalloc_core.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-replacemalloc_core.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-replacemalloc_core.Po
#	source='m_replacemalloc/replacemalloc_core.c' object='libcoregrind_amd64_freebsd_a-replacemalloc_core.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-replacemalloc_core.o `test -f 'm_replacemalloc/replacemalloc_core.c' || echo '$(srcdir)/'`m_replacemalloc/replacemalloc_core.c

libcoregrind_amd64_freebsd_a-replacemalloc_core.obj: m_replacemalloc/replacemalloc_core.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-replacemalloc_core.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-replacemalloc_core.Tpo -c -o libcoregrind_amd64_freebsd_a-replacemalloc_core.obj `if test -f 'm_replacemalloc/replacemalloc_core.c'; then $(CYGPATH_W) 'm_replacemalloc/replacemalloc_core.c'; else $(CYGPATH_W) '$(srcdir)/m_replacemalloc/replacemalloc_core.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-replacemalloc_core.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-replacemalloc_core.Po
#	source='m_replacemalloc/replacemalloc_core.c' object='libcoregrind_amd64_freebsd_a-replacemalloc_core.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-replacemalloc_core.obj `if test -f 'm_replacemalloc/replacemalloc_core.c'; then $(CYGPATH_W) 'm_replacemalloc/replacemalloc_core.c'; else $(CYGPATH_W) '$(srcdir)/m_replacemalloc/replacemalloc_core.c'; fi`

libcoregrind_amd64_freebsd_a-scheduler.o: m_scheduler/scheduler.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-scheduler.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-scheduler.Tpo -c -o libcoregrind_amd64_freebsd_a-scheduler.o `test -f 'm_scheduler/scheduler.c' || echo '$(srcdir)/'`m_scheduler/scheduler.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-scheduler.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-scheduler.Po
#	source='m_scheduler/scheduler.c' object='libcoregrind_amd64_freebsd_a-scheduler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-scheduler.o `test -f 'm_scheduler/scheduler.c' || echo '$(srcdir)/'`m_scheduler/scheduler.c

libcoregrind_amd64_freebsd_a-scheduler.obj: m_scheduler/scheduler.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-scheduler.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-scheduler.Tpo -c -o libcoregrind_amd64_freebsd_a-scheduler.obj `if test -f 'm_scheduler/scheduler.c'; then $(CYGPATH_W) 'm_scheduler/scheduler.c'; else $(CYGPATH_W) '$(srcdir)/m_scheduler/scheduler.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-scheduler.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-scheduler.Po
#	source='m_scheduler/scheduler.c' object='libcoregrind_amd64_freebsd_a-scheduler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-scheduler.obj `if test -f 'm_scheduler/scheduler.c'; then $(CYGPATH_W) 'm_scheduler/scheduler.c'; else $(CYGPATH_W) '$(srcdir)/m_scheduler/scheduler.c'; fi`

libcoregrind_amd64_freebsd_a-sema.o: m_scheduler/sema.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sema.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sema.Tpo -c -o libcoregrind_amd64_freebsd_a-sema.o `test -f 'm_scheduler/sema.c' || echo '$(srcdir)/'`m_scheduler/sema.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sema.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sema.Po
#	source='m_scheduler/sema.c' object='libcoregrind_amd64_freebsd_a-sema.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sema.o `test -f 'm_scheduler/sema.c' || echo '$(srcdir)/'`m_scheduler/sema.c

libcoregrind_amd64_freebsd_a-sema.obj: m_scheduler/sema.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sema.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sema.Tpo -c -o libcoregrind_amd64_freebsd_a-sema.obj `if test -f 'm_scheduler/sema.c'; then $(CYGPATH_W) 'm_scheduler/sema.c'; else $(CYGPATH_W) '$(srcdir)/m_scheduler/sema.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sema.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sema.Po
#	source='m_scheduler/sema.c' object='libcoregrind_amd64_freebsd_a-sema.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sema.obj `if test -f 'm_scheduler/sema.c'; then $(CYGPATH_W) 'm_scheduler/sema.c'; else $(CYGPATH_W) '$(srcdir)/m_scheduler/sema.c'; fi`

libcoregrind_amd64_freebsd_a-sched-lock.o: m_scheduler/sched-lock.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sched-lock.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sched-lock.Tpo -c -o libcoregrind_amd64_freebsd_a-sched-lock.o `test -f 'm_scheduler/sched-lock.c' || echo '$(srcdir)/'`m_scheduler/sched-lock.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sched-lock.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sched-lock.Po
#	source='m_scheduler/sched-lock.c' object='libcoregrind_amd64_freebsd_a-sched-lock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sched-lock.o `test -f 'm_scheduler/sched-lock.c' || echo '$(srcdir)/'`m_scheduler/sched-lock.c

libcoregrind_amd64_freebsd_a-sched-lock.obj: m_scheduler/sched-lock.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sched-lock.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sched-lock.Tpo -c -o libcoregrind_amd64_freebsd_a-sched-lock.obj `if test -f 'm_scheduler/sched-lock.c'; then $(CYGPATH_W) 'm_scheduler/sched-lock.c'; else $(CYGPATH_W) '$(srcdir)/m_scheduler/sched-lock.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sched-lock.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sched-lock.Po
#	source='m_scheduler/sched-lock.c' object='libcoregrind_amd64_freebsd_a-sched-lock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sched-lock.obj `if test -f 'm_scheduler/sched-lock.c'; then $(CYGPATH_W) 'm_scheduler/sched-lock.c'; else $(CYGPATH_W) '$(srcdir)/m_scheduler/sched-lock.c'; fi`

libcoregrind_amd64_freebsd_a-sched-lock-generic.o: m_scheduler/sched-lock-generic.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sched-lock-generic.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sched-lock-generic.Tpo -c -o libcoregrind_amd64_freebsd_a-sched-lock-generic.o `test -f 'm_scheduler/sched-lock-generic.c' || echo '$(srcdir)/'`m_scheduler/sched-lock-generic.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sched-lock-generic.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sched-lock-generic.Po
#	source='m_scheduler/sched-lock-generic.c' object='libcoregrind_amd64_freebsd_a-sched-lock-generic.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sched-lock-generic.o `test -f 'm_scheduler/sched-lock-generic.c' || echo '$(srcdir)/'`m_scheduler/sched-lock-generic.c

libcoregrind_amd64_freebsd_a-sched-lock-generic.obj: m_scheduler/sched-lock-generic.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sched-lock-generic.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sched-lock-generic.Tpo -c -o libcoregrind_amd64_freebsd_a-sched-lock-generic.obj `if test -f 'm_scheduler/sched-lock-generic.c'; then $(CYGPATH_W) 'm_scheduler/sched-lock-generic.c'; else $(CYGPATH_W) '$(srcdir)/m_scheduler/sched-lock-generic.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sched-lock-generic.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sched-lock-generic.Po
#	source='m_scheduler/sched-lock-generic.c' object='libcoregrind_amd64_freebsd_a-sched-lock-generic.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sched-lock-generic.obj `if test -f 'm_scheduler/sched-lock-generic.c'; then $(CYGPATH_W) 'm_scheduler/sched-lock-generic.c'; else $(CYGPATH_W) '$(srcdir)/m_scheduler/sched-lock-generic.c'; fi`

libcoregrind_amd64_freebsd_a-sigframe-x86-linux.o: m_sigframe/sigframe-x86-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sigframe-x86-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-x86-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-sigframe-x86-linux.o `test -f 'm_sigframe/sigframe-x86-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-x86-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-x86-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-x86-linux.Po
#	source='m_sigframe/sigframe-x86-linux.c' object='libcoregrind_amd64_freebsd_a-sigframe-x86-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sigframe-x86-linux.o `test -f 'm_sigframe/sigframe-x86-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-x86-linux.c

libcoregrind_amd64_freebsd_a-sigframe-x86-linux.obj: m_sigframe/sigframe-x86-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sigframe-x86-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-x86-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-sigframe-x86-linux.obj `if test -f 'm_sigframe/sigframe-x86-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-x86-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-x86-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-x86-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-x86-linux.Po
#	source='m_sigframe/sigframe-x86-linux.c' object='libcoregrind_amd64_freebsd_a-sigframe-x86-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sigframe-x86-linux.obj `if test -f 'm_sigframe/sigframe-x86-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-x86-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-x86-linux.c'; fi`

libcoregrind_amd64_freebsd_a-sigframe-amd64-linux.o: m_sigframe/sigframe-amd64-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sigframe-amd64-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-amd64-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-sigframe-amd64-linux.o `test -f 'm_sigframe/sigframe-amd64-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-amd64-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-amd64-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-amd64-linux.Po
#	source='m_sigframe/sigframe-amd64-linux.c' object='libcoregrind_amd64_freebsd_a-sigframe-amd64-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sigframe-amd64-linux.o `test -f 'm_sigframe/sigframe-amd64-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-amd64-linux.c

libcoregrind_amd64_freebsd_a-sigframe-amd64-linux.obj: m_sigframe/sigframe-amd64-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sigframe-amd64-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-amd64-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-sigframe-amd64-linux.obj `if test -f 'm_sigframe/sigframe-amd64-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-amd64-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-amd64-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-amd64-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-amd64-linux.Po
#	source='m_sigframe/sigframe-amd64-linux.c' object='libcoregrind_amd64_freebsd_a-sigframe-amd64-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sigframe-amd64-linux.obj `if test -f 'm_sigframe/sigframe-amd64-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-amd64-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-amd64-linux.c'; fi`

libcoregrind_amd64_freebsd_a-sigframe-x86-freebsd.o: m_sigframe/sigframe-x86-freebsd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sigframe-x86-freebsd.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-x86-freebsd.Tpo -c -o libcoregrind_amd64_freebsd_a-sigframe-x86-freebsd.o `test -f 'm_sigframe/sigframe-x86-freebsd.c' || echo '$(srcdir)/'`m_sigframe/sigframe-x86-freebsd.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-x86-freebsd.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-x86-freebsd.Po
#	source='m_sigframe/sigframe-x86-freebsd.c' object='libcoregrind_amd64_freebsd_a-sigframe-x86-freebsd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sigframe-x86-freebsd.o `test -f 'm_sigframe/sigframe-x86-freebsd.c' || echo '$(srcdir)/'`m_sigframe/sigframe-x86-freebsd.c

libcoregrind_amd64_freebsd_a-sigframe-x86-freebsd.obj: m_sigframe/sigframe-x86-freebsd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sigframe-x86-freebsd.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-x86-freebsd.Tpo -c -o libcoregrind_amd64_freebsd_a-sigframe-x86-freebsd.obj `if test -f 'm_sigframe/sigframe-x86-freebsd.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-x86-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-x86-freebsd.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-x86-freebsd.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-x86-freebsd.Po
#	source='m_sigframe/sigframe-x86-freebsd.c' object='libcoregrind_amd64_freebsd_a-sigframe-x86-freebsd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sigframe-x86-freebsd.obj `if test -f 'm_sigframe/sigframe-x86-freebsd.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-x86-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-x86-freebsd.c'; fi`

libcoregrind_amd64_freebsd_a-sigframe-amd64-freebsd.o: m_sigframe/sigframe-amd64-freebsd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sigframe-amd64-freebsd.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-amd64-freebsd.Tpo -c -o libcoregrind_amd64_freebsd_a-sigframe-amd64-freebsd.o `test -f 'm_sigframe/sigframe-amd64-freebsd.c' || echo '$(srcdir)/'`m_sigframe/sigframe-amd64-freebsd.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-amd64-freebsd.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-amd64-freebsd.Po
#	source='m_sigframe/sigframe-amd64-freebsd.c' object='libcoregrind_amd64_freebsd_a-sigframe-amd64-freebsd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sigframe-amd64-freebsd.o `test -f 'm_sigframe/sigframe-amd64-freebsd.c' || echo '$(srcdir)/'`m_sigframe/sigframe-amd64-freebsd.c

libcoregrind_amd64_freebsd_a-sigframe-amd64-freebsd.obj: m_sigframe/sigframe-amd64-freebsd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sigframe-amd64-freebsd.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-amd64-freebsd.Tpo -c -o libcoregrind_amd64_freebsd_a-sigframe-amd64-freebsd.obj `if test -f 'm_sigframe/sigframe-amd64-freebsd.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-amd64-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-amd64-freebsd.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-amd64-freebsd.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-amd64-freebsd.Po
#	source='m_sigframe/sigframe-amd64-freebsd.c' object='libcoregrind_amd64_freebsd_a-sigframe-amd64-freebsd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sigframe-amd64-freebsd.obj `if test -f 'm_sigframe/sigframe-amd64-freebsd.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-amd64-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-amd64-freebsd.c'; fi`

libcoregrind_amd64_freebsd_a-sigframe-ppc32-linux.o: m_sigframe/sigframe-ppc32-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sigframe-ppc32-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-ppc32-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-sigframe-ppc32-linux.o `test -f 'm_sigframe/sigframe-ppc32-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-ppc32-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-ppc32-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-ppc32-linux.Po
#	source='m_sigframe/sigframe-ppc32-linux.c' object='libcoregrind_amd64_freebsd_a-sigframe-ppc32-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sigframe-ppc32-linux.o `test -f 'm_sigframe/sigframe-ppc32-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-ppc32-linux.c

libcoregrind_amd64_freebsd_a-sigframe-ppc32-linux.obj: m_sigframe/sigframe-ppc32-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sigframe-ppc32-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-ppc32-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-sigframe-ppc32-linux.obj `if test -f 'm_sigframe/sigframe-ppc32-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-ppc32-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-ppc32-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-ppc32-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-ppc32-linux.Po
#	source='m_sigframe/sigframe-ppc32-linux.c' object='libcoregrind_amd64_freebsd_a-sigframe-ppc32-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sigframe-ppc32-linux.obj `if test -f 'm_sigframe/sigframe-ppc32-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-ppc32-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-ppc32-linux.c'; fi`

libcoregrind_amd64_freebsd_a-sigframe-ppc64-linux.o: m_sigframe/sigframe-ppc64-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sigframe-ppc64-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-ppc64-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-sigframe-ppc64-linux.o `test -f 'm_sigframe/sigframe-ppc64-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-ppc64-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-ppc64-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-ppc64-linux.Po
#	source='m_sigframe/sigframe-ppc64-linux.c' object='libcoregrind_amd64_freebsd_a-sigframe-ppc64-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sigframe-ppc64-linux.o `test -f 'm_sigframe/sigframe-ppc64-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-ppc64-linux.c

libcoregrind_amd64_freebsd_a-sigframe-ppc64-linux.obj: m_sigframe/sigframe-ppc64-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sigframe-ppc64-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-ppc64-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-sigframe-ppc64-linux.obj `if test -f 'm_sigframe/sigframe-ppc64-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-ppc64-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-ppc64-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-ppc64-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-ppc64-linux.Po
#	source='m_sigframe/sigframe-ppc64-linux.c' object='libcoregrind_amd64_freebsd_a-sigframe-ppc64-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sigframe-ppc64-linux.obj `if test -f 'm_sigframe/sigframe-ppc64-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-ppc64-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-ppc64-linux.c'; fi`

libcoregrind_amd64_freebsd_a-sigframe-arm-linux.o: m_sigframe/sigframe-arm-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sigframe-arm-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-arm-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-sigframe-arm-linux.o `test -f 'm_sigframe/sigframe-arm-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-arm-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-arm-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-arm-linux.Po
#	source='m_sigframe/sigframe-arm-linux.c' object='libcoregrind_amd64_freebsd_a-sigframe-arm-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sigframe-arm-linux.o `test -f 'm_sigframe/sigframe-arm-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-arm-linux.c

libcoregrind_amd64_freebsd_a-sigframe-arm-linux.obj: m_sigframe/sigframe-arm-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sigframe-arm-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-arm-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-sigframe-arm-linux.obj `if test -f 'm_sigframe/sigframe-arm-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-arm-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-arm-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-arm-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-arm-linux.Po
#	source='m_sigframe/sigframe-arm-linux.c' object='libcoregrind_amd64_freebsd_a-sigframe-arm-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sigframe-arm-linux.obj `if test -f 'm_sigframe/sigframe-arm-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-arm-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-arm-linux.c'; fi`

libcoregrind_amd64_freebsd_a-sigframe-s390x-linux.o: m_sigframe/sigframe-s390x-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sigframe-s390x-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-s390x-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-sigframe-s390x-linux.o `test -f 'm_sigframe/sigframe-s390x-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-s390x-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-s390x-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-s390x-linux.Po
#	source='m_sigframe/sigframe-s390x-linux.c' object='libcoregrind_amd64_freebsd_a-sigframe-s390x-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sigframe-s390x-linux.o `test -f 'm_sigframe/sigframe-s390x-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-s390x-linux.c

libcoregrind_amd64_freebsd_a-sigframe-s390x-linux.obj: m_sigframe/sigframe-s390x-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sigframe-s390x-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-s390x-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-sigframe-s390x-linux.obj `if test -f 'm_sigframe/sigframe-s390x-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-s390x-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-s390x-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-s390x-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-s390x-linux.Po
#	source='m_sigframe/sigframe-s390x-linux.c' object='libcoregrind_amd64_freebsd_a-sigframe-s390x-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sigframe-s390x-linux.obj `if test -f 'm_sigframe/sigframe-s390x-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-s390x-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-s390x-linux.c'; fi`

libcoregrind_amd64_freebsd_a-sigframe-mips32-linux.o: m_sigframe/sigframe-mips32-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sigframe-mips32-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-mips32-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-sigframe-mips32-linux.o `test -f 'm_sigframe/sigframe-mips32-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-mips32-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-mips32-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-mips32-linux.Po
#	source='m_sigframe/sigframe-mips32-linux.c' object='libcoregrind_amd64_freebsd_a-sigframe-mips32-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sigframe-mips32-linux.o `test -f 'm_sigframe/sigframe-mips32-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-mips32-linux.c

libcoregrind_amd64_freebsd_a-sigframe-mips32-linux.obj: m_sigframe/sigframe-mips32-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sigframe-mips32-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-mips32-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-sigframe-mips32-linux.obj `if test -f 'm_sigframe/sigframe-mips32-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-mips32-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-mips32-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-mips32-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-mips32-linux.Po
#	source='m_sigframe/sigframe-mips32-linux.c' object='libcoregrind_amd64_freebsd_a-sigframe-mips32-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sigframe-mips32-linux.obj `if test -f 'm_sigframe/sigframe-mips32-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-mips32-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-mips32-linux.c'; fi`

libcoregrind_amd64_freebsd_a-sigframe-x86-darwin.o: m_sigframe/sigframe-x86-darwin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sigframe-x86-darwin.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-x86-darwin.Tpo -c -o libcoregrind_amd64_freebsd_a-sigframe-x86-darwin.o `test -f 'm_sigframe/sigframe-x86-darwin.c' || echo '$(srcdir)/'`m_sigframe/sigframe-x86-darwin.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-x86-darwin.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-x86-darwin.Po
#	source='m_sigframe/sigframe-x86-darwin.c' object='libcoregrind_amd64_freebsd_a-sigframe-x86-darwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sigframe-x86-darwin.o `test -f 'm_sigframe/sigframe-x86-darwin.c' || echo '$(srcdir)/'`m_sigframe/sigframe-x86-darwin.c

libcoregrind_amd64_freebsd_a-sigframe-x86-darwin.obj: m_sigframe/sigframe-x86-darwin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sigframe-x86-darwin.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-x86-darwin.Tpo -c -o libcoregrind_amd64_freebsd_a-sigframe-x86-darwin.obj `if test -f 'm_sigframe/sigframe-x86-darwin.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-x86-darwin.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-x86-darwin.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-x86-darwin.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-x86-darwin.Po
#	source='m_sigframe/sigframe-x86-darwin.c' object='libcoregrind_amd64_freebsd_a-sigframe-x86-darwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sigframe-x86-darwin.obj `if test -f 'm_sigframe/sigframe-x86-darwin.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-x86-darwin.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-x86-darwin.c'; fi`

libcoregrind_amd64_freebsd_a-sigframe-amd64-darwin.o: m_sigframe/sigframe-amd64-darwin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sigframe-amd64-darwin.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-amd64-darwin.Tpo -c -o libcoregrind_amd64_freebsd_a-sigframe-amd64-darwin.o `test -f 'm_sigframe/sigframe-amd64-darwin.c' || echo '$(srcdir)/'`m_sigframe/sigframe-amd64-darwin.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-amd64-darwin.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-amd64-darwin.Po
#	source='m_sigframe/sigframe-amd64-darwin.c' object='libcoregrind_amd64_freebsd_a-sigframe-amd64-darwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sigframe-amd64-darwin.o `test -f 'm_sigframe/sigframe-amd64-darwin.c' || echo '$(srcdir)/'`m_sigframe/sigframe-amd64-darwin.c

libcoregrind_amd64_freebsd_a-sigframe-amd64-darwin.obj: m_sigframe/sigframe-amd64-darwin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-sigframe-amd64-darwin.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-amd64-darwin.Tpo -c -o libcoregrind_amd64_freebsd_a-sigframe-amd64-darwin.obj `if test -f 'm_sigframe/sigframe-amd64-darwin.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-amd64-darwin.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-amd64-darwin.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-amd64-darwin.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-sigframe-amd64-darwin.Po
#	source='m_sigframe/sigframe-amd64-darwin.c' object='libcoregrind_amd64_freebsd_a-sigframe-amd64-darwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-sigframe-amd64-darwin.obj `if test -f 'm_sigframe/sigframe-amd64-darwin.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-amd64-darwin.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-amd64-darwin.c'; fi`

libcoregrind_amd64_freebsd_a-syswrap-main.o: m_syswrap/syswrap-main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-main.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-main.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-main.o `test -f 'm_syswrap/syswrap-main.c' || echo '$(srcdir)/'`m_syswrap/syswrap-main.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-main.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-main.Po
#	source='m_syswrap/syswrap-main.c' object='libcoregrind_amd64_freebsd_a-syswrap-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-main.o `test -f 'm_syswrap/syswrap-main.c' || echo '$(srcdir)/'`m_syswrap/syswrap-main.c

libcoregrind_amd64_freebsd_a-syswrap-main.obj: m_syswrap/syswrap-main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-main.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-main.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-main.obj `if test -f 'm_syswrap/syswrap-main.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-main.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-main.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-main.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-main.Po
#	source='m_syswrap/syswrap-main.c' object='libcoregrind_amd64_freebsd_a-syswrap-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-main.obj `if test -f 'm_syswrap/syswrap-main.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-main.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-main.c'; fi`

libcoregrind_amd64_freebsd_a-syswrap-generic.o: m_syswrap/syswrap-generic.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-generic.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-generic.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-generic.o `test -f 'm_syswrap/syswrap-generic.c' || echo '$(srcdir)/'`m_syswrap/syswrap-generic.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-generic.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-generic.Po
#	source='m_syswrap/syswrap-generic.c' object='libcoregrind_amd64_freebsd_a-syswrap-generic.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-generic.o `test -f 'm_syswrap/syswrap-generic.c' || echo '$(srcdir)/'`m_syswrap/syswrap-generic.c

libcoregrind_amd64_freebsd_a-syswrap-generic.obj: m_syswrap/syswrap-generic.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-generic.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-generic.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-generic.obj `if test -f 'm_syswrap/syswrap-generic.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-generic.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-generic.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-generic.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-generic.Po
#	source='m_syswrap/syswrap-generic.c' object='libcoregrind_amd64_freebsd_a-syswrap-generic.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-generic.obj `if test -f 'm_syswrap/syswrap-generic.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-generic.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-generic.c'; fi`

libcoregrind_amd64_freebsd_a-syswrap-linux.o: m_syswrap/syswrap-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-linux.o `test -f 'm_syswrap/syswrap-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-linux.Po
#	source='m_syswrap/syswrap-linux.c' object='libcoregrind_amd64_freebsd_a-syswrap-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-linux.o `test -f 'm_syswrap/syswrap-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-linux.c

libcoregrind_amd64_freebsd_a-syswrap-linux.obj: m_syswrap/syswrap-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-linux.obj `if test -f 'm_syswrap/syswrap-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-linux.Po
#	source='m_syswrap/syswrap-linux.c' object='libcoregrind_amd64_freebsd_a-syswrap-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-linux.obj `if test -f 'm_syswrap/syswrap-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-linux.c'; fi`

libcoregrind_amd64_freebsd_a-syswrap-linux-variants.o: m_syswrap/syswrap-linux-variants.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-linux-variants.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-linux-variants.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-linux-variants.o `test -f 'm_syswrap/syswrap-linux-variants.c' || echo '$(srcdir)/'`m_syswrap/syswrap-linux-variants.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-linux-variants.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-linux-variants.Po
#	source='m_syswrap/syswrap-linux-variants.c' object='libcoregrind_amd64_freebsd_a-syswrap-linux-variants.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-linux-variants.o `test -f 'm_syswrap/syswrap-linux-variants.c' || echo '$(srcdir)/'`m_syswrap/syswrap-linux-variants.c

libcoregrind_amd64_freebsd_a-syswrap-linux-variants.obj: m_syswrap/syswrap-linux-variants.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-linux-variants.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-linux-variants.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-linux-variants.obj `if test -f 'm_syswrap/syswrap-linux-variants.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-linux-variants.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-linux-variants.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-linux-variants.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-linux-variants.Po
#	source='m_syswrap/syswrap-linux-variants.c' object='libcoregrind_amd64_freebsd_a-syswrap-linux-variants.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-linux-variants.obj `if test -f 'm_syswrap/syswrap-linux-variants.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-linux-variants.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-linux-variants.c'; fi`

libcoregrind_amd64_freebsd_a-syswrap-freebsd.o: m_syswrap/syswrap-freebsd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-freebsd.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-freebsd.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-freebsd.o `test -f 'm_syswrap/syswrap-freebsd.c' || echo '$(srcdir)/'`m_syswrap/syswrap-freebsd.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-freebsd.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-freebsd.Po
#	source='m_syswrap/syswrap-freebsd.c' object='libcoregrind_amd64_freebsd_a-syswrap-freebsd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-freebsd.o `test -f 'm_syswrap/syswrap-freebsd.c' || echo '$(srcdir)/'`m_syswrap/syswrap-freebsd.c

libcoregrind_amd64_freebsd_a-syswrap-freebsd.obj: m_syswrap/syswrap-freebsd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-freebsd.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-freebsd.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-freebsd.obj `if test -f 'm_syswrap/syswrap-freebsd.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-freebsd.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-freebsd.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-freebsd.Po
#	source='m_syswrap/syswrap-freebsd.c' object='libcoregrind_amd64_freebsd_a-syswrap-freebsd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-freebsd.obj `if test -f 'm_syswrap/syswrap-freebsd.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-freebsd.c'; fi`

libcoregrind_amd64_freebsd_a-syswrap-freebsd-variants.o: m_syswrap/syswrap-freebsd-variants.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-freebsd-variants.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-freebsd-variants.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-freebsd-variants.o `test -f 'm_syswrap/syswrap-freebsd-variants.c' || echo '$(srcdir)/'`m_syswrap/syswrap-freebsd-variants.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-freebsd-variants.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-freebsd-variants.Po
#	source='m_syswrap/syswrap-freebsd-variants.c' object='libcoregrind_amd64_freebsd_a-syswrap-freebsd-variants.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-freebsd-variants.o `test -f 'm_syswrap/syswrap-freebsd-variants.c' || echo '$(srcdir)/'`m_syswrap/syswrap-freebsd-variants.c

libcoregrind_amd64_freebsd_a-syswrap-freebsd-variants.obj: m_syswrap/syswrap-freebsd-variants.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-freebsd-variants.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-freebsd-variants.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-freebsd-variants.obj `if test -f 'm_syswrap/syswrap-freebsd-variants.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-freebsd-variants.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-freebsd-variants.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-freebsd-variants.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-freebsd-variants.Po
#	source='m_syswrap/syswrap-freebsd-variants.c' object='libcoregrind_amd64_freebsd_a-syswrap-freebsd-variants.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-freebsd-variants.obj `if test -f 'm_syswrap/syswrap-freebsd-variants.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-freebsd-variants.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-freebsd-variants.c'; fi`

libcoregrind_amd64_freebsd_a-syswrap-darwin.o: m_syswrap/syswrap-darwin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-darwin.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-darwin.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-darwin.o `test -f 'm_syswrap/syswrap-darwin.c' || echo '$(srcdir)/'`m_syswrap/syswrap-darwin.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-darwin.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-darwin.Po
#	source='m_syswrap/syswrap-darwin.c' object='libcoregrind_amd64_freebsd_a-syswrap-darwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-darwin.o `test -f 'm_syswrap/syswrap-darwin.c' || echo '$(srcdir)/'`m_syswrap/syswrap-darwin.c

libcoregrind_amd64_freebsd_a-syswrap-darwin.obj: m_syswrap/syswrap-darwin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-darwin.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-darwin.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-darwin.obj `if test -f 'm_syswrap/syswrap-darwin.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-darwin.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-darwin.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-darwin.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-darwin.Po
#	source='m_syswrap/syswrap-darwin.c' object='libcoregrind_amd64_freebsd_a-syswrap-darwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-darwin.obj `if test -f 'm_syswrap/syswrap-darwin.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-darwin.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-darwin.c'; fi`

libcoregrind_amd64_freebsd_a-syswrap-x86-linux.o: m_syswrap/syswrap-x86-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-x86-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-x86-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-x86-linux.o `test -f 'm_syswrap/syswrap-x86-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-x86-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-x86-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-x86-linux.Po
#	source='m_syswrap/syswrap-x86-linux.c' object='libcoregrind_amd64_freebsd_a-syswrap-x86-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-x86-linux.o `test -f 'm_syswrap/syswrap-x86-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-x86-linux.c

libcoregrind_amd64_freebsd_a-syswrap-x86-linux.obj: m_syswrap/syswrap-x86-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-x86-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-x86-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-x86-linux.obj `if test -f 'm_syswrap/syswrap-x86-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-x86-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-x86-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-x86-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-x86-linux.Po
#	source='m_syswrap/syswrap-x86-linux.c' object='libcoregrind_amd64_freebsd_a-syswrap-x86-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-x86-linux.obj `if test -f 'm_syswrap/syswrap-x86-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-x86-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-x86-linux.c'; fi`

libcoregrind_amd64_freebsd_a-syswrap-amd64-linux.o: m_syswrap/syswrap-amd64-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-amd64-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-amd64-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-amd64-linux.o `test -f 'm_syswrap/syswrap-amd64-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-amd64-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-amd64-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-amd64-linux.Po
#	source='m_syswrap/syswrap-amd64-linux.c' object='libcoregrind_amd64_freebsd_a-syswrap-amd64-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-amd64-linux.o `test -f 'm_syswrap/syswrap-amd64-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-amd64-linux.c

libcoregrind_amd64_freebsd_a-syswrap-amd64-linux.obj: m_syswrap/syswrap-amd64-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-amd64-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-amd64-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-amd64-linux.obj `if test -f 'm_syswrap/syswrap-amd64-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-amd64-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-amd64-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-amd64-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-amd64-linux.Po
#	source='m_syswrap/syswrap-amd64-linux.c' object='libcoregrind_amd64_freebsd_a-syswrap-amd64-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-amd64-linux.obj `if test -f 'm_syswrap/syswrap-amd64-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-amd64-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-amd64-linux.c'; fi`

libcoregrind_amd64_freebsd_a-syswrap-ppc32-linux.o: m_syswrap/syswrap-ppc32-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-ppc32-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-ppc32-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-ppc32-linux.o `test -f 'm_syswrap/syswrap-ppc32-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-ppc32-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-ppc32-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-ppc32-linux.Po
#	source='m_syswrap/syswrap-ppc32-linux.c' object='libcoregrind_amd64_freebsd_a-syswrap-ppc32-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-ppc32-linux.o `test -f 'm_syswrap/syswrap-ppc32-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-ppc32-linux.c

libcoregrind_amd64_freebsd_a-syswrap-ppc32-linux.obj: m_syswrap/syswrap-ppc32-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-ppc32-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-ppc32-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-ppc32-linux.obj `if test -f 'm_syswrap/syswrap-ppc32-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-ppc32-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-ppc32-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-ppc32-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-ppc32-linux.Po
#	source='m_syswrap/syswrap-ppc32-linux.c' object='libcoregrind_amd64_freebsd_a-syswrap-ppc32-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-ppc32-linux.obj `if test -f 'm_syswrap/syswrap-ppc32-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-ppc32-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-ppc32-linux.c'; fi`

libcoregrind_amd64_freebsd_a-syswrap-ppc64-linux.o: m_syswrap/syswrap-ppc64-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-ppc64-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-ppc64-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-ppc64-linux.o `test -f 'm_syswrap/syswrap-ppc64-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-ppc64-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-ppc64-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-ppc64-linux.Po
#	source='m_syswrap/syswrap-ppc64-linux.c' object='libcoregrind_amd64_freebsd_a-syswrap-ppc64-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-ppc64-linux.o `test -f 'm_syswrap/syswrap-ppc64-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-ppc64-linux.c

libcoregrind_amd64_freebsd_a-syswrap-ppc64-linux.obj: m_syswrap/syswrap-ppc64-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-ppc64-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-ppc64-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-ppc64-linux.obj `if test -f 'm_syswrap/syswrap-ppc64-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-ppc64-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-ppc64-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-ppc64-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-ppc64-linux.Po
#	source='m_syswrap/syswrap-ppc64-linux.c' object='libcoregrind_amd64_freebsd_a-syswrap-ppc64-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-ppc64-linux.obj `if test -f 'm_syswrap/syswrap-ppc64-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-ppc64-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-ppc64-linux.c'; fi`

libcoregrind_amd64_freebsd_a-syswrap-x86-freebsd.o: m_syswrap/syswrap-x86-freebsd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-x86-freebsd.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-x86-freebsd.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-x86-freebsd.o `test -f 'm_syswrap/syswrap-x86-freebsd.c' || echo '$(srcdir)/'`m_syswrap/syswrap-x86-freebsd.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-x86-freebsd.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-x86-freebsd.Po
#	source='m_syswrap/syswrap-x86-freebsd.c' object='libcoregrind_amd64_freebsd_a-syswrap-x86-freebsd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-x86-freebsd.o `test -f 'm_syswrap/syswrap-x86-freebsd.c' || echo '$(srcdir)/'`m_syswrap/syswrap-x86-freebsd.c

libcoregrind_amd64_freebsd_a-syswrap-x86-freebsd.obj: m_syswrap/syswrap-x86-freebsd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-x86-freebsd.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-x86-freebsd.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-x86-freebsd.obj `if test -f 'm_syswrap/syswrap-x86-freebsd.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-x86-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-x86-freebsd.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-x86-freebsd.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-x86-freebsd.Po
#	source='m_syswrap/syswrap-x86-freebsd.c' object='libcoregrind_amd64_freebsd_a-syswrap-x86-freebsd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-x86-freebsd.obj `if test -f 'm_syswrap/syswrap-x86-freebsd.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-x86-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-x86-freebsd.c'; fi`

libcoregrind_amd64_freebsd_a-syswrap-amd64-freebsd.o: m_syswrap/syswrap-amd64-freebsd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-amd64-freebsd.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-amd64-freebsd.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-amd64-freebsd.o `test -f 'm_syswrap/syswrap-amd64-freebsd.c' || echo '$(srcdir)/'`m_syswrap/syswrap-amd64-freebsd.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-amd64-freebsd.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-amd64-freebsd.Po
#	source='m_syswrap/syswrap-amd64-freebsd.c' object='libcoregrind_amd64_freebsd_a-syswrap-amd64-freebsd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-amd64-freebsd.o `test -f 'm_syswrap/syswrap-amd64-freebsd.c' || echo '$(srcdir)/'`m_syswrap/syswrap-amd64-freebsd.c

libcoregrind_amd64_freebsd_a-syswrap-amd64-freebsd.obj: m_syswrap/syswrap-amd64-freebsd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-amd64-freebsd.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-amd64-freebsd.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-amd64-freebsd.obj `if test -f 'm_syswrap/syswrap-amd64-freebsd.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-amd64-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-amd64-freebsd.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-amd64-freebsd.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-amd64-freebsd.Po
#	source='m_syswrap/syswrap-amd64-freebsd.c' object='libcoregrind_amd64_freebsd_a-syswrap-amd64-freebsd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-amd64-freebsd.obj `if test -f 'm_syswrap/syswrap-amd64-freebsd.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-amd64-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-amd64-freebsd.c'; fi`

libcoregrind_amd64_freebsd_a-syswrap-arm-linux.o: m_syswrap/syswrap-arm-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-arm-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-arm-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-arm-linux.o `test -f 'm_syswrap/syswrap-arm-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-arm-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-arm-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-arm-linux.Po
#	source='m_syswrap/syswrap-arm-linux.c' object='libcoregrind_amd64_freebsd_a-syswrap-arm-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-arm-linux.o `test -f 'm_syswrap/syswrap-arm-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-arm-linux.c

libcoregrind_amd64_freebsd_a-syswrap-arm-linux.obj: m_syswrap/syswrap-arm-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-arm-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-arm-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-arm-linux.obj `if test -f 'm_syswrap/syswrap-arm-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-arm-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-arm-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-arm-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-arm-linux.Po
#	source='m_syswrap/syswrap-arm-linux.c' object='libcoregrind_amd64_freebsd_a-syswrap-arm-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-arm-linux.obj `if test -f 'm_syswrap/syswrap-arm-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-arm-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-arm-linux.c'; fi`

libcoregrind_amd64_freebsd_a-syswrap-s390x-linux.o: m_syswrap/syswrap-s390x-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-s390x-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-s390x-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-s390x-linux.o `test -f 'm_syswrap/syswrap-s390x-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-s390x-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-s390x-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-s390x-linux.Po
#	source='m_syswrap/syswrap-s390x-linux.c' object='libcoregrind_amd64_freebsd_a-syswrap-s390x-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-s390x-linux.o `test -f 'm_syswrap/syswrap-s390x-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-s390x-linux.c

libcoregrind_amd64_freebsd_a-syswrap-s390x-linux.obj: m_syswrap/syswrap-s390x-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-s390x-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-s390x-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-s390x-linux.obj `if test -f 'm_syswrap/syswrap-s390x-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-s390x-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-s390x-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-s390x-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-s390x-linux.Po
#	source='m_syswrap/syswrap-s390x-linux.c' object='libcoregrind_amd64_freebsd_a-syswrap-s390x-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-s390x-linux.obj `if test -f 'm_syswrap/syswrap-s390x-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-s390x-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-s390x-linux.c'; fi`

libcoregrind_amd64_freebsd_a-syswrap-mips32-linux.o: m_syswrap/syswrap-mips32-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-mips32-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-mips32-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-mips32-linux.o `test -f 'm_syswrap/syswrap-mips32-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-mips32-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-mips32-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-mips32-linux.Po
#	source='m_syswrap/syswrap-mips32-linux.c' object='libcoregrind_amd64_freebsd_a-syswrap-mips32-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-mips32-linux.o `test -f 'm_syswrap/syswrap-mips32-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-mips32-linux.c

libcoregrind_amd64_freebsd_a-syswrap-mips32-linux.obj: m_syswrap/syswrap-mips32-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-mips32-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-mips32-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-mips32-linux.obj `if test -f 'm_syswrap/syswrap-mips32-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-mips32-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-mips32-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-mips32-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-mips32-linux.Po
#	source='m_syswrap/syswrap-mips32-linux.c' object='libcoregrind_amd64_freebsd_a-syswrap-mips32-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-mips32-linux.obj `if test -f 'm_syswrap/syswrap-mips32-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-mips32-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-mips32-linux.c'; fi`

libcoregrind_amd64_freebsd_a-syswrap-x86-darwin.o: m_syswrap/syswrap-x86-darwin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-x86-darwin.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-x86-darwin.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-x86-darwin.o `test -f 'm_syswrap/syswrap-x86-darwin.c' || echo '$(srcdir)/'`m_syswrap/syswrap-x86-darwin.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-x86-darwin.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-x86-darwin.Po
#	source='m_syswrap/syswrap-x86-darwin.c' object='libcoregrind_amd64_freebsd_a-syswrap-x86-darwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-x86-darwin.o `test -f 'm_syswrap/syswrap-x86-darwin.c' || echo '$(srcdir)/'`m_syswrap/syswrap-x86-darwin.c

libcoregrind_amd64_freebsd_a-syswrap-x86-darwin.obj: m_syswrap/syswrap-x86-darwin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-x86-darwin.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-x86-darwin.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-x86-darwin.obj `if test -f 'm_syswrap/syswrap-x86-darwin.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-x86-darwin.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-x86-darwin.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-x86-darwin.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-x86-darwin.Po
#	source='m_syswrap/syswrap-x86-darwin.c' object='libcoregrind_amd64_freebsd_a-syswrap-x86-darwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-x86-darwin.obj `if test -f 'm_syswrap/syswrap-x86-darwin.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-x86-darwin.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-x86-darwin.c'; fi`

libcoregrind_amd64_freebsd_a-syswrap-amd64-darwin.o: m_syswrap/syswrap-amd64-darwin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-amd64-darwin.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-amd64-darwin.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-amd64-darwin.o `test -f 'm_syswrap/syswrap-amd64-darwin.c' || echo '$(srcdir)/'`m_syswrap/syswrap-amd64-darwin.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-amd64-darwin.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-amd64-darwin.Po
#	source='m_syswrap/syswrap-amd64-darwin.c' object='libcoregrind_amd64_freebsd_a-syswrap-amd64-darwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-amd64-darwin.o `test -f 'm_syswrap/syswrap-amd64-darwin.c' || echo '$(srcdir)/'`m_syswrap/syswrap-amd64-darwin.c

libcoregrind_amd64_freebsd_a-syswrap-amd64-darwin.obj: m_syswrap/syswrap-amd64-darwin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-syswrap-amd64-darwin.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-amd64-darwin.Tpo -c -o libcoregrind_amd64_freebsd_a-syswrap-amd64-darwin.obj `if test -f 'm_syswrap/syswrap-amd64-darwin.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-amd64-darwin.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-amd64-darwin.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-amd64-darwin.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-syswrap-amd64-darwin.Po
#	source='m_syswrap/syswrap-amd64-darwin.c' object='libcoregrind_amd64_freebsd_a-syswrap-amd64-darwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-syswrap-amd64-darwin.obj `if test -f 'm_syswrap/syswrap-amd64-darwin.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-amd64-darwin.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-amd64-darwin.c'; fi`

libcoregrind_amd64_freebsd_a-elf.o: m_ume/elf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-elf.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-elf.Tpo -c -o libcoregrind_amd64_freebsd_a-elf.o `test -f 'm_ume/elf.c' || echo '$(srcdir)/'`m_ume/elf.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-elf.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-elf.Po
#	source='m_ume/elf.c' object='libcoregrind_amd64_freebsd_a-elf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-elf.o `test -f 'm_ume/elf.c' || echo '$(srcdir)/'`m_ume/elf.c

libcoregrind_amd64_freebsd_a-elf.obj: m_ume/elf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-elf.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-elf.Tpo -c -o libcoregrind_amd64_freebsd_a-elf.obj `if test -f 'm_ume/elf.c'; then $(CYGPATH_W) 'm_ume/elf.c'; else $(CYGPATH_W) '$(srcdir)/m_ume/elf.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-elf.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-elf.Po
#	source='m_ume/elf.c' object='libcoregrind_amd64_freebsd_a-elf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-elf.obj `if test -f 'm_ume/elf.c'; then $(CYGPATH_W) 'm_ume/elf.c'; else $(CYGPATH_W) '$(srcdir)/m_ume/elf.c'; fi`

libcoregrind_amd64_freebsd_a-macho.o: m_ume/macho.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-macho.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-macho.Tpo -c -o libcoregrind_amd64_freebsd_a-macho.o `test -f 'm_ume/macho.c' || echo '$(srcdir)/'`m_ume/macho.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-macho.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-macho.Po
#	source='m_ume/macho.c' object='libcoregrind_amd64_freebsd_a-macho.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-macho.o `test -f 'm_ume/macho.c' || echo '$(srcdir)/'`m_ume/macho.c

libcoregrind_amd64_freebsd_a-macho.obj: m_ume/macho.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-macho.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-macho.Tpo -c -o libcoregrind_amd64_freebsd_a-macho.obj `if test -f 'm_ume/macho.c'; then $(CYGPATH_W) 'm_ume/macho.c'; else $(CYGPATH_W) '$(srcdir)/m_ume/macho.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-macho.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-macho.Po
#	source='m_ume/macho.c' object='libcoregrind_amd64_freebsd_a-macho.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-macho.obj `if test -f 'm_ume/macho.c'; then $(CYGPATH_W) 'm_ume/macho.c'; else $(CYGPATH_W) '$(srcdir)/m_ume/macho.c'; fi`

libcoregrind_amd64_freebsd_a-main.o: m_ume/main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-main.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-main.Tpo -c -o libcoregrind_amd64_freebsd_a-main.o `test -f 'm_ume/main.c' || echo '$(srcdir)/'`m_ume/main.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-main.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-main.Po
#	source='m_ume/main.c' object='libcoregrind_amd64_freebsd_a-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-main.o `test -f 'm_ume/main.c' || echo '$(srcdir)/'`m_ume/main.c

libcoregrind_amd64_freebsd_a-main.obj: m_ume/main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-main.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-main.Tpo -c -o libcoregrind_amd64_freebsd_a-main.obj `if test -f 'm_ume/main.c'; then $(CYGPATH_W) 'm_ume/main.c'; else $(CYGPATH_W) '$(srcdir)/m_ume/main.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-main.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-main.Po
#	source='m_ume/main.c' object='libcoregrind_amd64_freebsd_a-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-main.obj `if test -f 'm_ume/main.c'; then $(CYGPATH_W) 'm_ume/main.c'; else $(CYGPATH_W) '$(srcdir)/m_ume/main.c'; fi`

libcoregrind_amd64_freebsd_a-script.o: m_ume/script.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-script.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-script.Tpo -c -o libcoregrind_amd64_freebsd_a-script.o `test -f 'm_ume/script.c' || echo '$(srcdir)/'`m_ume/script.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-script.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-script.Po
#	source='m_ume/script.c' object='libcoregrind_amd64_freebsd_a-script.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-script.o `test -f 'm_ume/script.c' || echo '$(srcdir)/'`m_ume/script.c

libcoregrind_amd64_freebsd_a-script.obj: m_ume/script.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-script.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-script.Tpo -c -o libcoregrind_amd64_freebsd_a-script.obj `if test -f 'm_ume/script.c'; then $(CYGPATH_W) 'm_ume/script.c'; else $(CYGPATH_W) '$(srcdir)/m_ume/script.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-script.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-script.Po
#	source='m_ume/script.c' object='libcoregrind_amd64_freebsd_a-script.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-script.obj `if test -f 'm_ume/script.c'; then $(CYGPATH_W) 'm_ume/script.c'; else $(CYGPATH_W) '$(srcdir)/m_ume/script.c'; fi`

libcoregrind_amd64_freebsd_a-ticket-lock-linux.o: m_scheduler/ticket-lock-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-ticket-lock-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-ticket-lock-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-ticket-lock-linux.o `test -f 'm_scheduler/ticket-lock-linux.c' || echo '$(srcdir)/'`m_scheduler/ticket-lock-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-ticket-lock-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-ticket-lock-linux.Po
#	source='m_scheduler/ticket-lock-linux.c' object='libcoregrind_amd64_freebsd_a-ticket-lock-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-ticket-lock-linux.o `test -f 'm_scheduler/ticket-lock-linux.c' || echo '$(srcdir)/'`m_scheduler/ticket-lock-linux.c

libcoregrind_amd64_freebsd_a-ticket-lock-linux.obj: m_scheduler/ticket-lock-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-ticket-lock-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-ticket-lock-linux.Tpo -c -o libcoregrind_amd64_freebsd_a-ticket-lock-linux.obj `if test -f 'm_scheduler/ticket-lock-linux.c'; then $(CYGPATH_W) 'm_scheduler/ticket-lock-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_scheduler/ticket-lock-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-ticket-lock-linux.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-ticket-lock-linux.Po
#	source='m_scheduler/ticket-lock-linux.c' object='libcoregrind_amd64_freebsd_a-ticket-lock-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-ticket-lock-linux.obj `if test -f 'm_scheduler/ticket-lock-linux.c'; then $(CYGPATH_W) 'm_scheduler/ticket-lock-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_scheduler/ticket-lock-linux.c'; fi`

libcoregrind_amd64_freebsd_a-mach_vmUser.o: m_mach/mach_vmUser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-mach_vmUser.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_vmUser.Tpo -c -o libcoregrind_amd64_freebsd_a-mach_vmUser.o `test -f 'm_mach/mach_vmUser.c' || echo '$(srcdir)/'`m_mach/mach_vmUser.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_vmUser.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_vmUser.Po
#	source='m_mach/mach_vmUser.c' object='libcoregrind_amd64_freebsd_a-mach_vmUser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-mach_vmUser.o `test -f 'm_mach/mach_vmUser.c' || echo '$(srcdir)/'`m_mach/mach_vmUser.c

libcoregrind_amd64_freebsd_a-mach_vmUser.obj: m_mach/mach_vmUser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-mach_vmUser.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_vmUser.Tpo -c -o libcoregrind_amd64_freebsd_a-mach_vmUser.obj `if test -f 'm_mach/mach_vmUser.c'; then $(CYGPATH_W) 'm_mach/mach_vmUser.c'; else $(CYGPATH_W) '$(srcdir)/m_mach/mach_vmUser.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_vmUser.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-mach_vmUser.Po
#	source='m_mach/mach_vmUser.c' object='libcoregrind_amd64_freebsd_a-mach_vmUser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-mach_vmUser.obj `if test -f 'm_mach/mach_vmUser.c'; then $(CYGPATH_W) 'm_mach/mach_vmUser.c'; else $(CYGPATH_W) '$(srcdir)/m_mach/mach_vmUser.c'; fi`

libcoregrind_amd64_freebsd_a-taskUser.o: m_mach/taskUser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-taskUser.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-taskUser.Tpo -c -o libcoregrind_amd64_freebsd_a-taskUser.o `test -f 'm_mach/taskUser.c' || echo '$(srcdir)/'`m_mach/taskUser.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-taskUser.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-taskUser.Po
#	source='m_mach/taskUser.c' object='libcoregrind_amd64_freebsd_a-taskUser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-taskUser.o `test -f 'm_mach/taskUser.c' || echo '$(srcdir)/'`m_mach/taskUser.c

libcoregrind_amd64_freebsd_a-taskUser.obj: m_mach/taskUser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-taskUser.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-taskUser.Tpo -c -o libcoregrind_amd64_freebsd_a-taskUser.obj `if test -f 'm_mach/taskUser.c'; then $(CYGPATH_W) 'm_mach/taskUser.c'; else $(CYGPATH_W) '$(srcdir)/m_mach/taskUser.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-taskUser.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-taskUser.Po
#	source='m_mach/taskUser.c' object='libcoregrind_amd64_freebsd_a-taskUser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-taskUser.obj `if test -f 'm_mach/taskUser.c'; then $(CYGPATH_W) 'm_mach/taskUser.c'; else $(CYGPATH_W) '$(srcdir)/m_mach/taskUser.c'; fi`

libcoregrind_amd64_freebsd_a-thread_actUser.o: m_mach/thread_actUser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-thread_actUser.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-thread_actUser.Tpo -c -o libcoregrind_amd64_freebsd_a-thread_actUser.o `test -f 'm_mach/thread_actUser.c' || echo '$(srcdir)/'`m_mach/thread_actUser.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-thread_actUser.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-thread_actUser.Po
#	source='m_mach/thread_actUser.c' object='libcoregrind_amd64_freebsd_a-thread_actUser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-thread_actUser.o `test -f 'm_mach/thread_actUser.c' || echo '$(srcdir)/'`m_mach/thread_actUser.c

libcoregrind_amd64_freebsd_a-thread_actUser.obj: m_mach/thread_actUser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-thread_actUser.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-thread_actUser.Tpo -c -o libcoregrind_amd64_freebsd_a-thread_actUser.obj `if test -f 'm_mach/thread_actUser.c'; then $(CYGPATH_W) 'm_mach/thread_actUser.c'; else $(CYGPATH_W) '$(srcdir)/m_mach/thread_actUser.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-thread_actUser.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-thread_actUser.Po
#	source='m_mach/thread_actUser.c' object='libcoregrind_amd64_freebsd_a-thread_actUser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-thread_actUser.obj `if test -f 'm_mach/thread_actUser.c'; then $(CYGPATH_W) 'm_mach/thread_actUser.c'; else $(CYGPATH_W) '$(srcdir)/m_mach/thread_actUser.c'; fi`

libcoregrind_amd64_freebsd_a-vm_mapUser.o: m_mach/vm_mapUser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-vm_mapUser.o -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-vm_mapUser.Tpo -c -o libcoregrind_amd64_freebsd_a-vm_mapUser.o `test -f 'm_mach/vm_mapUser.c' || echo '$(srcdir)/'`m_mach/vm_mapUser.c
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-vm_mapUser.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-vm_mapUser.Po
#	source='m_mach/vm_mapUser.c' object='libcoregrind_amd64_freebsd_a-vm_mapUser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-vm_mapUser.o `test -f 'm_mach/vm_mapUser.c' || echo '$(srcdir)/'`m_mach/vm_mapUser.c

libcoregrind_amd64_freebsd_a-vm_mapUser.obj: m_mach/vm_mapUser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_amd64_freebsd_a-vm_mapUser.obj -MD -MP -MF $(DEPDIR)/libcoregrind_amd64_freebsd_a-vm_mapUser.Tpo -c -o libcoregrind_amd64_freebsd_a-vm_mapUser.obj `if test -f 'm_mach/vm_mapUser.c'; then $(CYGPATH_W) 'm_mach/vm_mapUser.c'; else $(CYGPATH_W) '$(srcdir)/m_mach/vm_mapUser.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_amd64_freebsd_a-vm_mapUser.Tpo $(DEPDIR)/libcoregrind_amd64_freebsd_a-vm_mapUser.Po
#	source='m_mach/vm_mapUser.c' object='libcoregrind_amd64_freebsd_a-vm_mapUser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_amd64_freebsd_a-vm_mapUser.obj `if test -f 'm_mach/vm_mapUser.c'; then $(CYGPATH_W) 'm_mach/vm_mapUser.c'; else $(CYGPATH_W) '$(srcdir)/m_mach/vm_mapUser.c'; fi`

libcoregrind_x86_freebsd_a-m_commandline.o: m_commandline.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_commandline.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_commandline.Tpo -c -o libcoregrind_x86_freebsd_a-m_commandline.o `test -f 'm_commandline.c' || echo '$(srcdir)/'`m_commandline.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_commandline.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_commandline.Po
#	source='m_commandline.c' object='libcoregrind_x86_freebsd_a-m_commandline.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_commandline.o `test -f 'm_commandline.c' || echo '$(srcdir)/'`m_commandline.c

libcoregrind_x86_freebsd_a-m_commandline.obj: m_commandline.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_commandline.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_commandline.Tpo -c -o libcoregrind_x86_freebsd_a-m_commandline.obj `if test -f 'm_commandline.c'; then $(CYGPATH_W) 'm_commandline.c'; else $(CYGPATH_W) '$(srcdir)/m_commandline.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_commandline.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_commandline.Po
#	source='m_commandline.c' object='libcoregrind_x86_freebsd_a-m_commandline.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_commandline.obj `if test -f 'm_commandline.c'; then $(CYGPATH_W) 'm_commandline.c'; else $(CYGPATH_W) '$(srcdir)/m_commandline.c'; fi`

libcoregrind_x86_freebsd_a-m_clientstate.o: m_clientstate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_clientstate.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_clientstate.Tpo -c -o libcoregrind_x86_freebsd_a-m_clientstate.o `test -f 'm_clientstate.c' || echo '$(srcdir)/'`m_clientstate.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_clientstate.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_clientstate.Po
#	source='m_clientstate.c' object='libcoregrind_x86_freebsd_a-m_clientstate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_clientstate.o `test -f 'm_clientstate.c' || echo '$(srcdir)/'`m_clientstate.c

libcoregrind_x86_freebsd_a-m_clientstate.obj: m_clientstate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_clientstate.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_clientstate.Tpo -c -o libcoregrind_x86_freebsd_a-m_clientstate.obj `if test -f 'm_clientstate.c'; then $(CYGPATH_W) 'm_clientstate.c'; else $(CYGPATH_W) '$(srcdir)/m_clientstate.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_clientstate.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_clientstate.Po
#	source='m_clientstate.c' object='libcoregrind_x86_freebsd_a-m_clientstate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_clientstate.obj `if test -f 'm_clientstate.c'; then $(CYGPATH_W) 'm_clientstate.c'; else $(CYGPATH_W) '$(srcdir)/m_clientstate.c'; fi`

libcoregrind_x86_freebsd_a-m_debugger.o: m_debugger.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_debugger.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_debugger.Tpo -c -o libcoregrind_x86_freebsd_a-m_debugger.o `test -f 'm_debugger.c' || echo '$(srcdir)/'`m_debugger.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_debugger.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_debugger.Po
#	source='m_debugger.c' object='libcoregrind_x86_freebsd_a-m_debugger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_debugger.o `test -f 'm_debugger.c' || echo '$(srcdir)/'`m_debugger.c

libcoregrind_x86_freebsd_a-m_debugger.obj: m_debugger.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_debugger.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_debugger.Tpo -c -o libcoregrind_x86_freebsd_a-m_debugger.obj `if test -f 'm_debugger.c'; then $(CYGPATH_W) 'm_debugger.c'; else $(CYGPATH_W) '$(srcdir)/m_debugger.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_debugger.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_debugger.Po
#	source='m_debugger.c' object='libcoregrind_x86_freebsd_a-m_debugger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_debugger.obj `if test -f 'm_debugger.c'; then $(CYGPATH_W) 'm_debugger.c'; else $(CYGPATH_W) '$(srcdir)/m_debugger.c'; fi`

libcoregrind_x86_freebsd_a-m_debuglog.o: m_debuglog.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_debuglog.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_debuglog.Tpo -c -o libcoregrind_x86_freebsd_a-m_debuglog.o `test -f 'm_debuglog.c' || echo '$(srcdir)/'`m_debuglog.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_debuglog.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_debuglog.Po
#	source='m_debuglog.c' object='libcoregrind_x86_freebsd_a-m_debuglog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_debuglog.o `test -f 'm_debuglog.c' || echo '$(srcdir)/'`m_debuglog.c

libcoregrind_x86_freebsd_a-m_debuglog.obj: m_debuglog.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_debuglog.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_debuglog.Tpo -c -o libcoregrind_x86_freebsd_a-m_debuglog.obj `if test -f 'm_debuglog.c'; then $(CYGPATH_W) 'm_debuglog.c'; else $(CYGPATH_W) '$(srcdir)/m_debuglog.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_debuglog.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_debuglog.Po
#	source='m_debuglog.c' object='libcoregrind_x86_freebsd_a-m_debuglog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_debuglog.obj `if test -f 'm_debuglog.c'; then $(CYGPATH_W) 'm_debuglog.c'; else $(CYGPATH_W) '$(srcdir)/m_debuglog.c'; fi`

libcoregrind_x86_freebsd_a-m_errormgr.o: m_errormgr.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_errormgr.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_errormgr.Tpo -c -o libcoregrind_x86_freebsd_a-m_errormgr.o `test -f 'm_errormgr.c' || echo '$(srcdir)/'`m_errormgr.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_errormgr.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_errormgr.Po
#	source='m_errormgr.c' object='libcoregrind_x86_freebsd_a-m_errormgr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_errormgr.o `test -f 'm_errormgr.c' || echo '$(srcdir)/'`m_errormgr.c

libcoregrind_x86_freebsd_a-m_errormgr.obj: m_errormgr.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_errormgr.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_errormgr.Tpo -c -o libcoregrind_x86_freebsd_a-m_errormgr.obj `if test -f 'm_errormgr.c'; then $(CYGPATH_W) 'm_errormgr.c'; else $(CYGPATH_W) '$(srcdir)/m_errormgr.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_errormgr.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_errormgr.Po
#	source='m_errormgr.c' object='libcoregrind_x86_freebsd_a-m_errormgr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_errormgr.obj `if test -f 'm_errormgr.c'; then $(CYGPATH_W) 'm_errormgr.c'; else $(CYGPATH_W) '$(srcdir)/m_errormgr.c'; fi`

libcoregrind_x86_freebsd_a-m_execontext.o: m_execontext.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_execontext.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_execontext.Tpo -c -o libcoregrind_x86_freebsd_a-m_execontext.o `test -f 'm_execontext.c' || echo '$(srcdir)/'`m_execontext.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_execontext.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_execontext.Po
#	source='m_execontext.c' object='libcoregrind_x86_freebsd_a-m_execontext.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_execontext.o `test -f 'm_execontext.c' || echo '$(srcdir)/'`m_execontext.c

libcoregrind_x86_freebsd_a-m_execontext.obj: m_execontext.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_execontext.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_execontext.Tpo -c -o libcoregrind_x86_freebsd_a-m_execontext.obj `if test -f 'm_execontext.c'; then $(CYGPATH_W) 'm_execontext.c'; else $(CYGPATH_W) '$(srcdir)/m_execontext.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_execontext.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_execontext.Po
#	source='m_execontext.c' object='libcoregrind_x86_freebsd_a-m_execontext.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_execontext.obj `if test -f 'm_execontext.c'; then $(CYGPATH_W) 'm_execontext.c'; else $(CYGPATH_W) '$(srcdir)/m_execontext.c'; fi`

libcoregrind_x86_freebsd_a-m_poolalloc.o: m_poolalloc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_poolalloc.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_poolalloc.Tpo -c -o libcoregrind_x86_freebsd_a-m_poolalloc.o `test -f 'm_poolalloc.c' || echo '$(srcdir)/'`m_poolalloc.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_poolalloc.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_poolalloc.Po
#	source='m_poolalloc.c' object='libcoregrind_x86_freebsd_a-m_poolalloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_poolalloc.o `test -f 'm_poolalloc.c' || echo '$(srcdir)/'`m_poolalloc.c

libcoregrind_x86_freebsd_a-m_poolalloc.obj: m_poolalloc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_poolalloc.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_poolalloc.Tpo -c -o libcoregrind_x86_freebsd_a-m_poolalloc.obj `if test -f 'm_poolalloc.c'; then $(CYGPATH_W) 'm_poolalloc.c'; else $(CYGPATH_W) '$(srcdir)/m_poolalloc.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_poolalloc.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_poolalloc.Po
#	source='m_poolalloc.c' object='libcoregrind_x86_freebsd_a-m_poolalloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_poolalloc.obj `if test -f 'm_poolalloc.c'; then $(CYGPATH_W) 'm_poolalloc.c'; else $(CYGPATH_W) '$(srcdir)/m_poolalloc.c'; fi`

libcoregrind_x86_freebsd_a-m_hashtable.o: m_hashtable.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_hashtable.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_hashtable.Tpo -c -o libcoregrind_x86_freebsd_a-m_hashtable.o `test -f 'm_hashtable.c' || echo '$(srcdir)/'`m_hashtable.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_hashtable.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_hashtable.Po
#	source='m_hashtable.c' object='libcoregrind_x86_freebsd_a-m_hashtable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_hashtable.o `test -f 'm_hashtable.c' || echo '$(srcdir)/'`m_hashtable.c

libcoregrind_x86_freebsd_a-m_hashtable.obj: m_hashtable.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_hashtable.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_hashtable.Tpo -c -o libcoregrind_x86_freebsd_a-m_hashtable.obj `if test -f 'm_hashtable.c'; then $(CYGPATH_W) 'm_hashtable.c'; else $(CYGPATH_W) '$(srcdir)/m_hashtable.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_hashtable.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_hashtable.Po
#	source='m_hashtable.c' object='libcoregrind_x86_freebsd_a-m_hashtable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_hashtable.obj `if test -f 'm_hashtable.c'; then $(CYGPATH_W) 'm_hashtable.c'; else $(CYGPATH_W) '$(srcdir)/m_hashtable.c'; fi`

libcoregrind_x86_freebsd_a-m_libcbase.o: m_libcbase.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_libcbase.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcbase.Tpo -c -o libcoregrind_x86_freebsd_a-m_libcbase.o `test -f 'm_libcbase.c' || echo '$(srcdir)/'`m_libcbase.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcbase.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcbase.Po
#	source='m_libcbase.c' object='libcoregrind_x86_freebsd_a-m_libcbase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_libcbase.o `test -f 'm_libcbase.c' || echo '$(srcdir)/'`m_libcbase.c

libcoregrind_x86_freebsd_a-m_libcbase.obj: m_libcbase.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_libcbase.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcbase.Tpo -c -o libcoregrind_x86_freebsd_a-m_libcbase.obj `if test -f 'm_libcbase.c'; then $(CYGPATH_W) 'm_libcbase.c'; else $(CYGPATH_W) '$(srcdir)/m_libcbase.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcbase.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcbase.Po
#	source='m_libcbase.c' object='libcoregrind_x86_freebsd_a-m_libcbase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_libcbase.obj `if test -f 'm_libcbase.c'; then $(CYGPATH_W) 'm_libcbase.c'; else $(CYGPATH_W) '$(srcdir)/m_libcbase.c'; fi`

libcoregrind_x86_freebsd_a-m_libcassert.o: m_libcassert.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_libcassert.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcassert.Tpo -c -o libcoregrind_x86_freebsd_a-m_libcassert.o `test -f 'm_libcassert.c' || echo '$(srcdir)/'`m_libcassert.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcassert.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcassert.Po
#	source='m_libcassert.c' object='libcoregrind_x86_freebsd_a-m_libcassert.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_libcassert.o `test -f 'm_libcassert.c' || echo '$(srcdir)/'`m_libcassert.c

libcoregrind_x86_freebsd_a-m_libcassert.obj: m_libcassert.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_libcassert.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcassert.Tpo -c -o libcoregrind_x86_freebsd_a-m_libcassert.obj `if test -f 'm_libcassert.c'; then $(CYGPATH_W) 'm_libcassert.c'; else $(CYGPATH_W) '$(srcdir)/m_libcassert.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcassert.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcassert.Po
#	source='m_libcassert.c' object='libcoregrind_x86_freebsd_a-m_libcassert.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_libcassert.obj `if test -f 'm_libcassert.c'; then $(CYGPATH_W) 'm_libcassert.c'; else $(CYGPATH_W) '$(srcdir)/m_libcassert.c'; fi`

libcoregrind_x86_freebsd_a-m_libcfile.o: m_libcfile.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_libcfile.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcfile.Tpo -c -o libcoregrind_x86_freebsd_a-m_libcfile.o `test -f 'm_libcfile.c' || echo '$(srcdir)/'`m_libcfile.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcfile.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcfile.Po
#	source='m_libcfile.c' object='libcoregrind_x86_freebsd_a-m_libcfile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_libcfile.o `test -f 'm_libcfile.c' || echo '$(srcdir)/'`m_libcfile.c

libcoregrind_x86_freebsd_a-m_libcfile.obj: m_libcfile.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_libcfile.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcfile.Tpo -c -o libcoregrind_x86_freebsd_a-m_libcfile.obj `if test -f 'm_libcfile.c'; then $(CYGPATH_W) 'm_libcfile.c'; else $(CYGPATH_W) '$(srcdir)/m_libcfile.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcfile.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcfile.Po
#	source='m_libcfile.c' object='libcoregrind_x86_freebsd_a-m_libcfile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_libcfile.obj `if test -f 'm_libcfile.c'; then $(CYGPATH_W) 'm_libcfile.c'; else $(CYGPATH_W) '$(srcdir)/m_libcfile.c'; fi`

libcoregrind_x86_freebsd_a-m_libcprint.o: m_libcprint.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_libcprint.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcprint.Tpo -c -o libcoregrind_x86_freebsd_a-m_libcprint.o `test -f 'm_libcprint.c' || echo '$(srcdir)/'`m_libcprint.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcprint.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcprint.Po
#	source='m_libcprint.c' object='libcoregrind_x86_freebsd_a-m_libcprint.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_libcprint.o `test -f 'm_libcprint.c' || echo '$(srcdir)/'`m_libcprint.c

libcoregrind_x86_freebsd_a-m_libcprint.obj: m_libcprint.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_libcprint.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcprint.Tpo -c -o libcoregrind_x86_freebsd_a-m_libcprint.obj `if test -f 'm_libcprint.c'; then $(CYGPATH_W) 'm_libcprint.c'; else $(CYGPATH_W) '$(srcdir)/m_libcprint.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcprint.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcprint.Po
#	source='m_libcprint.c' object='libcoregrind_x86_freebsd_a-m_libcprint.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_libcprint.obj `if test -f 'm_libcprint.c'; then $(CYGPATH_W) 'm_libcprint.c'; else $(CYGPATH_W) '$(srcdir)/m_libcprint.c'; fi`

libcoregrind_x86_freebsd_a-m_libcproc.o: m_libcproc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_libcproc.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcproc.Tpo -c -o libcoregrind_x86_freebsd_a-m_libcproc.o `test -f 'm_libcproc.c' || echo '$(srcdir)/'`m_libcproc.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcproc.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcproc.Po
#	source='m_libcproc.c' object='libcoregrind_x86_freebsd_a-m_libcproc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_libcproc.o `test -f 'm_libcproc.c' || echo '$(srcdir)/'`m_libcproc.c

libcoregrind_x86_freebsd_a-m_libcproc.obj: m_libcproc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_libcproc.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcproc.Tpo -c -o libcoregrind_x86_freebsd_a-m_libcproc.obj `if test -f 'm_libcproc.c'; then $(CYGPATH_W) 'm_libcproc.c'; else $(CYGPATH_W) '$(srcdir)/m_libcproc.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcproc.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcproc.Po
#	source='m_libcproc.c' object='libcoregrind_x86_freebsd_a-m_libcproc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_libcproc.obj `if test -f 'm_libcproc.c'; then $(CYGPATH_W) 'm_libcproc.c'; else $(CYGPATH_W) '$(srcdir)/m_libcproc.c'; fi`

libcoregrind_x86_freebsd_a-m_libcsetjmp.o: m_libcsetjmp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_libcsetjmp.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcsetjmp.Tpo -c -o libcoregrind_x86_freebsd_a-m_libcsetjmp.o `test -f 'm_libcsetjmp.c' || echo '$(srcdir)/'`m_libcsetjmp.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcsetjmp.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcsetjmp.Po
#	source='m_libcsetjmp.c' object='libcoregrind_x86_freebsd_a-m_libcsetjmp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_libcsetjmp.o `test -f 'm_libcsetjmp.c' || echo '$(srcdir)/'`m_libcsetjmp.c

libcoregrind_x86_freebsd_a-m_libcsetjmp.obj: m_libcsetjmp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_libcsetjmp.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcsetjmp.Tpo -c -o libcoregrind_x86_freebsd_a-m_libcsetjmp.obj `if test -f 'm_libcsetjmp.c'; then $(CYGPATH_W) 'm_libcsetjmp.c'; else $(CYGPATH_W) '$(srcdir)/m_libcsetjmp.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcsetjmp.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcsetjmp.Po
#	source='m_libcsetjmp.c' object='libcoregrind_x86_freebsd_a-m_libcsetjmp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_libcsetjmp.obj `if test -f 'm_libcsetjmp.c'; then $(CYGPATH_W) 'm_libcsetjmp.c'; else $(CYGPATH_W) '$(srcdir)/m_libcsetjmp.c'; fi`

libcoregrind_x86_freebsd_a-m_libcsignal.o: m_libcsignal.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_libcsignal.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcsignal.Tpo -c -o libcoregrind_x86_freebsd_a-m_libcsignal.o `test -f 'm_libcsignal.c' || echo '$(srcdir)/'`m_libcsignal.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcsignal.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcsignal.Po
#	source='m_libcsignal.c' object='libcoregrind_x86_freebsd_a-m_libcsignal.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_libcsignal.o `test -f 'm_libcsignal.c' || echo '$(srcdir)/'`m_libcsignal.c

libcoregrind_x86_freebsd_a-m_libcsignal.obj: m_libcsignal.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_libcsignal.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcsignal.Tpo -c -o libcoregrind_x86_freebsd_a-m_libcsignal.obj `if test -f 'm_libcsignal.c'; then $(CYGPATH_W) 'm_libcsignal.c'; else $(CYGPATH_W) '$(srcdir)/m_libcsignal.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcsignal.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_libcsignal.Po
#	source='m_libcsignal.c' object='libcoregrind_x86_freebsd_a-m_libcsignal.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_libcsignal.obj `if test -f 'm_libcsignal.c'; then $(CYGPATH_W) 'm_libcsignal.c'; else $(CYGPATH_W) '$(srcdir)/m_libcsignal.c'; fi`

libcoregrind_x86_freebsd_a-m_machine.o: m_machine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_machine.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_machine.Tpo -c -o libcoregrind_x86_freebsd_a-m_machine.o `test -f 'm_machine.c' || echo '$(srcdir)/'`m_machine.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_machine.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_machine.Po
#	source='m_machine.c' object='libcoregrind_x86_freebsd_a-m_machine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_machine.o `test -f 'm_machine.c' || echo '$(srcdir)/'`m_machine.c

libcoregrind_x86_freebsd_a-m_machine.obj: m_machine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_machine.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_machine.Tpo -c -o libcoregrind_x86_freebsd_a-m_machine.obj `if test -f 'm_machine.c'; then $(CYGPATH_W) 'm_machine.c'; else $(CYGPATH_W) '$(srcdir)/m_machine.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_machine.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_machine.Po
#	source='m_machine.c' object='libcoregrind_x86_freebsd_a-m_machine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_machine.obj `if test -f 'm_machine.c'; then $(CYGPATH_W) 'm_machine.c'; else $(CYGPATH_W) '$(srcdir)/m_machine.c'; fi`

libcoregrind_x86_freebsd_a-m_main.o: m_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_main.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_main.Tpo -c -o libcoregrind_x86_freebsd_a-m_main.o `test -f 'm_main.c' || echo '$(srcdir)/'`m_main.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_main.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_main.Po
#	source='m_main.c' object='libcoregrind_x86_freebsd_a-m_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_main.o `test -f 'm_main.c' || echo '$(srcdir)/'`m_main.c

libcoregrind_x86_freebsd_a-m_main.obj: m_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_main.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_main.Tpo -c -o libcoregrind_x86_freebsd_a-m_main.obj `if test -f 'm_main.c'; then $(CYGPATH_W) 'm_main.c'; else $(CYGPATH_W) '$(srcdir)/m_main.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_main.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_main.Po
#	source='m_main.c' object='libcoregrind_x86_freebsd_a-m_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_main.obj `if test -f 'm_main.c'; then $(CYGPATH_W) 'm_main.c'; else $(CYGPATH_W) '$(srcdir)/m_main.c'; fi`

libcoregrind_x86_freebsd_a-m_mallocfree.o: m_mallocfree.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_mallocfree.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_mallocfree.Tpo -c -o libcoregrind_x86_freebsd_a-m_mallocfree.o `test -f 'm_mallocfree.c' || echo '$(srcdir)/'`m_mallocfree.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_mallocfree.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_mallocfree.Po
#	source='m_mallocfree.c' object='libcoregrind_x86_freebsd_a-m_mallocfree.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_mallocfree.o `test -f 'm_mallocfree.c' || echo '$(srcdir)/'`m_mallocfree.c

libcoregrind_x86_freebsd_a-m_mallocfree.obj: m_mallocfree.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_mallocfree.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_mallocfree.Tpo -c -o libcoregrind_x86_freebsd_a-m_mallocfree.obj `if test -f 'm_mallocfree.c'; then $(CYGPATH_W) 'm_mallocfree.c'; else $(CYGPATH_W) '$(srcdir)/m_mallocfree.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_mallocfree.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_mallocfree.Po
#	source='m_mallocfree.c' object='libcoregrind_x86_freebsd_a-m_mallocfree.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_mallocfree.obj `if test -f 'm_mallocfree.c'; then $(CYGPATH_W) 'm_mallocfree.c'; else $(CYGPATH_W) '$(srcdir)/m_mallocfree.c'; fi`

libcoregrind_x86_freebsd_a-m_options.o: m_options.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_options.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_options.Tpo -c -o libcoregrind_x86_freebsd_a-m_options.o `test -f 'm_options.c' || echo '$(srcdir)/'`m_options.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_options.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_options.Po
#	source='m_options.c' object='libcoregrind_x86_freebsd_a-m_options.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_options.o `test -f 'm_options.c' || echo '$(srcdir)/'`m_options.c

libcoregrind_x86_freebsd_a-m_options.obj: m_options.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_options.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_options.Tpo -c -o libcoregrind_x86_freebsd_a-m_options.obj `if test -f 'm_options.c'; then $(CYGPATH_W) 'm_options.c'; else $(CYGPATH_W) '$(srcdir)/m_options.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_options.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_options.Po
#	source='m_options.c' object='libcoregrind_x86_freebsd_a-m_options.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_options.obj `if test -f 'm_options.c'; then $(CYGPATH_W) 'm_options.c'; else $(CYGPATH_W) '$(srcdir)/m_options.c'; fi`

libcoregrind_x86_freebsd_a-m_oset.o: m_oset.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_oset.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_oset.Tpo -c -o libcoregrind_x86_freebsd_a-m_oset.o `test -f 'm_oset.c' || echo '$(srcdir)/'`m_oset.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_oset.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_oset.Po
#	source='m_oset.c' object='libcoregrind_x86_freebsd_a-m_oset.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_oset.o `test -f 'm_oset.c' || echo '$(srcdir)/'`m_oset.c

libcoregrind_x86_freebsd_a-m_oset.obj: m_oset.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_oset.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_oset.Tpo -c -o libcoregrind_x86_freebsd_a-m_oset.obj `if test -f 'm_oset.c'; then $(CYGPATH_W) 'm_oset.c'; else $(CYGPATH_W) '$(srcdir)/m_oset.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_oset.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_oset.Po
#	source='m_oset.c' object='libcoregrind_x86_freebsd_a-m_oset.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_oset.obj `if test -f 'm_oset.c'; then $(CYGPATH_W) 'm_oset.c'; else $(CYGPATH_W) '$(srcdir)/m_oset.c'; fi`

libcoregrind_x86_freebsd_a-m_redir.o: m_redir.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_redir.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_redir.Tpo -c -o libcoregrind_x86_freebsd_a-m_redir.o `test -f 'm_redir.c' || echo '$(srcdir)/'`m_redir.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_redir.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_redir.Po
#	source='m_redir.c' object='libcoregrind_x86_freebsd_a-m_redir.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_redir.o `test -f 'm_redir.c' || echo '$(srcdir)/'`m_redir.c

libcoregrind_x86_freebsd_a-m_redir.obj: m_redir.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_redir.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_redir.Tpo -c -o libcoregrind_x86_freebsd_a-m_redir.obj `if test -f 'm_redir.c'; then $(CYGPATH_W) 'm_redir.c'; else $(CYGPATH_W) '$(srcdir)/m_redir.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_redir.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_redir.Po
#	source='m_redir.c' object='libcoregrind_x86_freebsd_a-m_redir.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_redir.obj `if test -f 'm_redir.c'; then $(CYGPATH_W) 'm_redir.c'; else $(CYGPATH_W) '$(srcdir)/m_redir.c'; fi`

libcoregrind_x86_freebsd_a-m_seqmatch.o: m_seqmatch.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_seqmatch.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_seqmatch.Tpo -c -o libcoregrind_x86_freebsd_a-m_seqmatch.o `test -f 'm_seqmatch.c' || echo '$(srcdir)/'`m_seqmatch.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_seqmatch.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_seqmatch.Po
#	source='m_seqmatch.c' object='libcoregrind_x86_freebsd_a-m_seqmatch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_seqmatch.o `test -f 'm_seqmatch.c' || echo '$(srcdir)/'`m_seqmatch.c

libcoregrind_x86_freebsd_a-m_seqmatch.obj: m_seqmatch.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_seqmatch.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_seqmatch.Tpo -c -o libcoregrind_x86_freebsd_a-m_seqmatch.obj `if test -f 'm_seqmatch.c'; then $(CYGPATH_W) 'm_seqmatch.c'; else $(CYGPATH_W) '$(srcdir)/m_seqmatch.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_seqmatch.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_seqmatch.Po
#	source='m_seqmatch.c' object='libcoregrind_x86_freebsd_a-m_seqmatch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_seqmatch.obj `if test -f 'm_seqmatch.c'; then $(CYGPATH_W) 'm_seqmatch.c'; else $(CYGPATH_W) '$(srcdir)/m_seqmatch.c'; fi`

libcoregrind_x86_freebsd_a-m_signals.o: m_signals.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_signals.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_signals.Tpo -c -o libcoregrind_x86_freebsd_a-m_signals.o `test -f 'm_signals.c' || echo '$(srcdir)/'`m_signals.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_signals.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_signals.Po
#	source='m_signals.c' object='libcoregrind_x86_freebsd_a-m_signals.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_signals.o `test -f 'm_signals.c' || echo '$(srcdir)/'`m_signals.c

libcoregrind_x86_freebsd_a-m_signals.obj: m_signals.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_signals.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_signals.Tpo -c -o libcoregrind_x86_freebsd_a-m_signals.obj `if test -f 'm_signals.c'; then $(CYGPATH_W) 'm_signals.c'; else $(CYGPATH_W) '$(srcdir)/m_signals.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_signals.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_signals.Po
#	source='m_signals.c' object='libcoregrind_x86_freebsd_a-m_signals.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_signals.obj `if test -f 'm_signals.c'; then $(CYGPATH_W) 'm_signals.c'; else $(CYGPATH_W) '$(srcdir)/m_signals.c'; fi`

libcoregrind_x86_freebsd_a-m_sparsewa.o: m_sparsewa.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_sparsewa.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_sparsewa.Tpo -c -o libcoregrind_x86_freebsd_a-m_sparsewa.o `test -f 'm_sparsewa.c' || echo '$(srcdir)/'`m_sparsewa.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_sparsewa.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_sparsewa.Po
#	source='m_sparsewa.c' object='libcoregrind_x86_freebsd_a-m_sparsewa.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_sparsewa.o `test -f 'm_sparsewa.c' || echo '$(srcdir)/'`m_sparsewa.c

libcoregrind_x86_freebsd_a-m_sparsewa.obj: m_sparsewa.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_sparsewa.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_sparsewa.Tpo -c -o libcoregrind_x86_freebsd_a-m_sparsewa.obj `if test -f 'm_sparsewa.c'; then $(CYGPATH_W) 'm_sparsewa.c'; else $(CYGPATH_W) '$(srcdir)/m_sparsewa.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_sparsewa.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_sparsewa.Po
#	source='m_sparsewa.c' object='libcoregrind_x86_freebsd_a-m_sparsewa.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_sparsewa.obj `if test -f 'm_sparsewa.c'; then $(CYGPATH_W) 'm_sparsewa.c'; else $(CYGPATH_W) '$(srcdir)/m_sparsewa.c'; fi`

libcoregrind_x86_freebsd_a-m_stacks.o: m_stacks.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_stacks.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_stacks.Tpo -c -o libcoregrind_x86_freebsd_a-m_stacks.o `test -f 'm_stacks.c' || echo '$(srcdir)/'`m_stacks.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_stacks.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_stacks.Po
#	source='m_stacks.c' object='libcoregrind_x86_freebsd_a-m_stacks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_stacks.o `test -f 'm_stacks.c' || echo '$(srcdir)/'`m_stacks.c

libcoregrind_x86_freebsd_a-m_stacks.obj: m_stacks.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_stacks.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_stacks.Tpo -c -o libcoregrind_x86_freebsd_a-m_stacks.obj `if test -f 'm_stacks.c'; then $(CYGPATH_W) 'm_stacks.c'; else $(CYGPATH_W) '$(srcdir)/m_stacks.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_stacks.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_stacks.Po
#	source='m_stacks.c' object='libcoregrind_x86_freebsd_a-m_stacks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_stacks.obj `if test -f 'm_stacks.c'; then $(CYGPATH_W) 'm_stacks.c'; else $(CYGPATH_W) '$(srcdir)/m_stacks.c'; fi`

libcoregrind_x86_freebsd_a-m_stacktrace.o: m_stacktrace.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_stacktrace.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_stacktrace.Tpo -c -o libcoregrind_x86_freebsd_a-m_stacktrace.o `test -f 'm_stacktrace.c' || echo '$(srcdir)/'`m_stacktrace.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_stacktrace.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_stacktrace.Po
#	source='m_stacktrace.c' object='libcoregrind_x86_freebsd_a-m_stacktrace.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_stacktrace.o `test -f 'm_stacktrace.c' || echo '$(srcdir)/'`m_stacktrace.c

libcoregrind_x86_freebsd_a-m_stacktrace.obj: m_stacktrace.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_stacktrace.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_stacktrace.Tpo -c -o libcoregrind_x86_freebsd_a-m_stacktrace.obj `if test -f 'm_stacktrace.c'; then $(CYGPATH_W) 'm_stacktrace.c'; else $(CYGPATH_W) '$(srcdir)/m_stacktrace.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_stacktrace.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_stacktrace.Po
#	source='m_stacktrace.c' object='libcoregrind_x86_freebsd_a-m_stacktrace.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_stacktrace.obj `if test -f 'm_stacktrace.c'; then $(CYGPATH_W) 'm_stacktrace.c'; else $(CYGPATH_W) '$(srcdir)/m_stacktrace.c'; fi`

libcoregrind_x86_freebsd_a-m_syscall.o: m_syscall.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_syscall.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_syscall.Tpo -c -o libcoregrind_x86_freebsd_a-m_syscall.o `test -f 'm_syscall.c' || echo '$(srcdir)/'`m_syscall.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_syscall.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_syscall.Po
#	source='m_syscall.c' object='libcoregrind_x86_freebsd_a-m_syscall.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_syscall.o `test -f 'm_syscall.c' || echo '$(srcdir)/'`m_syscall.c

libcoregrind_x86_freebsd_a-m_syscall.obj: m_syscall.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_syscall.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_syscall.Tpo -c -o libcoregrind_x86_freebsd_a-m_syscall.obj `if test -f 'm_syscall.c'; then $(CYGPATH_W) 'm_syscall.c'; else $(CYGPATH_W) '$(srcdir)/m_syscall.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_syscall.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_syscall.Po
#	source='m_syscall.c' object='libcoregrind_x86_freebsd_a-m_syscall.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_syscall.obj `if test -f 'm_syscall.c'; then $(CYGPATH_W) 'm_syscall.c'; else $(CYGPATH_W) '$(srcdir)/m_syscall.c'; fi`

libcoregrind_x86_freebsd_a-m_threadstate.o: m_threadstate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_threadstate.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_threadstate.Tpo -c -o libcoregrind_x86_freebsd_a-m_threadstate.o `test -f 'm_threadstate.c' || echo '$(srcdir)/'`m_threadstate.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_threadstate.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_threadstate.Po
#	source='m_threadstate.c' object='libcoregrind_x86_freebsd_a-m_threadstate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_threadstate.o `test -f 'm_threadstate.c' || echo '$(srcdir)/'`m_threadstate.c

libcoregrind_x86_freebsd_a-m_threadstate.obj: m_threadstate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_threadstate.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_threadstate.Tpo -c -o libcoregrind_x86_freebsd_a-m_threadstate.obj `if test -f 'm_threadstate.c'; then $(CYGPATH_W) 'm_threadstate.c'; else $(CYGPATH_W) '$(srcdir)/m_threadstate.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_threadstate.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_threadstate.Po
#	source='m_threadstate.c' object='libcoregrind_x86_freebsd_a-m_threadstate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_threadstate.obj `if test -f 'm_threadstate.c'; then $(CYGPATH_W) 'm_threadstate.c'; else $(CYGPATH_W) '$(srcdir)/m_threadstate.c'; fi`

libcoregrind_x86_freebsd_a-m_tooliface.o: m_tooliface.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_tooliface.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_tooliface.Tpo -c -o libcoregrind_x86_freebsd_a-m_tooliface.o `test -f 'm_tooliface.c' || echo '$(srcdir)/'`m_tooliface.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_tooliface.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_tooliface.Po
#	source='m_tooliface.c' object='libcoregrind_x86_freebsd_a-m_tooliface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_tooliface.o `test -f 'm_tooliface.c' || echo '$(srcdir)/'`m_tooliface.c

libcoregrind_x86_freebsd_a-m_tooliface.obj: m_tooliface.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_tooliface.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_tooliface.Tpo -c -o libcoregrind_x86_freebsd_a-m_tooliface.obj `if test -f 'm_tooliface.c'; then $(CYGPATH_W) 'm_tooliface.c'; else $(CYGPATH_W) '$(srcdir)/m_tooliface.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_tooliface.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_tooliface.Po
#	source='m_tooliface.c' object='libcoregrind_x86_freebsd_a-m_tooliface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_tooliface.obj `if test -f 'm_tooliface.c'; then $(CYGPATH_W) 'm_tooliface.c'; else $(CYGPATH_W) '$(srcdir)/m_tooliface.c'; fi`

libcoregrind_x86_freebsd_a-m_translate.o: m_translate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_translate.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_translate.Tpo -c -o libcoregrind_x86_freebsd_a-m_translate.o `test -f 'm_translate.c' || echo '$(srcdir)/'`m_translate.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_translate.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_translate.Po
#	source='m_translate.c' object='libcoregrind_x86_freebsd_a-m_translate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_translate.o `test -f 'm_translate.c' || echo '$(srcdir)/'`m_translate.c

libcoregrind_x86_freebsd_a-m_translate.obj: m_translate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_translate.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_translate.Tpo -c -o libcoregrind_x86_freebsd_a-m_translate.obj `if test -f 'm_translate.c'; then $(CYGPATH_W) 'm_translate.c'; else $(CYGPATH_W) '$(srcdir)/m_translate.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_translate.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_translate.Po
#	source='m_translate.c' object='libcoregrind_x86_freebsd_a-m_translate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_translate.obj `if test -f 'm_translate.c'; then $(CYGPATH_W) 'm_translate.c'; else $(CYGPATH_W) '$(srcdir)/m_translate.c'; fi`

libcoregrind_x86_freebsd_a-m_transtab.o: m_transtab.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_transtab.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_transtab.Tpo -c -o libcoregrind_x86_freebsd_a-m_transtab.o `test -f 'm_transtab.c' || echo '$(srcdir)/'`m_transtab.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_transtab.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_transtab.Po
#	source='m_transtab.c' object='libcoregrind_x86_freebsd_a-m_transtab.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_transtab.o `test -f 'm_transtab.c' || echo '$(srcdir)/'`m_transtab.c

libcoregrind_x86_freebsd_a-m_transtab.obj: m_transtab.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_transtab.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_transtab.Tpo -c -o libcoregrind_x86_freebsd_a-m_transtab.obj `if test -f 'm_transtab.c'; then $(CYGPATH_W) 'm_transtab.c'; else $(CYGPATH_W) '$(srcdir)/m_transtab.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_transtab.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_transtab.Po
#	source='m_transtab.c' object='libcoregrind_x86_freebsd_a-m_transtab.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_transtab.obj `if test -f 'm_transtab.c'; then $(CYGPATH_W) 'm_transtab.c'; else $(CYGPATH_W) '$(srcdir)/m_transtab.c'; fi`

libcoregrind_x86_freebsd_a-m_vki.o: m_vki.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_vki.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_vki.Tpo -c -o libcoregrind_x86_freebsd_a-m_vki.o `test -f 'm_vki.c' || echo '$(srcdir)/'`m_vki.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_vki.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_vki.Po
#	source='m_vki.c' object='libcoregrind_x86_freebsd_a-m_vki.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_vki.o `test -f 'm_vki.c' || echo '$(srcdir)/'`m_vki.c

libcoregrind_x86_freebsd_a-m_vki.obj: m_vki.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_vki.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_vki.Tpo -c -o libcoregrind_x86_freebsd_a-m_vki.obj `if test -f 'm_vki.c'; then $(CYGPATH_W) 'm_vki.c'; else $(CYGPATH_W) '$(srcdir)/m_vki.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_vki.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_vki.Po
#	source='m_vki.c' object='libcoregrind_x86_freebsd_a-m_vki.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_vki.obj `if test -f 'm_vki.c'; then $(CYGPATH_W) 'm_vki.c'; else $(CYGPATH_W) '$(srcdir)/m_vki.c'; fi`

libcoregrind_x86_freebsd_a-m_vkiscnums.o: m_vkiscnums.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_vkiscnums.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_vkiscnums.Tpo -c -o libcoregrind_x86_freebsd_a-m_vkiscnums.o `test -f 'm_vkiscnums.c' || echo '$(srcdir)/'`m_vkiscnums.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_vkiscnums.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_vkiscnums.Po
#	source='m_vkiscnums.c' object='libcoregrind_x86_freebsd_a-m_vkiscnums.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_vkiscnums.o `test -f 'm_vkiscnums.c' || echo '$(srcdir)/'`m_vkiscnums.c

libcoregrind_x86_freebsd_a-m_vkiscnums.obj: m_vkiscnums.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_vkiscnums.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_vkiscnums.Tpo -c -o libcoregrind_x86_freebsd_a-m_vkiscnums.obj `if test -f 'm_vkiscnums.c'; then $(CYGPATH_W) 'm_vkiscnums.c'; else $(CYGPATH_W) '$(srcdir)/m_vkiscnums.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_vkiscnums.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_vkiscnums.Po
#	source='m_vkiscnums.c' object='libcoregrind_x86_freebsd_a-m_vkiscnums.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_vkiscnums.obj `if test -f 'm_vkiscnums.c'; then $(CYGPATH_W) 'm_vkiscnums.c'; else $(CYGPATH_W) '$(srcdir)/m_vkiscnums.c'; fi`

libcoregrind_x86_freebsd_a-m_wordfm.o: m_wordfm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_wordfm.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_wordfm.Tpo -c -o libcoregrind_x86_freebsd_a-m_wordfm.o `test -f 'm_wordfm.c' || echo '$(srcdir)/'`m_wordfm.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_wordfm.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_wordfm.Po
#	source='m_wordfm.c' object='libcoregrind_x86_freebsd_a-m_wordfm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_wordfm.o `test -f 'm_wordfm.c' || echo '$(srcdir)/'`m_wordfm.c

libcoregrind_x86_freebsd_a-m_wordfm.obj: m_wordfm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_wordfm.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_wordfm.Tpo -c -o libcoregrind_x86_freebsd_a-m_wordfm.obj `if test -f 'm_wordfm.c'; then $(CYGPATH_W) 'm_wordfm.c'; else $(CYGPATH_W) '$(srcdir)/m_wordfm.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_wordfm.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_wordfm.Po
#	source='m_wordfm.c' object='libcoregrind_x86_freebsd_a-m_wordfm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_wordfm.obj `if test -f 'm_wordfm.c'; then $(CYGPATH_W) 'm_wordfm.c'; else $(CYGPATH_W) '$(srcdir)/m_wordfm.c'; fi`

libcoregrind_x86_freebsd_a-m_xarray.o: m_xarray.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_xarray.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_xarray.Tpo -c -o libcoregrind_x86_freebsd_a-m_xarray.o `test -f 'm_xarray.c' || echo '$(srcdir)/'`m_xarray.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_xarray.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_xarray.Po
#	source='m_xarray.c' object='libcoregrind_x86_freebsd_a-m_xarray.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_xarray.o `test -f 'm_xarray.c' || echo '$(srcdir)/'`m_xarray.c

libcoregrind_x86_freebsd_a-m_xarray.obj: m_xarray.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_xarray.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_xarray.Tpo -c -o libcoregrind_x86_freebsd_a-m_xarray.obj `if test -f 'm_xarray.c'; then $(CYGPATH_W) 'm_xarray.c'; else $(CYGPATH_W) '$(srcdir)/m_xarray.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_xarray.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_xarray.Po
#	source='m_xarray.c' object='libcoregrind_x86_freebsd_a-m_xarray.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_xarray.obj `if test -f 'm_xarray.c'; then $(CYGPATH_W) 'm_xarray.c'; else $(CYGPATH_W) '$(srcdir)/m_xarray.c'; fi`

libcoregrind_x86_freebsd_a-m_aspacehl.o: m_aspacehl.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_aspacehl.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_aspacehl.Tpo -c -o libcoregrind_x86_freebsd_a-m_aspacehl.o `test -f 'm_aspacehl.c' || echo '$(srcdir)/'`m_aspacehl.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_aspacehl.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_aspacehl.Po
#	source='m_aspacehl.c' object='libcoregrind_x86_freebsd_a-m_aspacehl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_aspacehl.o `test -f 'm_aspacehl.c' || echo '$(srcdir)/'`m_aspacehl.c

libcoregrind_x86_freebsd_a-m_aspacehl.obj: m_aspacehl.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_aspacehl.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_aspacehl.Tpo -c -o libcoregrind_x86_freebsd_a-m_aspacehl.obj `if test -f 'm_aspacehl.c'; then $(CYGPATH_W) 'm_aspacehl.c'; else $(CYGPATH_W) '$(srcdir)/m_aspacehl.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_aspacehl.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_aspacehl.Po
#	source='m_aspacehl.c' object='libcoregrind_x86_freebsd_a-m_aspacehl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_aspacehl.obj `if test -f 'm_aspacehl.c'; then $(CYGPATH_W) 'm_aspacehl.c'; else $(CYGPATH_W) '$(srcdir)/m_aspacehl.c'; fi`

libcoregrind_x86_freebsd_a-aspacemgr-common.o: m_aspacemgr/aspacemgr-common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-aspacemgr-common.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-aspacemgr-common.Tpo -c -o libcoregrind_x86_freebsd_a-aspacemgr-common.o `test -f 'm_aspacemgr/aspacemgr-common.c' || echo '$(srcdir)/'`m_aspacemgr/aspacemgr-common.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-aspacemgr-common.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-aspacemgr-common.Po
#	source='m_aspacemgr/aspacemgr-common.c' object='libcoregrind_x86_freebsd_a-aspacemgr-common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-aspacemgr-common.o `test -f 'm_aspacemgr/aspacemgr-common.c' || echo '$(srcdir)/'`m_aspacemgr/aspacemgr-common.c

libcoregrind_x86_freebsd_a-aspacemgr-common.obj: m_aspacemgr/aspacemgr-common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-aspacemgr-common.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-aspacemgr-common.Tpo -c -o libcoregrind_x86_freebsd_a-aspacemgr-common.obj `if test -f 'm_aspacemgr/aspacemgr-common.c'; then $(CYGPATH_W) 'm_aspacemgr/aspacemgr-common.c'; else $(CYGPATH_W) '$(srcdir)/m_aspacemgr/aspacemgr-common.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-aspacemgr-common.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-aspacemgr-common.Po
#	source='m_aspacemgr/aspacemgr-common.c' object='libcoregrind_x86_freebsd_a-aspacemgr-common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-aspacemgr-common.obj `if test -f 'm_aspacemgr/aspacemgr-common.c'; then $(CYGPATH_W) 'm_aspacemgr/aspacemgr-common.c'; else $(CYGPATH_W) '$(srcdir)/m_aspacemgr/aspacemgr-common.c'; fi`

libcoregrind_x86_freebsd_a-aspacemgr-linux.o: m_aspacemgr/aspacemgr-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-aspacemgr-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-aspacemgr-linux.Tpo -c -o libcoregrind_x86_freebsd_a-aspacemgr-linux.o `test -f 'm_aspacemgr/aspacemgr-linux.c' || echo '$(srcdir)/'`m_aspacemgr/aspacemgr-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-aspacemgr-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-aspacemgr-linux.Po
#	source='m_aspacemgr/aspacemgr-linux.c' object='libcoregrind_x86_freebsd_a-aspacemgr-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-aspacemgr-linux.o `test -f 'm_aspacemgr/aspacemgr-linux.c' || echo '$(srcdir)/'`m_aspacemgr/aspacemgr-linux.c

libcoregrind_x86_freebsd_a-aspacemgr-linux.obj: m_aspacemgr/aspacemgr-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-aspacemgr-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-aspacemgr-linux.Tpo -c -o libcoregrind_x86_freebsd_a-aspacemgr-linux.obj `if test -f 'm_aspacemgr/aspacemgr-linux.c'; then $(CYGPATH_W) 'm_aspacemgr/aspacemgr-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_aspacemgr/aspacemgr-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-aspacemgr-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-aspacemgr-linux.Po
#	source='m_aspacemgr/aspacemgr-linux.c' object='libcoregrind_x86_freebsd_a-aspacemgr-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-aspacemgr-linux.obj `if test -f 'm_aspacemgr/aspacemgr-linux.c'; then $(CYGPATH_W) 'm_aspacemgr/aspacemgr-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_aspacemgr/aspacemgr-linux.c'; fi`

libcoregrind_x86_freebsd_a-coredump-elf.o: m_coredump/coredump-elf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-coredump-elf.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-coredump-elf.Tpo -c -o libcoregrind_x86_freebsd_a-coredump-elf.o `test -f 'm_coredump/coredump-elf.c' || echo '$(srcdir)/'`m_coredump/coredump-elf.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-coredump-elf.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-coredump-elf.Po
#	source='m_coredump/coredump-elf.c' object='libcoregrind_x86_freebsd_a-coredump-elf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-coredump-elf.o `test -f 'm_coredump/coredump-elf.c' || echo '$(srcdir)/'`m_coredump/coredump-elf.c

libcoregrind_x86_freebsd_a-coredump-elf.obj: m_coredump/coredump-elf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-coredump-elf.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-coredump-elf.Tpo -c -o libcoregrind_x86_freebsd_a-coredump-elf.obj `if test -f 'm_coredump/coredump-elf.c'; then $(CYGPATH_W) 'm_coredump/coredump-elf.c'; else $(CYGPATH_W) '$(srcdir)/m_coredump/coredump-elf.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-coredump-elf.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-coredump-elf.Po
#	source='m_coredump/coredump-elf.c' object='libcoregrind_x86_freebsd_a-coredump-elf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-coredump-elf.obj `if test -f 'm_coredump/coredump-elf.c'; then $(CYGPATH_W) 'm_coredump/coredump-elf.c'; else $(CYGPATH_W) '$(srcdir)/m_coredump/coredump-elf.c'; fi`

libcoregrind_x86_freebsd_a-coredump-macho.o: m_coredump/coredump-macho.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-coredump-macho.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-coredump-macho.Tpo -c -o libcoregrind_x86_freebsd_a-coredump-macho.o `test -f 'm_coredump/coredump-macho.c' || echo '$(srcdir)/'`m_coredump/coredump-macho.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-coredump-macho.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-coredump-macho.Po
#	source='m_coredump/coredump-macho.c' object='libcoregrind_x86_freebsd_a-coredump-macho.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-coredump-macho.o `test -f 'm_coredump/coredump-macho.c' || echo '$(srcdir)/'`m_coredump/coredump-macho.c

libcoregrind_x86_freebsd_a-coredump-macho.obj: m_coredump/coredump-macho.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-coredump-macho.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-coredump-macho.Tpo -c -o libcoregrind_x86_freebsd_a-coredump-macho.obj `if test -f 'm_coredump/coredump-macho.c'; then $(CYGPATH_W) 'm_coredump/coredump-macho.c'; else $(CYGPATH_W) '$(srcdir)/m_coredump/coredump-macho.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-coredump-macho.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-coredump-macho.Po
#	source='m_coredump/coredump-macho.c' object='libcoregrind_x86_freebsd_a-coredump-macho.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-coredump-macho.obj `if test -f 'm_coredump/coredump-macho.c'; then $(CYGPATH_W) 'm_coredump/coredump-macho.c'; else $(CYGPATH_W) '$(srcdir)/m_coredump/coredump-macho.c'; fi`

libcoregrind_x86_freebsd_a-misc.o: m_debuginfo/misc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-misc.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-misc.Tpo -c -o libcoregrind_x86_freebsd_a-misc.o `test -f 'm_debuginfo/misc.c' || echo '$(srcdir)/'`m_debuginfo/misc.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-misc.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-misc.Po
#	source='m_debuginfo/misc.c' object='libcoregrind_x86_freebsd_a-misc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-misc.o `test -f 'm_debuginfo/misc.c' || echo '$(srcdir)/'`m_debuginfo/misc.c

libcoregrind_x86_freebsd_a-misc.obj: m_debuginfo/misc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-misc.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-misc.Tpo -c -o libcoregrind_x86_freebsd_a-misc.obj `if test -f 'm_debuginfo/misc.c'; then $(CYGPATH_W) 'm_debuginfo/misc.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/misc.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-misc.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-misc.Po
#	source='m_debuginfo/misc.c' object='libcoregrind_x86_freebsd_a-misc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-misc.obj `if test -f 'm_debuginfo/misc.c'; then $(CYGPATH_W) 'm_debuginfo/misc.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/misc.c'; fi`

libcoregrind_x86_freebsd_a-d3basics.o: m_debuginfo/d3basics.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-d3basics.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-d3basics.Tpo -c -o libcoregrind_x86_freebsd_a-d3basics.o `test -f 'm_debuginfo/d3basics.c' || echo '$(srcdir)/'`m_debuginfo/d3basics.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-d3basics.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-d3basics.Po
#	source='m_debuginfo/d3basics.c' object='libcoregrind_x86_freebsd_a-d3basics.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-d3basics.o `test -f 'm_debuginfo/d3basics.c' || echo '$(srcdir)/'`m_debuginfo/d3basics.c

libcoregrind_x86_freebsd_a-d3basics.obj: m_debuginfo/d3basics.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-d3basics.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-d3basics.Tpo -c -o libcoregrind_x86_freebsd_a-d3basics.obj `if test -f 'm_debuginfo/d3basics.c'; then $(CYGPATH_W) 'm_debuginfo/d3basics.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/d3basics.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-d3basics.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-d3basics.Po
#	source='m_debuginfo/d3basics.c' object='libcoregrind_x86_freebsd_a-d3basics.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-d3basics.obj `if test -f 'm_debuginfo/d3basics.c'; then $(CYGPATH_W) 'm_debuginfo/d3basics.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/d3basics.c'; fi`

libcoregrind_x86_freebsd_a-debuginfo.o: m_debuginfo/debuginfo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-debuginfo.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-debuginfo.Tpo -c -o libcoregrind_x86_freebsd_a-debuginfo.o `test -f 'm_debuginfo/debuginfo.c' || echo '$(srcdir)/'`m_debuginfo/debuginfo.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-debuginfo.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-debuginfo.Po
#	source='m_debuginfo/debuginfo.c' object='libcoregrind_x86_freebsd_a-debuginfo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-debuginfo.o `test -f 'm_debuginfo/debuginfo.c' || echo '$(srcdir)/'`m_debuginfo/debuginfo.c

libcoregrind_x86_freebsd_a-debuginfo.obj: m_debuginfo/debuginfo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-debuginfo.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-debuginfo.Tpo -c -o libcoregrind_x86_freebsd_a-debuginfo.obj `if test -f 'm_debuginfo/debuginfo.c'; then $(CYGPATH_W) 'm_debuginfo/debuginfo.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/debuginfo.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-debuginfo.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-debuginfo.Po
#	source='m_debuginfo/debuginfo.c' object='libcoregrind_x86_freebsd_a-debuginfo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-debuginfo.obj `if test -f 'm_debuginfo/debuginfo.c'; then $(CYGPATH_W) 'm_debuginfo/debuginfo.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/debuginfo.c'; fi`

libcoregrind_x86_freebsd_a-readdwarf.o: m_debuginfo/readdwarf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-readdwarf.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-readdwarf.Tpo -c -o libcoregrind_x86_freebsd_a-readdwarf.o `test -f 'm_debuginfo/readdwarf.c' || echo '$(srcdir)/'`m_debuginfo/readdwarf.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-readdwarf.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-readdwarf.Po
#	source='m_debuginfo/readdwarf.c' object='libcoregrind_x86_freebsd_a-readdwarf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-readdwarf.o `test -f 'm_debuginfo/readdwarf.c' || echo '$(srcdir)/'`m_debuginfo/readdwarf.c

libcoregrind_x86_freebsd_a-readdwarf.obj: m_debuginfo/readdwarf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-readdwarf.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-readdwarf.Tpo -c -o libcoregrind_x86_freebsd_a-readdwarf.obj `if test -f 'm_debuginfo/readdwarf.c'; then $(CYGPATH_W) 'm_debuginfo/readdwarf.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/readdwarf.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-readdwarf.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-readdwarf.Po
#	source='m_debuginfo/readdwarf.c' object='libcoregrind_x86_freebsd_a-readdwarf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-readdwarf.obj `if test -f 'm_debuginfo/readdwarf.c'; then $(CYGPATH_W) 'm_debuginfo/readdwarf.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/readdwarf.c'; fi`

libcoregrind_x86_freebsd_a-readdwarf3.o: m_debuginfo/readdwarf3.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-readdwarf3.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-readdwarf3.Tpo -c -o libcoregrind_x86_freebsd_a-readdwarf3.o `test -f 'm_debuginfo/readdwarf3.c' || echo '$(srcdir)/'`m_debuginfo/readdwarf3.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-readdwarf3.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-readdwarf3.Po
#	source='m_debuginfo/readdwarf3.c' object='libcoregrind_x86_freebsd_a-readdwarf3.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-readdwarf3.o `test -f 'm_debuginfo/readdwarf3.c' || echo '$(srcdir)/'`m_debuginfo/readdwarf3.c

libcoregrind_x86_freebsd_a-readdwarf3.obj: m_debuginfo/readdwarf3.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-readdwarf3.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-readdwarf3.Tpo -c -o libcoregrind_x86_freebsd_a-readdwarf3.obj `if test -f 'm_debuginfo/readdwarf3.c'; then $(CYGPATH_W) 'm_debuginfo/readdwarf3.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/readdwarf3.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-readdwarf3.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-readdwarf3.Po
#	source='m_debuginfo/readdwarf3.c' object='libcoregrind_x86_freebsd_a-readdwarf3.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-readdwarf3.obj `if test -f 'm_debuginfo/readdwarf3.c'; then $(CYGPATH_W) 'm_debuginfo/readdwarf3.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/readdwarf3.c'; fi`

libcoregrind_x86_freebsd_a-readelf.o: m_debuginfo/readelf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-readelf.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-readelf.Tpo -c -o libcoregrind_x86_freebsd_a-readelf.o `test -f 'm_debuginfo/readelf.c' || echo '$(srcdir)/'`m_debuginfo/readelf.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-readelf.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-readelf.Po
#	source='m_debuginfo/readelf.c' object='libcoregrind_x86_freebsd_a-readelf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-readelf.o `test -f 'm_debuginfo/readelf.c' || echo '$(srcdir)/'`m_debuginfo/readelf.c

libcoregrind_x86_freebsd_a-readelf.obj: m_debuginfo/readelf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-readelf.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-readelf.Tpo -c -o libcoregrind_x86_freebsd_a-readelf.obj `if test -f 'm_debuginfo/readelf.c'; then $(CYGPATH_W) 'm_debuginfo/readelf.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/readelf.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-readelf.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-readelf.Po
#	source='m_debuginfo/readelf.c' object='libcoregrind_x86_freebsd_a-readelf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-readelf.obj `if test -f 'm_debuginfo/readelf.c'; then $(CYGPATH_W) 'm_debuginfo/readelf.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/readelf.c'; fi`

libcoregrind_x86_freebsd_a-readmacho.o: m_debuginfo/readmacho.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-readmacho.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-readmacho.Tpo -c -o libcoregrind_x86_freebsd_a-readmacho.o `test -f 'm_debuginfo/readmacho.c' || echo '$(srcdir)/'`m_debuginfo/readmacho.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-readmacho.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-readmacho.Po
#	source='m_debuginfo/readmacho.c' object='libcoregrind_x86_freebsd_a-readmacho.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-readmacho.o `test -f 'm_debuginfo/readmacho.c' || echo '$(srcdir)/'`m_debuginfo/readmacho.c

libcoregrind_x86_freebsd_a-readmacho.obj: m_debuginfo/readmacho.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-readmacho.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-readmacho.Tpo -c -o libcoregrind_x86_freebsd_a-readmacho.obj `if test -f 'm_debuginfo/readmacho.c'; then $(CYGPATH_W) 'm_debuginfo/readmacho.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/readmacho.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-readmacho.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-readmacho.Po
#	source='m_debuginfo/readmacho.c' object='libcoregrind_x86_freebsd_a-readmacho.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-readmacho.obj `if test -f 'm_debuginfo/readmacho.c'; then $(CYGPATH_W) 'm_debuginfo/readmacho.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/readmacho.c'; fi`

libcoregrind_x86_freebsd_a-readpdb.o: m_debuginfo/readpdb.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-readpdb.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-readpdb.Tpo -c -o libcoregrind_x86_freebsd_a-readpdb.o `test -f 'm_debuginfo/readpdb.c' || echo '$(srcdir)/'`m_debuginfo/readpdb.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-readpdb.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-readpdb.Po
#	source='m_debuginfo/readpdb.c' object='libcoregrind_x86_freebsd_a-readpdb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-readpdb.o `test -f 'm_debuginfo/readpdb.c' || echo '$(srcdir)/'`m_debuginfo/readpdb.c

libcoregrind_x86_freebsd_a-readpdb.obj: m_debuginfo/readpdb.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-readpdb.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-readpdb.Tpo -c -o libcoregrind_x86_freebsd_a-readpdb.obj `if test -f 'm_debuginfo/readpdb.c'; then $(CYGPATH_W) 'm_debuginfo/readpdb.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/readpdb.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-readpdb.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-readpdb.Po
#	source='m_debuginfo/readpdb.c' object='libcoregrind_x86_freebsd_a-readpdb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-readpdb.obj `if test -f 'm_debuginfo/readpdb.c'; then $(CYGPATH_W) 'm_debuginfo/readpdb.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/readpdb.c'; fi`

libcoregrind_x86_freebsd_a-readstabs.o: m_debuginfo/readstabs.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-readstabs.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-readstabs.Tpo -c -o libcoregrind_x86_freebsd_a-readstabs.o `test -f 'm_debuginfo/readstabs.c' || echo '$(srcdir)/'`m_debuginfo/readstabs.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-readstabs.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-readstabs.Po
#	source='m_debuginfo/readstabs.c' object='libcoregrind_x86_freebsd_a-readstabs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-readstabs.o `test -f 'm_debuginfo/readstabs.c' || echo '$(srcdir)/'`m_debuginfo/readstabs.c

libcoregrind_x86_freebsd_a-readstabs.obj: m_debuginfo/readstabs.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-readstabs.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-readstabs.Tpo -c -o libcoregrind_x86_freebsd_a-readstabs.obj `if test -f 'm_debuginfo/readstabs.c'; then $(CYGPATH_W) 'm_debuginfo/readstabs.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/readstabs.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-readstabs.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-readstabs.Po
#	source='m_debuginfo/readstabs.c' object='libcoregrind_x86_freebsd_a-readstabs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-readstabs.obj `if test -f 'm_debuginfo/readstabs.c'; then $(CYGPATH_W) 'm_debuginfo/readstabs.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/readstabs.c'; fi`

libcoregrind_x86_freebsd_a-storage.o: m_debuginfo/storage.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-storage.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-storage.Tpo -c -o libcoregrind_x86_freebsd_a-storage.o `test -f 'm_debuginfo/storage.c' || echo '$(srcdir)/'`m_debuginfo/storage.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-storage.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-storage.Po
#	source='m_debuginfo/storage.c' object='libcoregrind_x86_freebsd_a-storage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-storage.o `test -f 'm_debuginfo/storage.c' || echo '$(srcdir)/'`m_debuginfo/storage.c

libcoregrind_x86_freebsd_a-storage.obj: m_debuginfo/storage.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-storage.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-storage.Tpo -c -o libcoregrind_x86_freebsd_a-storage.obj `if test -f 'm_debuginfo/storage.c'; then $(CYGPATH_W) 'm_debuginfo/storage.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/storage.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-storage.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-storage.Po
#	source='m_debuginfo/storage.c' object='libcoregrind_x86_freebsd_a-storage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-storage.obj `if test -f 'm_debuginfo/storage.c'; then $(CYGPATH_W) 'm_debuginfo/storage.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/storage.c'; fi`

libcoregrind_x86_freebsd_a-tytypes.o: m_debuginfo/tytypes.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-tytypes.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-tytypes.Tpo -c -o libcoregrind_x86_freebsd_a-tytypes.o `test -f 'm_debuginfo/tytypes.c' || echo '$(srcdir)/'`m_debuginfo/tytypes.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-tytypes.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-tytypes.Po
#	source='m_debuginfo/tytypes.c' object='libcoregrind_x86_freebsd_a-tytypes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-tytypes.o `test -f 'm_debuginfo/tytypes.c' || echo '$(srcdir)/'`m_debuginfo/tytypes.c

libcoregrind_x86_freebsd_a-tytypes.obj: m_debuginfo/tytypes.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-tytypes.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-tytypes.Tpo -c -o libcoregrind_x86_freebsd_a-tytypes.obj `if test -f 'm_debuginfo/tytypes.c'; then $(CYGPATH_W) 'm_debuginfo/tytypes.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/tytypes.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-tytypes.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-tytypes.Po
#	source='m_debuginfo/tytypes.c' object='libcoregrind_x86_freebsd_a-tytypes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-tytypes.obj `if test -f 'm_debuginfo/tytypes.c'; then $(CYGPATH_W) 'm_debuginfo/tytypes.c'; else $(CYGPATH_W) '$(srcdir)/m_debuginfo/tytypes.c'; fi`

libcoregrind_x86_freebsd_a-cp-demangle.o: m_demangle/cp-demangle.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-cp-demangle.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-cp-demangle.Tpo -c -o libcoregrind_x86_freebsd_a-cp-demangle.o `test -f 'm_demangle/cp-demangle.c' || echo '$(srcdir)/'`m_demangle/cp-demangle.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-cp-demangle.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-cp-demangle.Po
#	source='m_demangle/cp-demangle.c' object='libcoregrind_x86_freebsd_a-cp-demangle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-cp-demangle.o `test -f 'm_demangle/cp-demangle.c' || echo '$(srcdir)/'`m_demangle/cp-demangle.c

libcoregrind_x86_freebsd_a-cp-demangle.obj: m_demangle/cp-demangle.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-cp-demangle.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-cp-demangle.Tpo -c -o libcoregrind_x86_freebsd_a-cp-demangle.obj `if test -f 'm_demangle/cp-demangle.c'; then $(CYGPATH_W) 'm_demangle/cp-demangle.c'; else $(CYGPATH_W) '$(srcdir)/m_demangle/cp-demangle.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-cp-demangle.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-cp-demangle.Po
#	source='m_demangle/cp-demangle.c' object='libcoregrind_x86_freebsd_a-cp-demangle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-cp-demangle.obj `if test -f 'm_demangle/cp-demangle.c'; then $(CYGPATH_W) 'm_demangle/cp-demangle.c'; else $(CYGPATH_W) '$(srcdir)/m_demangle/cp-demangle.c'; fi`

libcoregrind_x86_freebsd_a-cplus-dem.o: m_demangle/cplus-dem.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-cplus-dem.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-cplus-dem.Tpo -c -o libcoregrind_x86_freebsd_a-cplus-dem.o `test -f 'm_demangle/cplus-dem.c' || echo '$(srcdir)/'`m_demangle/cplus-dem.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-cplus-dem.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-cplus-dem.Po
#	source='m_demangle/cplus-dem.c' object='libcoregrind_x86_freebsd_a-cplus-dem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-cplus-dem.o `test -f 'm_demangle/cplus-dem.c' || echo '$(srcdir)/'`m_demangle/cplus-dem.c

libcoregrind_x86_freebsd_a-cplus-dem.obj: m_demangle/cplus-dem.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-cplus-dem.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-cplus-dem.Tpo -c -o libcoregrind_x86_freebsd_a-cplus-dem.obj `if test -f 'm_demangle/cplus-dem.c'; then $(CYGPATH_W) 'm_demangle/cplus-dem.c'; else $(CYGPATH_W) '$(srcdir)/m_demangle/cplus-dem.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-cplus-dem.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-cplus-dem.Po
#	source='m_demangle/cplus-dem.c' object='libcoregrind_x86_freebsd_a-cplus-dem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-cplus-dem.obj `if test -f 'm_demangle/cplus-dem.c'; then $(CYGPATH_W) 'm_demangle/cplus-dem.c'; else $(CYGPATH_W) '$(srcdir)/m_demangle/cplus-dem.c'; fi`

libcoregrind_x86_freebsd_a-demangle.o: m_demangle/demangle.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-demangle.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-demangle.Tpo -c -o libcoregrind_x86_freebsd_a-demangle.o `test -f 'm_demangle/demangle.c' || echo '$(srcdir)/'`m_demangle/demangle.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-demangle.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-demangle.Po
#	source='m_demangle/demangle.c' object='libcoregrind_x86_freebsd_a-demangle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-demangle.o `test -f 'm_demangle/demangle.c' || echo '$(srcdir)/'`m_demangle/demangle.c

libcoregrind_x86_freebsd_a-demangle.obj: m_demangle/demangle.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-demangle.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-demangle.Tpo -c -o libcoregrind_x86_freebsd_a-demangle.obj `if test -f 'm_demangle/demangle.c'; then $(CYGPATH_W) 'm_demangle/demangle.c'; else $(CYGPATH_W) '$(srcdir)/m_demangle/demangle.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-demangle.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-demangle.Po
#	source='m_demangle/demangle.c' object='libcoregrind_x86_freebsd_a-demangle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-demangle.obj `if test -f 'm_demangle/demangle.c'; then $(CYGPATH_W) 'm_demangle/demangle.c'; else $(CYGPATH_W) '$(srcdir)/m_demangle/demangle.c'; fi`

libcoregrind_x86_freebsd_a-dyn-string.o: m_demangle/dyn-string.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-dyn-string.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-dyn-string.Tpo -c -o libcoregrind_x86_freebsd_a-dyn-string.o `test -f 'm_demangle/dyn-string.c' || echo '$(srcdir)/'`m_demangle/dyn-string.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-dyn-string.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-dyn-string.Po
#	source='m_demangle/dyn-string.c' object='libcoregrind_x86_freebsd_a-dyn-string.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-dyn-string.o `test -f 'm_demangle/dyn-string.c' || echo '$(srcdir)/'`m_demangle/dyn-string.c

libcoregrind_x86_freebsd_a-dyn-string.obj: m_demangle/dyn-string.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-dyn-string.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-dyn-string.Tpo -c -o libcoregrind_x86_freebsd_a-dyn-string.obj `if test -f 'm_demangle/dyn-string.c'; then $(CYGPATH_W) 'm_demangle/dyn-string.c'; else $(CYGPATH_W) '$(srcdir)/m_demangle/dyn-string.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-dyn-string.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-dyn-string.Po
#	source='m_demangle/dyn-string.c' object='libcoregrind_x86_freebsd_a-dyn-string.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-dyn-string.obj `if test -f 'm_demangle/dyn-string.c'; then $(CYGPATH_W) 'm_demangle/dyn-string.c'; else $(CYGPATH_W) '$(srcdir)/m_demangle/dyn-string.c'; fi`

libcoregrind_x86_freebsd_a-safe-ctype.o: m_demangle/safe-ctype.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-safe-ctype.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-safe-ctype.Tpo -c -o libcoregrind_x86_freebsd_a-safe-ctype.o `test -f 'm_demangle/safe-ctype.c' || echo '$(srcdir)/'`m_demangle/safe-ctype.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-safe-ctype.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-safe-ctype.Po
#	source='m_demangle/safe-ctype.c' object='libcoregrind_x86_freebsd_a-safe-ctype.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-safe-ctype.o `test -f 'm_demangle/safe-ctype.c' || echo '$(srcdir)/'`m_demangle/safe-ctype.c

libcoregrind_x86_freebsd_a-safe-ctype.obj: m_demangle/safe-ctype.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-safe-ctype.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-safe-ctype.Tpo -c -o libcoregrind_x86_freebsd_a-safe-ctype.obj `if test -f 'm_demangle/safe-ctype.c'; then $(CYGPATH_W) 'm_demangle/safe-ctype.c'; else $(CYGPATH_W) '$(srcdir)/m_demangle/safe-ctype.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-safe-ctype.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-safe-ctype.Po
#	source='m_demangle/safe-ctype.c' object='libcoregrind_x86_freebsd_a-safe-ctype.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-safe-ctype.obj `if test -f 'm_demangle/safe-ctype.c'; then $(CYGPATH_W) 'm_demangle/safe-ctype.c'; else $(CYGPATH_W) '$(srcdir)/m_demangle/safe-ctype.c'; fi`

libcoregrind_x86_freebsd_a-inferiors.o: m_gdbserver/inferiors.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-inferiors.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-inferiors.Tpo -c -o libcoregrind_x86_freebsd_a-inferiors.o `test -f 'm_gdbserver/inferiors.c' || echo '$(srcdir)/'`m_gdbserver/inferiors.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-inferiors.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-inferiors.Po
#	source='m_gdbserver/inferiors.c' object='libcoregrind_x86_freebsd_a-inferiors.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-inferiors.o `test -f 'm_gdbserver/inferiors.c' || echo '$(srcdir)/'`m_gdbserver/inferiors.c

libcoregrind_x86_freebsd_a-inferiors.obj: m_gdbserver/inferiors.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-inferiors.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-inferiors.Tpo -c -o libcoregrind_x86_freebsd_a-inferiors.obj `if test -f 'm_gdbserver/inferiors.c'; then $(CYGPATH_W) 'm_gdbserver/inferiors.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/inferiors.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-inferiors.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-inferiors.Po
#	source='m_gdbserver/inferiors.c' object='libcoregrind_x86_freebsd_a-inferiors.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-inferiors.obj `if test -f 'm_gdbserver/inferiors.c'; then $(CYGPATH_W) 'm_gdbserver/inferiors.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/inferiors.c'; fi`

libcoregrind_x86_freebsd_a-m_gdbserver.o: m_gdbserver/m_gdbserver.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_gdbserver.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_gdbserver.Tpo -c -o libcoregrind_x86_freebsd_a-m_gdbserver.o `test -f 'm_gdbserver/m_gdbserver.c' || echo '$(srcdir)/'`m_gdbserver/m_gdbserver.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_gdbserver.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_gdbserver.Po
#	source='m_gdbserver/m_gdbserver.c' object='libcoregrind_x86_freebsd_a-m_gdbserver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_gdbserver.o `test -f 'm_gdbserver/m_gdbserver.c' || echo '$(srcdir)/'`m_gdbserver/m_gdbserver.c

libcoregrind_x86_freebsd_a-m_gdbserver.obj: m_gdbserver/m_gdbserver.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-m_gdbserver.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-m_gdbserver.Tpo -c -o libcoregrind_x86_freebsd_a-m_gdbserver.obj `if test -f 'm_gdbserver/m_gdbserver.c'; then $(CYGPATH_W) 'm_gdbserver/m_gdbserver.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/m_gdbserver.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-m_gdbserver.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-m_gdbserver.Po
#	source='m_gdbserver/m_gdbserver.c' object='libcoregrind_x86_freebsd_a-m_gdbserver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-m_gdbserver.obj `if test -f 'm_gdbserver/m_gdbserver.c'; then $(CYGPATH_W) 'm_gdbserver/m_gdbserver.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/m_gdbserver.c'; fi`

libcoregrind_x86_freebsd_a-regcache.o: m_gdbserver/regcache.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-regcache.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-regcache.Tpo -c -o libcoregrind_x86_freebsd_a-regcache.o `test -f 'm_gdbserver/regcache.c' || echo '$(srcdir)/'`m_gdbserver/regcache.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-regcache.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-regcache.Po
#	source='m_gdbserver/regcache.c' object='libcoregrind_x86_freebsd_a-regcache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-regcache.o `test -f 'm_gdbserver/regcache.c' || echo '$(srcdir)/'`m_gdbserver/regcache.c

libcoregrind_x86_freebsd_a-regcache.obj: m_gdbserver/regcache.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-regcache.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-regcache.Tpo -c -o libcoregrind_x86_freebsd_a-regcache.obj `if test -f 'm_gdbserver/regcache.c'; then $(CYGPATH_W) 'm_gdbserver/regcache.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/regcache.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-regcache.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-regcache.Po
#	source='m_gdbserver/regcache.c' object='libcoregrind_x86_freebsd_a-regcache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-regcache.obj `if test -f 'm_gdbserver/regcache.c'; then $(CYGPATH_W) 'm_gdbserver/regcache.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/regcache.c'; fi`

libcoregrind_x86_freebsd_a-remote-utils.o: m_gdbserver/remote-utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-remote-utils.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-remote-utils.Tpo -c -o libcoregrind_x86_freebsd_a-remote-utils.o `test -f 'm_gdbserver/remote-utils.c' || echo '$(srcdir)/'`m_gdbserver/remote-utils.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-remote-utils.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-remote-utils.Po
#	source='m_gdbserver/remote-utils.c' object='libcoregrind_x86_freebsd_a-remote-utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-remote-utils.o `test -f 'm_gdbserver/remote-utils.c' || echo '$(srcdir)/'`m_gdbserver/remote-utils.c

libcoregrind_x86_freebsd_a-remote-utils.obj: m_gdbserver/remote-utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-remote-utils.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-remote-utils.Tpo -c -o libcoregrind_x86_freebsd_a-remote-utils.obj `if test -f 'm_gdbserver/remote-utils.c'; then $(CYGPATH_W) 'm_gdbserver/remote-utils.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/remote-utils.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-remote-utils.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-remote-utils.Po
#	source='m_gdbserver/remote-utils.c' object='libcoregrind_x86_freebsd_a-remote-utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-remote-utils.obj `if test -f 'm_gdbserver/remote-utils.c'; then $(CYGPATH_W) 'm_gdbserver/remote-utils.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/remote-utils.c'; fi`

libcoregrind_x86_freebsd_a-server.o: m_gdbserver/server.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-server.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-server.Tpo -c -o libcoregrind_x86_freebsd_a-server.o `test -f 'm_gdbserver/server.c' || echo '$(srcdir)/'`m_gdbserver/server.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-server.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-server.Po
#	source='m_gdbserver/server.c' object='libcoregrind_x86_freebsd_a-server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-server.o `test -f 'm_gdbserver/server.c' || echo '$(srcdir)/'`m_gdbserver/server.c

libcoregrind_x86_freebsd_a-server.obj: m_gdbserver/server.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-server.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-server.Tpo -c -o libcoregrind_x86_freebsd_a-server.obj `if test -f 'm_gdbserver/server.c'; then $(CYGPATH_W) 'm_gdbserver/server.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/server.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-server.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-server.Po
#	source='m_gdbserver/server.c' object='libcoregrind_x86_freebsd_a-server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-server.obj `if test -f 'm_gdbserver/server.c'; then $(CYGPATH_W) 'm_gdbserver/server.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/server.c'; fi`

libcoregrind_x86_freebsd_a-signals.o: m_gdbserver/signals.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-signals.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-signals.Tpo -c -o libcoregrind_x86_freebsd_a-signals.o `test -f 'm_gdbserver/signals.c' || echo '$(srcdir)/'`m_gdbserver/signals.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-signals.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-signals.Po
#	source='m_gdbserver/signals.c' object='libcoregrind_x86_freebsd_a-signals.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-signals.o `test -f 'm_gdbserver/signals.c' || echo '$(srcdir)/'`m_gdbserver/signals.c

libcoregrind_x86_freebsd_a-signals.obj: m_gdbserver/signals.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-signals.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-signals.Tpo -c -o libcoregrind_x86_freebsd_a-signals.obj `if test -f 'm_gdbserver/signals.c'; then $(CYGPATH_W) 'm_gdbserver/signals.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/signals.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-signals.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-signals.Po
#	source='m_gdbserver/signals.c' object='libcoregrind_x86_freebsd_a-signals.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-signals.obj `if test -f 'm_gdbserver/signals.c'; then $(CYGPATH_W) 'm_gdbserver/signals.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/signals.c'; fi`

libcoregrind_x86_freebsd_a-target.o: m_gdbserver/target.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-target.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-target.Tpo -c -o libcoregrind_x86_freebsd_a-target.o `test -f 'm_gdbserver/target.c' || echo '$(srcdir)/'`m_gdbserver/target.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-target.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-target.Po
#	source='m_gdbserver/target.c' object='libcoregrind_x86_freebsd_a-target.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-target.o `test -f 'm_gdbserver/target.c' || echo '$(srcdir)/'`m_gdbserver/target.c

libcoregrind_x86_freebsd_a-target.obj: m_gdbserver/target.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-target.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-target.Tpo -c -o libcoregrind_x86_freebsd_a-target.obj `if test -f 'm_gdbserver/target.c'; then $(CYGPATH_W) 'm_gdbserver/target.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/target.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-target.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-target.Po
#	source='m_gdbserver/target.c' object='libcoregrind_x86_freebsd_a-target.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-target.obj `if test -f 'm_gdbserver/target.c'; then $(CYGPATH_W) 'm_gdbserver/target.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/target.c'; fi`

libcoregrind_x86_freebsd_a-utils.o: m_gdbserver/utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-utils.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-utils.Tpo -c -o libcoregrind_x86_freebsd_a-utils.o `test -f 'm_gdbserver/utils.c' || echo '$(srcdir)/'`m_gdbserver/utils.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-utils.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-utils.Po
#	source='m_gdbserver/utils.c' object='libcoregrind_x86_freebsd_a-utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-utils.o `test -f 'm_gdbserver/utils.c' || echo '$(srcdir)/'`m_gdbserver/utils.c

libcoregrind_x86_freebsd_a-utils.obj: m_gdbserver/utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-utils.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-utils.Tpo -c -o libcoregrind_x86_freebsd_a-utils.obj `if test -f 'm_gdbserver/utils.c'; then $(CYGPATH_W) 'm_gdbserver/utils.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/utils.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-utils.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-utils.Po
#	source='m_gdbserver/utils.c' object='libcoregrind_x86_freebsd_a-utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-utils.obj `if test -f 'm_gdbserver/utils.c'; then $(CYGPATH_W) 'm_gdbserver/utils.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/utils.c'; fi`

libcoregrind_x86_freebsd_a-valgrind-low-x86.o: m_gdbserver/valgrind-low-x86.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-valgrind-low-x86.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-x86.Tpo -c -o libcoregrind_x86_freebsd_a-valgrind-low-x86.o `test -f 'm_gdbserver/valgrind-low-x86.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-x86.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-x86.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-x86.Po
#	source='m_gdbserver/valgrind-low-x86.c' object='libcoregrind_x86_freebsd_a-valgrind-low-x86.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-valgrind-low-x86.o `test -f 'm_gdbserver/valgrind-low-x86.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-x86.c

libcoregrind_x86_freebsd_a-valgrind-low-x86.obj: m_gdbserver/valgrind-low-x86.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-valgrind-low-x86.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-x86.Tpo -c -o libcoregrind_x86_freebsd_a-valgrind-low-x86.obj `if test -f 'm_gdbserver/valgrind-low-x86.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-x86.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-x86.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-x86.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-x86.Po
#	source='m_gdbserver/valgrind-low-x86.c' object='libcoregrind_x86_freebsd_a-valgrind-low-x86.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-valgrind-low-x86.obj `if test -f 'm_gdbserver/valgrind-low-x86.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-x86.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-x86.c'; fi`

libcoregrind_x86_freebsd_a-valgrind-low-amd64.o: m_gdbserver/valgrind-low-amd64.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-valgrind-low-amd64.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-amd64.Tpo -c -o libcoregrind_x86_freebsd_a-valgrind-low-amd64.o `test -f 'm_gdbserver/valgrind-low-amd64.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-amd64.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-amd64.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-amd64.Po
#	source='m_gdbserver/valgrind-low-amd64.c' object='libcoregrind_x86_freebsd_a-valgrind-low-amd64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-valgrind-low-amd64.o `test -f 'm_gdbserver/valgrind-low-amd64.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-amd64.c

libcoregrind_x86_freebsd_a-valgrind-low-amd64.obj: m_gdbserver/valgrind-low-amd64.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-valgrind-low-amd64.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-amd64.Tpo -c -o libcoregrind_x86_freebsd_a-valgrind-low-amd64.obj `if test -f 'm_gdbserver/valgrind-low-amd64.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-amd64.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-amd64.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-amd64.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-amd64.Po
#	source='m_gdbserver/valgrind-low-amd64.c' object='libcoregrind_x86_freebsd_a-valgrind-low-amd64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-valgrind-low-amd64.obj `if test -f 'm_gdbserver/valgrind-low-amd64.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-amd64.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-amd64.c'; fi`

libcoregrind_x86_freebsd_a-valgrind-low-arm.o: m_gdbserver/valgrind-low-arm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-valgrind-low-arm.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-arm.Tpo -c -o libcoregrind_x86_freebsd_a-valgrind-low-arm.o `test -f 'm_gdbserver/valgrind-low-arm.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-arm.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-arm.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-arm.Po
#	source='m_gdbserver/valgrind-low-arm.c' object='libcoregrind_x86_freebsd_a-valgrind-low-arm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-valgrind-low-arm.o `test -f 'm_gdbserver/valgrind-low-arm.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-arm.c

libcoregrind_x86_freebsd_a-valgrind-low-arm.obj: m_gdbserver/valgrind-low-arm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-valgrind-low-arm.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-arm.Tpo -c -o libcoregrind_x86_freebsd_a-valgrind-low-arm.obj `if test -f 'm_gdbserver/valgrind-low-arm.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-arm.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-arm.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-arm.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-arm.Po
#	source='m_gdbserver/valgrind-low-arm.c' object='libcoregrind_x86_freebsd_a-valgrind-low-arm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-valgrind-low-arm.obj `if test -f 'm_gdbserver/valgrind-low-arm.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-arm.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-arm.c'; fi`

libcoregrind_x86_freebsd_a-valgrind-low-ppc32.o: m_gdbserver/valgrind-low-ppc32.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-valgrind-low-ppc32.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-ppc32.Tpo -c -o libcoregrind_x86_freebsd_a-valgrind-low-ppc32.o `test -f 'm_gdbserver/valgrind-low-ppc32.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-ppc32.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-ppc32.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-ppc32.Po
#	source='m_gdbserver/valgrind-low-ppc32.c' object='libcoregrind_x86_freebsd_a-valgrind-low-ppc32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-valgrind-low-ppc32.o `test -f 'm_gdbserver/valgrind-low-ppc32.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-ppc32.c

libcoregrind_x86_freebsd_a-valgrind-low-ppc32.obj: m_gdbserver/valgrind-low-ppc32.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-valgrind-low-ppc32.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-ppc32.Tpo -c -o libcoregrind_x86_freebsd_a-valgrind-low-ppc32.obj `if test -f 'm_gdbserver/valgrind-low-ppc32.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-ppc32.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-ppc32.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-ppc32.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-ppc32.Po
#	source='m_gdbserver/valgrind-low-ppc32.c' object='libcoregrind_x86_freebsd_a-valgrind-low-ppc32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-valgrind-low-ppc32.obj `if test -f 'm_gdbserver/valgrind-low-ppc32.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-ppc32.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-ppc32.c'; fi`

libcoregrind_x86_freebsd_a-valgrind-low-ppc64.o: m_gdbserver/valgrind-low-ppc64.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-valgrind-low-ppc64.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-ppc64.Tpo -c -o libcoregrind_x86_freebsd_a-valgrind-low-ppc64.o `test -f 'm_gdbserver/valgrind-low-ppc64.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-ppc64.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-ppc64.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-ppc64.Po
#	source='m_gdbserver/valgrind-low-ppc64.c' object='libcoregrind_x86_freebsd_a-valgrind-low-ppc64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-valgrind-low-ppc64.o `test -f 'm_gdbserver/valgrind-low-ppc64.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-ppc64.c

libcoregrind_x86_freebsd_a-valgrind-low-ppc64.obj: m_gdbserver/valgrind-low-ppc64.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-valgrind-low-ppc64.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-ppc64.Tpo -c -o libcoregrind_x86_freebsd_a-valgrind-low-ppc64.obj `if test -f 'm_gdbserver/valgrind-low-ppc64.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-ppc64.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-ppc64.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-ppc64.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-ppc64.Po
#	source='m_gdbserver/valgrind-low-ppc64.c' object='libcoregrind_x86_freebsd_a-valgrind-low-ppc64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-valgrind-low-ppc64.obj `if test -f 'm_gdbserver/valgrind-low-ppc64.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-ppc64.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-ppc64.c'; fi`

libcoregrind_x86_freebsd_a-valgrind-low-s390x.o: m_gdbserver/valgrind-low-s390x.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-valgrind-low-s390x.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-s390x.Tpo -c -o libcoregrind_x86_freebsd_a-valgrind-low-s390x.o `test -f 'm_gdbserver/valgrind-low-s390x.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-s390x.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-s390x.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-s390x.Po
#	source='m_gdbserver/valgrind-low-s390x.c' object='libcoregrind_x86_freebsd_a-valgrind-low-s390x.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-valgrind-low-s390x.o `test -f 'm_gdbserver/valgrind-low-s390x.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-s390x.c

libcoregrind_x86_freebsd_a-valgrind-low-s390x.obj: m_gdbserver/valgrind-low-s390x.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-valgrind-low-s390x.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-s390x.Tpo -c -o libcoregrind_x86_freebsd_a-valgrind-low-s390x.obj `if test -f 'm_gdbserver/valgrind-low-s390x.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-s390x.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-s390x.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-s390x.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-s390x.Po
#	source='m_gdbserver/valgrind-low-s390x.c' object='libcoregrind_x86_freebsd_a-valgrind-low-s390x.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-valgrind-low-s390x.obj `if test -f 'm_gdbserver/valgrind-low-s390x.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-s390x.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-s390x.c'; fi`

libcoregrind_x86_freebsd_a-valgrind-low-mips32.o: m_gdbserver/valgrind-low-mips32.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-valgrind-low-mips32.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-mips32.Tpo -c -o libcoregrind_x86_freebsd_a-valgrind-low-mips32.o `test -f 'm_gdbserver/valgrind-low-mips32.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-mips32.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-mips32.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-mips32.Po
#	source='m_gdbserver/valgrind-low-mips32.c' object='libcoregrind_x86_freebsd_a-valgrind-low-mips32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-valgrind-low-mips32.o `test -f 'm_gdbserver/valgrind-low-mips32.c' || echo '$(srcdir)/'`m_gdbserver/valgrind-low-mips32.c

libcoregrind_x86_freebsd_a-valgrind-low-mips32.obj: m_gdbserver/valgrind-low-mips32.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-valgrind-low-mips32.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-mips32.Tpo -c -o libcoregrind_x86_freebsd_a-valgrind-low-mips32.obj `if test -f 'm_gdbserver/valgrind-low-mips32.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-mips32.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-mips32.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-mips32.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-valgrind-low-mips32.Po
#	source='m_gdbserver/valgrind-low-mips32.c' object='libcoregrind_x86_freebsd_a-valgrind-low-mips32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-valgrind-low-mips32.obj `if test -f 'm_gdbserver/valgrind-low-mips32.c'; then $(CYGPATH_W) 'm_gdbserver/valgrind-low-mips32.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/valgrind-low-mips32.c'; fi`

libcoregrind_x86_freebsd_a-version.o: m_gdbserver/version.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-version.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-version.Tpo -c -o libcoregrind_x86_freebsd_a-version.o `test -f 'm_gdbserver/version.c' || echo '$(srcdir)/'`m_gdbserver/version.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-version.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-version.Po
#	source='m_gdbserver/version.c' object='libcoregrind_x86_freebsd_a-version.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-version.o `test -f 'm_gdbserver/version.c' || echo '$(srcdir)/'`m_gdbserver/version.c

libcoregrind_x86_freebsd_a-version.obj: m_gdbserver/version.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-version.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-version.Tpo -c -o libcoregrind_x86_freebsd_a-version.obj `if test -f 'm_gdbserver/version.c'; then $(CYGPATH_W) 'm_gdbserver/version.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/version.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-version.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-version.Po
#	source='m_gdbserver/version.c' object='libcoregrind_x86_freebsd_a-version.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-version.obj `if test -f 'm_gdbserver/version.c'; then $(CYGPATH_W) 'm_gdbserver/version.c'; else $(CYGPATH_W) '$(srcdir)/m_gdbserver/version.c'; fi`

libcoregrind_x86_freebsd_a-initimg-linux.o: m_initimg/initimg-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-initimg-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-linux.Tpo -c -o libcoregrind_x86_freebsd_a-initimg-linux.o `test -f 'm_initimg/initimg-linux.c' || echo '$(srcdir)/'`m_initimg/initimg-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-linux.Po
#	source='m_initimg/initimg-linux.c' object='libcoregrind_x86_freebsd_a-initimg-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-initimg-linux.o `test -f 'm_initimg/initimg-linux.c' || echo '$(srcdir)/'`m_initimg/initimg-linux.c

libcoregrind_x86_freebsd_a-initimg-linux.obj: m_initimg/initimg-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-initimg-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-linux.Tpo -c -o libcoregrind_x86_freebsd_a-initimg-linux.obj `if test -f 'm_initimg/initimg-linux.c'; then $(CYGPATH_W) 'm_initimg/initimg-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_initimg/initimg-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-linux.Po
#	source='m_initimg/initimg-linux.c' object='libcoregrind_x86_freebsd_a-initimg-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-initimg-linux.obj `if test -f 'm_initimg/initimg-linux.c'; then $(CYGPATH_W) 'm_initimg/initimg-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_initimg/initimg-linux.c'; fi`

libcoregrind_x86_freebsd_a-initimg-freebsd.o: m_initimg/initimg-freebsd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-initimg-freebsd.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-freebsd.Tpo -c -o libcoregrind_x86_freebsd_a-initimg-freebsd.o `test -f 'm_initimg/initimg-freebsd.c' || echo '$(srcdir)/'`m_initimg/initimg-freebsd.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-freebsd.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-freebsd.Po
#	source='m_initimg/initimg-freebsd.c' object='libcoregrind_x86_freebsd_a-initimg-freebsd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-initimg-freebsd.o `test -f 'm_initimg/initimg-freebsd.c' || echo '$(srcdir)/'`m_initimg/initimg-freebsd.c

libcoregrind_x86_freebsd_a-initimg-freebsd.obj: m_initimg/initimg-freebsd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-initimg-freebsd.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-freebsd.Tpo -c -o libcoregrind_x86_freebsd_a-initimg-freebsd.obj `if test -f 'm_initimg/initimg-freebsd.c'; then $(CYGPATH_W) 'm_initimg/initimg-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/m_initimg/initimg-freebsd.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-freebsd.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-freebsd.Po
#	source='m_initimg/initimg-freebsd.c' object='libcoregrind_x86_freebsd_a-initimg-freebsd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-initimg-freebsd.obj `if test -f 'm_initimg/initimg-freebsd.c'; then $(CYGPATH_W) 'm_initimg/initimg-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/m_initimg/initimg-freebsd.c'; fi`

libcoregrind_x86_freebsd_a-initimg-darwin.o: m_initimg/initimg-darwin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-initimg-darwin.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-darwin.Tpo -c -o libcoregrind_x86_freebsd_a-initimg-darwin.o `test -f 'm_initimg/initimg-darwin.c' || echo '$(srcdir)/'`m_initimg/initimg-darwin.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-darwin.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-darwin.Po
#	source='m_initimg/initimg-darwin.c' object='libcoregrind_x86_freebsd_a-initimg-darwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-initimg-darwin.o `test -f 'm_initimg/initimg-darwin.c' || echo '$(srcdir)/'`m_initimg/initimg-darwin.c

libcoregrind_x86_freebsd_a-initimg-darwin.obj: m_initimg/initimg-darwin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-initimg-darwin.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-darwin.Tpo -c -o libcoregrind_x86_freebsd_a-initimg-darwin.obj `if test -f 'm_initimg/initimg-darwin.c'; then $(CYGPATH_W) 'm_initimg/initimg-darwin.c'; else $(CYGPATH_W) '$(srcdir)/m_initimg/initimg-darwin.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-darwin.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-darwin.Po
#	source='m_initimg/initimg-darwin.c' object='libcoregrind_x86_freebsd_a-initimg-darwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-initimg-darwin.obj `if test -f 'm_initimg/initimg-darwin.c'; then $(CYGPATH_W) 'm_initimg/initimg-darwin.c'; else $(CYGPATH_W) '$(srcdir)/m_initimg/initimg-darwin.c'; fi`

libcoregrind_x86_freebsd_a-initimg-pathscan.o: m_initimg/initimg-pathscan.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-initimg-pathscan.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-pathscan.Tpo -c -o libcoregrind_x86_freebsd_a-initimg-pathscan.o `test -f 'm_initimg/initimg-pathscan.c' || echo '$(srcdir)/'`m_initimg/initimg-pathscan.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-pathscan.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-pathscan.Po
#	source='m_initimg/initimg-pathscan.c' object='libcoregrind_x86_freebsd_a-initimg-pathscan.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-initimg-pathscan.o `test -f 'm_initimg/initimg-pathscan.c' || echo '$(srcdir)/'`m_initimg/initimg-pathscan.c

libcoregrind_x86_freebsd_a-initimg-pathscan.obj: m_initimg/initimg-pathscan.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-initimg-pathscan.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-pathscan.Tpo -c -o libcoregrind_x86_freebsd_a-initimg-pathscan.obj `if test -f 'm_initimg/initimg-pathscan.c'; then $(CYGPATH_W) 'm_initimg/initimg-pathscan.c'; else $(CYGPATH_W) '$(srcdir)/m_initimg/initimg-pathscan.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-pathscan.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-initimg-pathscan.Po
#	source='m_initimg/initimg-pathscan.c' object='libcoregrind_x86_freebsd_a-initimg-pathscan.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-initimg-pathscan.obj `if test -f 'm_initimg/initimg-pathscan.c'; then $(CYGPATH_W) 'm_initimg/initimg-pathscan.c'; else $(CYGPATH_W) '$(srcdir)/m_initimg/initimg-pathscan.c'; fi`

libcoregrind_x86_freebsd_a-mach_basics.o: m_mach/mach_basics.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-mach_basics.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_basics.Tpo -c -o libcoregrind_x86_freebsd_a-mach_basics.o `test -f 'm_mach/mach_basics.c' || echo '$(srcdir)/'`m_mach/mach_basics.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_basics.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_basics.Po
#	source='m_mach/mach_basics.c' object='libcoregrind_x86_freebsd_a-mach_basics.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-mach_basics.o `test -f 'm_mach/mach_basics.c' || echo '$(srcdir)/'`m_mach/mach_basics.c

libcoregrind_x86_freebsd_a-mach_basics.obj: m_mach/mach_basics.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-mach_basics.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_basics.Tpo -c -o libcoregrind_x86_freebsd_a-mach_basics.obj `if test -f 'm_mach/mach_basics.c'; then $(CYGPATH_W) 'm_mach/mach_basics.c'; else $(CYGPATH_W) '$(srcdir)/m_mach/mach_basics.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_basics.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_basics.Po
#	source='m_mach/mach_basics.c' object='libcoregrind_x86_freebsd_a-mach_basics.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-mach_basics.obj `if test -f 'm_mach/mach_basics.c'; then $(CYGPATH_W) 'm_mach/mach_basics.c'; else $(CYGPATH_W) '$(srcdir)/m_mach/mach_basics.c'; fi`

libcoregrind_x86_freebsd_a-mach_msg.o: m_mach/mach_msg.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-mach_msg.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_msg.Tpo -c -o libcoregrind_x86_freebsd_a-mach_msg.o `test -f 'm_mach/mach_msg.c' || echo '$(srcdir)/'`m_mach/mach_msg.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_msg.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_msg.Po
#	source='m_mach/mach_msg.c' object='libcoregrind_x86_freebsd_a-mach_msg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-mach_msg.o `test -f 'm_mach/mach_msg.c' || echo '$(srcdir)/'`m_mach/mach_msg.c

libcoregrind_x86_freebsd_a-mach_msg.obj: m_mach/mach_msg.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-mach_msg.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_msg.Tpo -c -o libcoregrind_x86_freebsd_a-mach_msg.obj `if test -f 'm_mach/mach_msg.c'; then $(CYGPATH_W) 'm_mach/mach_msg.c'; else $(CYGPATH_W) '$(srcdir)/m_mach/mach_msg.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_msg.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_msg.Po
#	source='m_mach/mach_msg.c' object='libcoregrind_x86_freebsd_a-mach_msg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-mach_msg.obj `if test -f 'm_mach/mach_msg.c'; then $(CYGPATH_W) 'm_mach/mach_msg.c'; else $(CYGPATH_W) '$(srcdir)/m_mach/mach_msg.c'; fi`

libcoregrind_x86_freebsd_a-replacemalloc_core.o: m_replacemalloc/replacemalloc_core.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-replacemalloc_core.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-replacemalloc_core.Tpo -c -o libcoregrind_x86_freebsd_a-replacemalloc_core.o `test -f 'm_replacemalloc/replacemalloc_core.c' || echo '$(srcdir)/'`m_replacemalloc/replacemalloc_core.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-replacemalloc_core.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-replacemalloc_core.Po
#	source='m_replacemalloc/replacemalloc_core.c' object='libcoregrind_x86_freebsd_a-replacemalloc_core.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-replacemalloc_core.o `test -f 'm_replacemalloc/replacemalloc_core.c' || echo '$(srcdir)/'`m_replacemalloc/replacemalloc_core.c

libcoregrind_x86_freebsd_a-replacemalloc_core.obj: m_replacemalloc/replacemalloc_core.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-replacemalloc_core.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-replacemalloc_core.Tpo -c -o libcoregrind_x86_freebsd_a-replacemalloc_core.obj `if test -f 'm_replacemalloc/replacemalloc_core.c'; then $(CYGPATH_W) 'm_replacemalloc/replacemalloc_core.c'; else $(CYGPATH_W) '$(srcdir)/m_replacemalloc/replacemalloc_core.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-replacemalloc_core.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-replacemalloc_core.Po
#	source='m_replacemalloc/replacemalloc_core.c' object='libcoregrind_x86_freebsd_a-replacemalloc_core.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-replacemalloc_core.obj `if test -f 'm_replacemalloc/replacemalloc_core.c'; then $(CYGPATH_W) 'm_replacemalloc/replacemalloc_core.c'; else $(CYGPATH_W) '$(srcdir)/m_replacemalloc/replacemalloc_core.c'; fi`

libcoregrind_x86_freebsd_a-scheduler.o: m_scheduler/scheduler.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-scheduler.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-scheduler.Tpo -c -o libcoregrind_x86_freebsd_a-scheduler.o `test -f 'm_scheduler/scheduler.c' || echo '$(srcdir)/'`m_scheduler/scheduler.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-scheduler.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-scheduler.Po
#	source='m_scheduler/scheduler.c' object='libcoregrind_x86_freebsd_a-scheduler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-scheduler.o `test -f 'm_scheduler/scheduler.c' || echo '$(srcdir)/'`m_scheduler/scheduler.c

libcoregrind_x86_freebsd_a-scheduler.obj: m_scheduler/scheduler.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-scheduler.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-scheduler.Tpo -c -o libcoregrind_x86_freebsd_a-scheduler.obj `if test -f 'm_scheduler/scheduler.c'; then $(CYGPATH_W) 'm_scheduler/scheduler.c'; else $(CYGPATH_W) '$(srcdir)/m_scheduler/scheduler.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-scheduler.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-scheduler.Po
#	source='m_scheduler/scheduler.c' object='libcoregrind_x86_freebsd_a-scheduler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-scheduler.obj `if test -f 'm_scheduler/scheduler.c'; then $(CYGPATH_W) 'm_scheduler/scheduler.c'; else $(CYGPATH_W) '$(srcdir)/m_scheduler/scheduler.c'; fi`

libcoregrind_x86_freebsd_a-sema.o: m_scheduler/sema.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sema.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sema.Tpo -c -o libcoregrind_x86_freebsd_a-sema.o `test -f 'm_scheduler/sema.c' || echo '$(srcdir)/'`m_scheduler/sema.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sema.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sema.Po
#	source='m_scheduler/sema.c' object='libcoregrind_x86_freebsd_a-sema.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sema.o `test -f 'm_scheduler/sema.c' || echo '$(srcdir)/'`m_scheduler/sema.c

libcoregrind_x86_freebsd_a-sema.obj: m_scheduler/sema.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sema.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sema.Tpo -c -o libcoregrind_x86_freebsd_a-sema.obj `if test -f 'm_scheduler/sema.c'; then $(CYGPATH_W) 'm_scheduler/sema.c'; else $(CYGPATH_W) '$(srcdir)/m_scheduler/sema.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sema.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sema.Po
#	source='m_scheduler/sema.c' object='libcoregrind_x86_freebsd_a-sema.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sema.obj `if test -f 'm_scheduler/sema.c'; then $(CYGPATH_W) 'm_scheduler/sema.c'; else $(CYGPATH_W) '$(srcdir)/m_scheduler/sema.c'; fi`

libcoregrind_x86_freebsd_a-sched-lock.o: m_scheduler/sched-lock.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sched-lock.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sched-lock.Tpo -c -o libcoregrind_x86_freebsd_a-sched-lock.o `test -f 'm_scheduler/sched-lock.c' || echo '$(srcdir)/'`m_scheduler/sched-lock.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sched-lock.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sched-lock.Po
#	source='m_scheduler/sched-lock.c' object='libcoregrind_x86_freebsd_a-sched-lock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sched-lock.o `test -f 'm_scheduler/sched-lock.c' || echo '$(srcdir)/'`m_scheduler/sched-lock.c

libcoregrind_x86_freebsd_a-sched-lock.obj: m_scheduler/sched-lock.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sched-lock.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sched-lock.Tpo -c -o libcoregrind_x86_freebsd_a-sched-lock.obj `if test -f 'm_scheduler/sched-lock.c'; then $(CYGPATH_W) 'm_scheduler/sched-lock.c'; else $(CYGPATH_W) '$(srcdir)/m_scheduler/sched-lock.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sched-lock.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sched-lock.Po
#	source='m_scheduler/sched-lock.c' object='libcoregrind_x86_freebsd_a-sched-lock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sched-lock.obj `if test -f 'm_scheduler/sched-lock.c'; then $(CYGPATH_W) 'm_scheduler/sched-lock.c'; else $(CYGPATH_W) '$(srcdir)/m_scheduler/sched-lock.c'; fi`

libcoregrind_x86_freebsd_a-sched-lock-generic.o: m_scheduler/sched-lock-generic.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sched-lock-generic.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sched-lock-generic.Tpo -c -o libcoregrind_x86_freebsd_a-sched-lock-generic.o `test -f 'm_scheduler/sched-lock-generic.c' || echo '$(srcdir)/'`m_scheduler/sched-lock-generic.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sched-lock-generic.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sched-lock-generic.Po
#	source='m_scheduler/sched-lock-generic.c' object='libcoregrind_x86_freebsd_a-sched-lock-generic.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sched-lock-generic.o `test -f 'm_scheduler/sched-lock-generic.c' || echo '$(srcdir)/'`m_scheduler/sched-lock-generic.c

libcoregrind_x86_freebsd_a-sched-lock-generic.obj: m_scheduler/sched-lock-generic.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sched-lock-generic.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sched-lock-generic.Tpo -c -o libcoregrind_x86_freebsd_a-sched-lock-generic.obj `if test -f 'm_scheduler/sched-lock-generic.c'; then $(CYGPATH_W) 'm_scheduler/sched-lock-generic.c'; else $(CYGPATH_W) '$(srcdir)/m_scheduler/sched-lock-generic.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sched-lock-generic.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sched-lock-generic.Po
#	source='m_scheduler/sched-lock-generic.c' object='libcoregrind_x86_freebsd_a-sched-lock-generic.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sched-lock-generic.obj `if test -f 'm_scheduler/sched-lock-generic.c'; then $(CYGPATH_W) 'm_scheduler/sched-lock-generic.c'; else $(CYGPATH_W) '$(srcdir)/m_scheduler/sched-lock-generic.c'; fi`

libcoregrind_x86_freebsd_a-sigframe-x86-linux.o: m_sigframe/sigframe-x86-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sigframe-x86-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-x86-linux.Tpo -c -o libcoregrind_x86_freebsd_a-sigframe-x86-linux.o `test -f 'm_sigframe/sigframe-x86-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-x86-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-x86-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-x86-linux.Po
#	source='m_sigframe/sigframe-x86-linux.c' object='libcoregrind_x86_freebsd_a-sigframe-x86-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sigframe-x86-linux.o `test -f 'm_sigframe/sigframe-x86-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-x86-linux.c

libcoregrind_x86_freebsd_a-sigframe-x86-linux.obj: m_sigframe/sigframe-x86-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sigframe-x86-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-x86-linux.Tpo -c -o libcoregrind_x86_freebsd_a-sigframe-x86-linux.obj `if test -f 'm_sigframe/sigframe-x86-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-x86-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-x86-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-x86-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-x86-linux.Po
#	source='m_sigframe/sigframe-x86-linux.c' object='libcoregrind_x86_freebsd_a-sigframe-x86-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sigframe-x86-linux.obj `if test -f 'm_sigframe/sigframe-x86-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-x86-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-x86-linux.c'; fi`

libcoregrind_x86_freebsd_a-sigframe-amd64-linux.o: m_sigframe/sigframe-amd64-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sigframe-amd64-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-amd64-linux.Tpo -c -o libcoregrind_x86_freebsd_a-sigframe-amd64-linux.o `test -f 'm_sigframe/sigframe-amd64-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-amd64-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-amd64-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-amd64-linux.Po
#	source='m_sigframe/sigframe-amd64-linux.c' object='libcoregrind_x86_freebsd_a-sigframe-amd64-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sigframe-amd64-linux.o `test -f 'm_sigframe/sigframe-amd64-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-amd64-linux.c

libcoregrind_x86_freebsd_a-sigframe-amd64-linux.obj: m_sigframe/sigframe-amd64-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sigframe-amd64-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-amd64-linux.Tpo -c -o libcoregrind_x86_freebsd_a-sigframe-amd64-linux.obj `if test -f 'm_sigframe/sigframe-amd64-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-amd64-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-amd64-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-amd64-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-amd64-linux.Po
#	source='m_sigframe/sigframe-amd64-linux.c' object='libcoregrind_x86_freebsd_a-sigframe-amd64-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sigframe-amd64-linux.obj `if test -f 'm_sigframe/sigframe-amd64-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-amd64-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-amd64-linux.c'; fi`

libcoregrind_x86_freebsd_a-sigframe-x86-freebsd.o: m_sigframe/sigframe-x86-freebsd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sigframe-x86-freebsd.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-x86-freebsd.Tpo -c -o libcoregrind_x86_freebsd_a-sigframe-x86-freebsd.o `test -f 'm_sigframe/sigframe-x86-freebsd.c' || echo '$(srcdir)/'`m_sigframe/sigframe-x86-freebsd.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-x86-freebsd.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-x86-freebsd.Po
#	source='m_sigframe/sigframe-x86-freebsd.c' object='libcoregrind_x86_freebsd_a-sigframe-x86-freebsd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sigframe-x86-freebsd.o `test -f 'm_sigframe/sigframe-x86-freebsd.c' || echo '$(srcdir)/'`m_sigframe/sigframe-x86-freebsd.c

libcoregrind_x86_freebsd_a-sigframe-x86-freebsd.obj: m_sigframe/sigframe-x86-freebsd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sigframe-x86-freebsd.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-x86-freebsd.Tpo -c -o libcoregrind_x86_freebsd_a-sigframe-x86-freebsd.obj `if test -f 'm_sigframe/sigframe-x86-freebsd.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-x86-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-x86-freebsd.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-x86-freebsd.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-x86-freebsd.Po
#	source='m_sigframe/sigframe-x86-freebsd.c' object='libcoregrind_x86_freebsd_a-sigframe-x86-freebsd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sigframe-x86-freebsd.obj `if test -f 'm_sigframe/sigframe-x86-freebsd.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-x86-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-x86-freebsd.c'; fi`

libcoregrind_x86_freebsd_a-sigframe-amd64-freebsd.o: m_sigframe/sigframe-amd64-freebsd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sigframe-amd64-freebsd.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-amd64-freebsd.Tpo -c -o libcoregrind_x86_freebsd_a-sigframe-amd64-freebsd.o `test -f 'm_sigframe/sigframe-amd64-freebsd.c' || echo '$(srcdir)/'`m_sigframe/sigframe-amd64-freebsd.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-amd64-freebsd.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-amd64-freebsd.Po
#	source='m_sigframe/sigframe-amd64-freebsd.c' object='libcoregrind_x86_freebsd_a-sigframe-amd64-freebsd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sigframe-amd64-freebsd.o `test -f 'm_sigframe/sigframe-amd64-freebsd.c' || echo '$(srcdir)/'`m_sigframe/sigframe-amd64-freebsd.c

libcoregrind_x86_freebsd_a-sigframe-amd64-freebsd.obj: m_sigframe/sigframe-amd64-freebsd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sigframe-amd64-freebsd.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-amd64-freebsd.Tpo -c -o libcoregrind_x86_freebsd_a-sigframe-amd64-freebsd.obj `if test -f 'm_sigframe/sigframe-amd64-freebsd.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-amd64-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-amd64-freebsd.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-amd64-freebsd.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-amd64-freebsd.Po
#	source='m_sigframe/sigframe-amd64-freebsd.c' object='libcoregrind_x86_freebsd_a-sigframe-amd64-freebsd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sigframe-amd64-freebsd.obj `if test -f 'm_sigframe/sigframe-amd64-freebsd.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-amd64-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-amd64-freebsd.c'; fi`

libcoregrind_x86_freebsd_a-sigframe-ppc32-linux.o: m_sigframe/sigframe-ppc32-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sigframe-ppc32-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-ppc32-linux.Tpo -c -o libcoregrind_x86_freebsd_a-sigframe-ppc32-linux.o `test -f 'm_sigframe/sigframe-ppc32-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-ppc32-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-ppc32-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-ppc32-linux.Po
#	source='m_sigframe/sigframe-ppc32-linux.c' object='libcoregrind_x86_freebsd_a-sigframe-ppc32-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sigframe-ppc32-linux.o `test -f 'm_sigframe/sigframe-ppc32-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-ppc32-linux.c

libcoregrind_x86_freebsd_a-sigframe-ppc32-linux.obj: m_sigframe/sigframe-ppc32-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sigframe-ppc32-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-ppc32-linux.Tpo -c -o libcoregrind_x86_freebsd_a-sigframe-ppc32-linux.obj `if test -f 'm_sigframe/sigframe-ppc32-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-ppc32-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-ppc32-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-ppc32-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-ppc32-linux.Po
#	source='m_sigframe/sigframe-ppc32-linux.c' object='libcoregrind_x86_freebsd_a-sigframe-ppc32-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sigframe-ppc32-linux.obj `if test -f 'm_sigframe/sigframe-ppc32-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-ppc32-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-ppc32-linux.c'; fi`

libcoregrind_x86_freebsd_a-sigframe-ppc64-linux.o: m_sigframe/sigframe-ppc64-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sigframe-ppc64-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-ppc64-linux.Tpo -c -o libcoregrind_x86_freebsd_a-sigframe-ppc64-linux.o `test -f 'm_sigframe/sigframe-ppc64-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-ppc64-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-ppc64-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-ppc64-linux.Po
#	source='m_sigframe/sigframe-ppc64-linux.c' object='libcoregrind_x86_freebsd_a-sigframe-ppc64-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sigframe-ppc64-linux.o `test -f 'm_sigframe/sigframe-ppc64-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-ppc64-linux.c

libcoregrind_x86_freebsd_a-sigframe-ppc64-linux.obj: m_sigframe/sigframe-ppc64-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sigframe-ppc64-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-ppc64-linux.Tpo -c -o libcoregrind_x86_freebsd_a-sigframe-ppc64-linux.obj `if test -f 'm_sigframe/sigframe-ppc64-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-ppc64-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-ppc64-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-ppc64-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-ppc64-linux.Po
#	source='m_sigframe/sigframe-ppc64-linux.c' object='libcoregrind_x86_freebsd_a-sigframe-ppc64-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sigframe-ppc64-linux.obj `if test -f 'm_sigframe/sigframe-ppc64-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-ppc64-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-ppc64-linux.c'; fi`

libcoregrind_x86_freebsd_a-sigframe-arm-linux.o: m_sigframe/sigframe-arm-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sigframe-arm-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-arm-linux.Tpo -c -o libcoregrind_x86_freebsd_a-sigframe-arm-linux.o `test -f 'm_sigframe/sigframe-arm-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-arm-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-arm-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-arm-linux.Po
#	source='m_sigframe/sigframe-arm-linux.c' object='libcoregrind_x86_freebsd_a-sigframe-arm-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sigframe-arm-linux.o `test -f 'm_sigframe/sigframe-arm-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-arm-linux.c

libcoregrind_x86_freebsd_a-sigframe-arm-linux.obj: m_sigframe/sigframe-arm-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sigframe-arm-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-arm-linux.Tpo -c -o libcoregrind_x86_freebsd_a-sigframe-arm-linux.obj `if test -f 'm_sigframe/sigframe-arm-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-arm-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-arm-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-arm-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-arm-linux.Po
#	source='m_sigframe/sigframe-arm-linux.c' object='libcoregrind_x86_freebsd_a-sigframe-arm-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sigframe-arm-linux.obj `if test -f 'm_sigframe/sigframe-arm-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-arm-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-arm-linux.c'; fi`

libcoregrind_x86_freebsd_a-sigframe-s390x-linux.o: m_sigframe/sigframe-s390x-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sigframe-s390x-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-s390x-linux.Tpo -c -o libcoregrind_x86_freebsd_a-sigframe-s390x-linux.o `test -f 'm_sigframe/sigframe-s390x-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-s390x-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-s390x-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-s390x-linux.Po
#	source='m_sigframe/sigframe-s390x-linux.c' object='libcoregrind_x86_freebsd_a-sigframe-s390x-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sigframe-s390x-linux.o `test -f 'm_sigframe/sigframe-s390x-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-s390x-linux.c

libcoregrind_x86_freebsd_a-sigframe-s390x-linux.obj: m_sigframe/sigframe-s390x-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sigframe-s390x-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-s390x-linux.Tpo -c -o libcoregrind_x86_freebsd_a-sigframe-s390x-linux.obj `if test -f 'm_sigframe/sigframe-s390x-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-s390x-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-s390x-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-s390x-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-s390x-linux.Po
#	source='m_sigframe/sigframe-s390x-linux.c' object='libcoregrind_x86_freebsd_a-sigframe-s390x-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sigframe-s390x-linux.obj `if test -f 'm_sigframe/sigframe-s390x-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-s390x-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-s390x-linux.c'; fi`

libcoregrind_x86_freebsd_a-sigframe-mips32-linux.o: m_sigframe/sigframe-mips32-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sigframe-mips32-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-mips32-linux.Tpo -c -o libcoregrind_x86_freebsd_a-sigframe-mips32-linux.o `test -f 'm_sigframe/sigframe-mips32-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-mips32-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-mips32-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-mips32-linux.Po
#	source='m_sigframe/sigframe-mips32-linux.c' object='libcoregrind_x86_freebsd_a-sigframe-mips32-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sigframe-mips32-linux.o `test -f 'm_sigframe/sigframe-mips32-linux.c' || echo '$(srcdir)/'`m_sigframe/sigframe-mips32-linux.c

libcoregrind_x86_freebsd_a-sigframe-mips32-linux.obj: m_sigframe/sigframe-mips32-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sigframe-mips32-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-mips32-linux.Tpo -c -o libcoregrind_x86_freebsd_a-sigframe-mips32-linux.obj `if test -f 'm_sigframe/sigframe-mips32-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-mips32-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-mips32-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-mips32-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-mips32-linux.Po
#	source='m_sigframe/sigframe-mips32-linux.c' object='libcoregrind_x86_freebsd_a-sigframe-mips32-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sigframe-mips32-linux.obj `if test -f 'm_sigframe/sigframe-mips32-linux.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-mips32-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-mips32-linux.c'; fi`

libcoregrind_x86_freebsd_a-sigframe-x86-darwin.o: m_sigframe/sigframe-x86-darwin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sigframe-x86-darwin.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-x86-darwin.Tpo -c -o libcoregrind_x86_freebsd_a-sigframe-x86-darwin.o `test -f 'm_sigframe/sigframe-x86-darwin.c' || echo '$(srcdir)/'`m_sigframe/sigframe-x86-darwin.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-x86-darwin.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-x86-darwin.Po
#	source='m_sigframe/sigframe-x86-darwin.c' object='libcoregrind_x86_freebsd_a-sigframe-x86-darwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sigframe-x86-darwin.o `test -f 'm_sigframe/sigframe-x86-darwin.c' || echo '$(srcdir)/'`m_sigframe/sigframe-x86-darwin.c

libcoregrind_x86_freebsd_a-sigframe-x86-darwin.obj: m_sigframe/sigframe-x86-darwin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sigframe-x86-darwin.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-x86-darwin.Tpo -c -o libcoregrind_x86_freebsd_a-sigframe-x86-darwin.obj `if test -f 'm_sigframe/sigframe-x86-darwin.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-x86-darwin.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-x86-darwin.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-x86-darwin.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-x86-darwin.Po
#	source='m_sigframe/sigframe-x86-darwin.c' object='libcoregrind_x86_freebsd_a-sigframe-x86-darwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sigframe-x86-darwin.obj `if test -f 'm_sigframe/sigframe-x86-darwin.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-x86-darwin.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-x86-darwin.c'; fi`

libcoregrind_x86_freebsd_a-sigframe-amd64-darwin.o: m_sigframe/sigframe-amd64-darwin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sigframe-amd64-darwin.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-amd64-darwin.Tpo -c -o libcoregrind_x86_freebsd_a-sigframe-amd64-darwin.o `test -f 'm_sigframe/sigframe-amd64-darwin.c' || echo '$(srcdir)/'`m_sigframe/sigframe-amd64-darwin.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-amd64-darwin.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-amd64-darwin.Po
#	source='m_sigframe/sigframe-amd64-darwin.c' object='libcoregrind_x86_freebsd_a-sigframe-amd64-darwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sigframe-amd64-darwin.o `test -f 'm_sigframe/sigframe-amd64-darwin.c' || echo '$(srcdir)/'`m_sigframe/sigframe-amd64-darwin.c

libcoregrind_x86_freebsd_a-sigframe-amd64-darwin.obj: m_sigframe/sigframe-amd64-darwin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-sigframe-amd64-darwin.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-amd64-darwin.Tpo -c -o libcoregrind_x86_freebsd_a-sigframe-amd64-darwin.obj `if test -f 'm_sigframe/sigframe-amd64-darwin.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-amd64-darwin.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-amd64-darwin.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-amd64-darwin.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-sigframe-amd64-darwin.Po
#	source='m_sigframe/sigframe-amd64-darwin.c' object='libcoregrind_x86_freebsd_a-sigframe-amd64-darwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-sigframe-amd64-darwin.obj `if test -f 'm_sigframe/sigframe-amd64-darwin.c'; then $(CYGPATH_W) 'm_sigframe/sigframe-amd64-darwin.c'; else $(CYGPATH_W) '$(srcdir)/m_sigframe/sigframe-amd64-darwin.c'; fi`

libcoregrind_x86_freebsd_a-syswrap-main.o: m_syswrap/syswrap-main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-main.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-main.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-main.o `test -f 'm_syswrap/syswrap-main.c' || echo '$(srcdir)/'`m_syswrap/syswrap-main.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-main.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-main.Po
#	source='m_syswrap/syswrap-main.c' object='libcoregrind_x86_freebsd_a-syswrap-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-main.o `test -f 'm_syswrap/syswrap-main.c' || echo '$(srcdir)/'`m_syswrap/syswrap-main.c

libcoregrind_x86_freebsd_a-syswrap-main.obj: m_syswrap/syswrap-main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-main.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-main.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-main.obj `if test -f 'm_syswrap/syswrap-main.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-main.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-main.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-main.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-main.Po
#	source='m_syswrap/syswrap-main.c' object='libcoregrind_x86_freebsd_a-syswrap-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-main.obj `if test -f 'm_syswrap/syswrap-main.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-main.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-main.c'; fi`

libcoregrind_x86_freebsd_a-syswrap-generic.o: m_syswrap/syswrap-generic.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-generic.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-generic.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-generic.o `test -f 'm_syswrap/syswrap-generic.c' || echo '$(srcdir)/'`m_syswrap/syswrap-generic.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-generic.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-generic.Po
#	source='m_syswrap/syswrap-generic.c' object='libcoregrind_x86_freebsd_a-syswrap-generic.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-generic.o `test -f 'm_syswrap/syswrap-generic.c' || echo '$(srcdir)/'`m_syswrap/syswrap-generic.c

libcoregrind_x86_freebsd_a-syswrap-generic.obj: m_syswrap/syswrap-generic.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-generic.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-generic.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-generic.obj `if test -f 'm_syswrap/syswrap-generic.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-generic.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-generic.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-generic.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-generic.Po
#	source='m_syswrap/syswrap-generic.c' object='libcoregrind_x86_freebsd_a-syswrap-generic.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-generic.obj `if test -f 'm_syswrap/syswrap-generic.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-generic.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-generic.c'; fi`

libcoregrind_x86_freebsd_a-syswrap-linux.o: m_syswrap/syswrap-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-linux.o `test -f 'm_syswrap/syswrap-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-linux.Po
#	source='m_syswrap/syswrap-linux.c' object='libcoregrind_x86_freebsd_a-syswrap-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-linux.o `test -f 'm_syswrap/syswrap-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-linux.c

libcoregrind_x86_freebsd_a-syswrap-linux.obj: m_syswrap/syswrap-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-linux.obj `if test -f 'm_syswrap/syswrap-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-linux.Po
#	source='m_syswrap/syswrap-linux.c' object='libcoregrind_x86_freebsd_a-syswrap-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-linux.obj `if test -f 'm_syswrap/syswrap-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-linux.c'; fi`

libcoregrind_x86_freebsd_a-syswrap-linux-variants.o: m_syswrap/syswrap-linux-variants.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-linux-variants.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-linux-variants.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-linux-variants.o `test -f 'm_syswrap/syswrap-linux-variants.c' || echo '$(srcdir)/'`m_syswrap/syswrap-linux-variants.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-linux-variants.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-linux-variants.Po
#	source='m_syswrap/syswrap-linux-variants.c' object='libcoregrind_x86_freebsd_a-syswrap-linux-variants.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-linux-variants.o `test -f 'm_syswrap/syswrap-linux-variants.c' || echo '$(srcdir)/'`m_syswrap/syswrap-linux-variants.c

libcoregrind_x86_freebsd_a-syswrap-linux-variants.obj: m_syswrap/syswrap-linux-variants.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-linux-variants.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-linux-variants.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-linux-variants.obj `if test -f 'm_syswrap/syswrap-linux-variants.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-linux-variants.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-linux-variants.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-linux-variants.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-linux-variants.Po
#	source='m_syswrap/syswrap-linux-variants.c' object='libcoregrind_x86_freebsd_a-syswrap-linux-variants.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-linux-variants.obj `if test -f 'm_syswrap/syswrap-linux-variants.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-linux-variants.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-linux-variants.c'; fi`

libcoregrind_x86_freebsd_a-syswrap-freebsd.o: m_syswrap/syswrap-freebsd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-freebsd.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-freebsd.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-freebsd.o `test -f 'm_syswrap/syswrap-freebsd.c' || echo '$(srcdir)/'`m_syswrap/syswrap-freebsd.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-freebsd.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-freebsd.Po
#	source='m_syswrap/syswrap-freebsd.c' object='libcoregrind_x86_freebsd_a-syswrap-freebsd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-freebsd.o `test -f 'm_syswrap/syswrap-freebsd.c' || echo '$(srcdir)/'`m_syswrap/syswrap-freebsd.c

libcoregrind_x86_freebsd_a-syswrap-freebsd.obj: m_syswrap/syswrap-freebsd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-freebsd.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-freebsd.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-freebsd.obj `if test -f 'm_syswrap/syswrap-freebsd.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-freebsd.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-freebsd.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-freebsd.Po
#	source='m_syswrap/syswrap-freebsd.c' object='libcoregrind_x86_freebsd_a-syswrap-freebsd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-freebsd.obj `if test -f 'm_syswrap/syswrap-freebsd.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-freebsd.c'; fi`

libcoregrind_x86_freebsd_a-syswrap-freebsd-variants.o: m_syswrap/syswrap-freebsd-variants.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-freebsd-variants.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-freebsd-variants.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-freebsd-variants.o `test -f 'm_syswrap/syswrap-freebsd-variants.c' || echo '$(srcdir)/'`m_syswrap/syswrap-freebsd-variants.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-freebsd-variants.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-freebsd-variants.Po
#	source='m_syswrap/syswrap-freebsd-variants.c' object='libcoregrind_x86_freebsd_a-syswrap-freebsd-variants.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-freebsd-variants.o `test -f 'm_syswrap/syswrap-freebsd-variants.c' || echo '$(srcdir)/'`m_syswrap/syswrap-freebsd-variants.c

libcoregrind_x86_freebsd_a-syswrap-freebsd-variants.obj: m_syswrap/syswrap-freebsd-variants.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-freebsd-variants.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-freebsd-variants.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-freebsd-variants.obj `if test -f 'm_syswrap/syswrap-freebsd-variants.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-freebsd-variants.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-freebsd-variants.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-freebsd-variants.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-freebsd-variants.Po
#	source='m_syswrap/syswrap-freebsd-variants.c' object='libcoregrind_x86_freebsd_a-syswrap-freebsd-variants.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-freebsd-variants.obj `if test -f 'm_syswrap/syswrap-freebsd-variants.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-freebsd-variants.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-freebsd-variants.c'; fi`

libcoregrind_x86_freebsd_a-syswrap-darwin.o: m_syswrap/syswrap-darwin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-darwin.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-darwin.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-darwin.o `test -f 'm_syswrap/syswrap-darwin.c' || echo '$(srcdir)/'`m_syswrap/syswrap-darwin.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-darwin.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-darwin.Po
#	source='m_syswrap/syswrap-darwin.c' object='libcoregrind_x86_freebsd_a-syswrap-darwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-darwin.o `test -f 'm_syswrap/syswrap-darwin.c' || echo '$(srcdir)/'`m_syswrap/syswrap-darwin.c

libcoregrind_x86_freebsd_a-syswrap-darwin.obj: m_syswrap/syswrap-darwin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-darwin.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-darwin.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-darwin.obj `if test -f 'm_syswrap/syswrap-darwin.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-darwin.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-darwin.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-darwin.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-darwin.Po
#	source='m_syswrap/syswrap-darwin.c' object='libcoregrind_x86_freebsd_a-syswrap-darwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-darwin.obj `if test -f 'm_syswrap/syswrap-darwin.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-darwin.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-darwin.c'; fi`

libcoregrind_x86_freebsd_a-syswrap-x86-linux.o: m_syswrap/syswrap-x86-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-x86-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-x86-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-x86-linux.o `test -f 'm_syswrap/syswrap-x86-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-x86-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-x86-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-x86-linux.Po
#	source='m_syswrap/syswrap-x86-linux.c' object='libcoregrind_x86_freebsd_a-syswrap-x86-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-x86-linux.o `test -f 'm_syswrap/syswrap-x86-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-x86-linux.c

libcoregrind_x86_freebsd_a-syswrap-x86-linux.obj: m_syswrap/syswrap-x86-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-x86-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-x86-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-x86-linux.obj `if test -f 'm_syswrap/syswrap-x86-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-x86-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-x86-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-x86-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-x86-linux.Po
#	source='m_syswrap/syswrap-x86-linux.c' object='libcoregrind_x86_freebsd_a-syswrap-x86-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-x86-linux.obj `if test -f 'm_syswrap/syswrap-x86-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-x86-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-x86-linux.c'; fi`

libcoregrind_x86_freebsd_a-syswrap-amd64-linux.o: m_syswrap/syswrap-amd64-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-amd64-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-amd64-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-amd64-linux.o `test -f 'm_syswrap/syswrap-amd64-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-amd64-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-amd64-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-amd64-linux.Po
#	source='m_syswrap/syswrap-amd64-linux.c' object='libcoregrind_x86_freebsd_a-syswrap-amd64-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-amd64-linux.o `test -f 'm_syswrap/syswrap-amd64-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-amd64-linux.c

libcoregrind_x86_freebsd_a-syswrap-amd64-linux.obj: m_syswrap/syswrap-amd64-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-amd64-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-amd64-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-amd64-linux.obj `if test -f 'm_syswrap/syswrap-amd64-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-amd64-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-amd64-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-amd64-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-amd64-linux.Po
#	source='m_syswrap/syswrap-amd64-linux.c' object='libcoregrind_x86_freebsd_a-syswrap-amd64-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-amd64-linux.obj `if test -f 'm_syswrap/syswrap-amd64-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-amd64-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-amd64-linux.c'; fi`

libcoregrind_x86_freebsd_a-syswrap-ppc32-linux.o: m_syswrap/syswrap-ppc32-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-ppc32-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-ppc32-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-ppc32-linux.o `test -f 'm_syswrap/syswrap-ppc32-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-ppc32-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-ppc32-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-ppc32-linux.Po
#	source='m_syswrap/syswrap-ppc32-linux.c' object='libcoregrind_x86_freebsd_a-syswrap-ppc32-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-ppc32-linux.o `test -f 'm_syswrap/syswrap-ppc32-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-ppc32-linux.c

libcoregrind_x86_freebsd_a-syswrap-ppc32-linux.obj: m_syswrap/syswrap-ppc32-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-ppc32-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-ppc32-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-ppc32-linux.obj `if test -f 'm_syswrap/syswrap-ppc32-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-ppc32-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-ppc32-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-ppc32-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-ppc32-linux.Po
#	source='m_syswrap/syswrap-ppc32-linux.c' object='libcoregrind_x86_freebsd_a-syswrap-ppc32-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-ppc32-linux.obj `if test -f 'm_syswrap/syswrap-ppc32-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-ppc32-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-ppc32-linux.c'; fi`

libcoregrind_x86_freebsd_a-syswrap-ppc64-linux.o: m_syswrap/syswrap-ppc64-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-ppc64-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-ppc64-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-ppc64-linux.o `test -f 'm_syswrap/syswrap-ppc64-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-ppc64-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-ppc64-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-ppc64-linux.Po
#	source='m_syswrap/syswrap-ppc64-linux.c' object='libcoregrind_x86_freebsd_a-syswrap-ppc64-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-ppc64-linux.o `test -f 'm_syswrap/syswrap-ppc64-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-ppc64-linux.c

libcoregrind_x86_freebsd_a-syswrap-ppc64-linux.obj: m_syswrap/syswrap-ppc64-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-ppc64-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-ppc64-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-ppc64-linux.obj `if test -f 'm_syswrap/syswrap-ppc64-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-ppc64-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-ppc64-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-ppc64-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-ppc64-linux.Po
#	source='m_syswrap/syswrap-ppc64-linux.c' object='libcoregrind_x86_freebsd_a-syswrap-ppc64-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-ppc64-linux.obj `if test -f 'm_syswrap/syswrap-ppc64-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-ppc64-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-ppc64-linux.c'; fi`

libcoregrind_x86_freebsd_a-syswrap-x86-freebsd.o: m_syswrap/syswrap-x86-freebsd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-x86-freebsd.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-x86-freebsd.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-x86-freebsd.o `test -f 'm_syswrap/syswrap-x86-freebsd.c' || echo '$(srcdir)/'`m_syswrap/syswrap-x86-freebsd.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-x86-freebsd.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-x86-freebsd.Po
#	source='m_syswrap/syswrap-x86-freebsd.c' object='libcoregrind_x86_freebsd_a-syswrap-x86-freebsd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-x86-freebsd.o `test -f 'm_syswrap/syswrap-x86-freebsd.c' || echo '$(srcdir)/'`m_syswrap/syswrap-x86-freebsd.c

libcoregrind_x86_freebsd_a-syswrap-x86-freebsd.obj: m_syswrap/syswrap-x86-freebsd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-x86-freebsd.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-x86-freebsd.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-x86-freebsd.obj `if test -f 'm_syswrap/syswrap-x86-freebsd.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-x86-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-x86-freebsd.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-x86-freebsd.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-x86-freebsd.Po
#	source='m_syswrap/syswrap-x86-freebsd.c' object='libcoregrind_x86_freebsd_a-syswrap-x86-freebsd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-x86-freebsd.obj `if test -f 'm_syswrap/syswrap-x86-freebsd.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-x86-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-x86-freebsd.c'; fi`

libcoregrind_x86_freebsd_a-syswrap-amd64-freebsd.o: m_syswrap/syswrap-amd64-freebsd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-amd64-freebsd.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-amd64-freebsd.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-amd64-freebsd.o `test -f 'm_syswrap/syswrap-amd64-freebsd.c' || echo '$(srcdir)/'`m_syswrap/syswrap-amd64-freebsd.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-amd64-freebsd.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-amd64-freebsd.Po
#	source='m_syswrap/syswrap-amd64-freebsd.c' object='libcoregrind_x86_freebsd_a-syswrap-amd64-freebsd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-amd64-freebsd.o `test -f 'm_syswrap/syswrap-amd64-freebsd.c' || echo '$(srcdir)/'`m_syswrap/syswrap-amd64-freebsd.c

libcoregrind_x86_freebsd_a-syswrap-amd64-freebsd.obj: m_syswrap/syswrap-amd64-freebsd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-amd64-freebsd.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-amd64-freebsd.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-amd64-freebsd.obj `if test -f 'm_syswrap/syswrap-amd64-freebsd.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-amd64-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-amd64-freebsd.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-amd64-freebsd.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-amd64-freebsd.Po
#	source='m_syswrap/syswrap-amd64-freebsd.c' object='libcoregrind_x86_freebsd_a-syswrap-amd64-freebsd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-amd64-freebsd.obj `if test -f 'm_syswrap/syswrap-amd64-freebsd.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-amd64-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-amd64-freebsd.c'; fi`

libcoregrind_x86_freebsd_a-syswrap-arm-linux.o: m_syswrap/syswrap-arm-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-arm-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-arm-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-arm-linux.o `test -f 'm_syswrap/syswrap-arm-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-arm-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-arm-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-arm-linux.Po
#	source='m_syswrap/syswrap-arm-linux.c' object='libcoregrind_x86_freebsd_a-syswrap-arm-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-arm-linux.o `test -f 'm_syswrap/syswrap-arm-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-arm-linux.c

libcoregrind_x86_freebsd_a-syswrap-arm-linux.obj: m_syswrap/syswrap-arm-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-arm-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-arm-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-arm-linux.obj `if test -f 'm_syswrap/syswrap-arm-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-arm-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-arm-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-arm-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-arm-linux.Po
#	source='m_syswrap/syswrap-arm-linux.c' object='libcoregrind_x86_freebsd_a-syswrap-arm-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-arm-linux.obj `if test -f 'm_syswrap/syswrap-arm-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-arm-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-arm-linux.c'; fi`

libcoregrind_x86_freebsd_a-syswrap-s390x-linux.o: m_syswrap/syswrap-s390x-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-s390x-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-s390x-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-s390x-linux.o `test -f 'm_syswrap/syswrap-s390x-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-s390x-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-s390x-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-s390x-linux.Po
#	source='m_syswrap/syswrap-s390x-linux.c' object='libcoregrind_x86_freebsd_a-syswrap-s390x-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-s390x-linux.o `test -f 'm_syswrap/syswrap-s390x-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-s390x-linux.c

libcoregrind_x86_freebsd_a-syswrap-s390x-linux.obj: m_syswrap/syswrap-s390x-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-s390x-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-s390x-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-s390x-linux.obj `if test -f 'm_syswrap/syswrap-s390x-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-s390x-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-s390x-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-s390x-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-s390x-linux.Po
#	source='m_syswrap/syswrap-s390x-linux.c' object='libcoregrind_x86_freebsd_a-syswrap-s390x-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-s390x-linux.obj `if test -f 'm_syswrap/syswrap-s390x-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-s390x-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-s390x-linux.c'; fi`

libcoregrind_x86_freebsd_a-syswrap-mips32-linux.o: m_syswrap/syswrap-mips32-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-mips32-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-mips32-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-mips32-linux.o `test -f 'm_syswrap/syswrap-mips32-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-mips32-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-mips32-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-mips32-linux.Po
#	source='m_syswrap/syswrap-mips32-linux.c' object='libcoregrind_x86_freebsd_a-syswrap-mips32-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-mips32-linux.o `test -f 'm_syswrap/syswrap-mips32-linux.c' || echo '$(srcdir)/'`m_syswrap/syswrap-mips32-linux.c

libcoregrind_x86_freebsd_a-syswrap-mips32-linux.obj: m_syswrap/syswrap-mips32-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-mips32-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-mips32-linux.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-mips32-linux.obj `if test -f 'm_syswrap/syswrap-mips32-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-mips32-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-mips32-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-mips32-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-mips32-linux.Po
#	source='m_syswrap/syswrap-mips32-linux.c' object='libcoregrind_x86_freebsd_a-syswrap-mips32-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-mips32-linux.obj `if test -f 'm_syswrap/syswrap-mips32-linux.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-mips32-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-mips32-linux.c'; fi`

libcoregrind_x86_freebsd_a-syswrap-x86-darwin.o: m_syswrap/syswrap-x86-darwin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-x86-darwin.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-x86-darwin.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-x86-darwin.o `test -f 'm_syswrap/syswrap-x86-darwin.c' || echo '$(srcdir)/'`m_syswrap/syswrap-x86-darwin.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-x86-darwin.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-x86-darwin.Po
#	source='m_syswrap/syswrap-x86-darwin.c' object='libcoregrind_x86_freebsd_a-syswrap-x86-darwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-x86-darwin.o `test -f 'm_syswrap/syswrap-x86-darwin.c' || echo '$(srcdir)/'`m_syswrap/syswrap-x86-darwin.c

libcoregrind_x86_freebsd_a-syswrap-x86-darwin.obj: m_syswrap/syswrap-x86-darwin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-x86-darwin.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-x86-darwin.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-x86-darwin.obj `if test -f 'm_syswrap/syswrap-x86-darwin.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-x86-darwin.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-x86-darwin.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-x86-darwin.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-x86-darwin.Po
#	source='m_syswrap/syswrap-x86-darwin.c' object='libcoregrind_x86_freebsd_a-syswrap-x86-darwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-x86-darwin.obj `if test -f 'm_syswrap/syswrap-x86-darwin.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-x86-darwin.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-x86-darwin.c'; fi`

libcoregrind_x86_freebsd_a-syswrap-amd64-darwin.o: m_syswrap/syswrap-amd64-darwin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-amd64-darwin.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-amd64-darwin.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-amd64-darwin.o `test -f 'm_syswrap/syswrap-amd64-darwin.c' || echo '$(srcdir)/'`m_syswrap/syswrap-amd64-darwin.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-amd64-darwin.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-amd64-darwin.Po
#	source='m_syswrap/syswrap-amd64-darwin.c' object='libcoregrind_x86_freebsd_a-syswrap-amd64-darwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-amd64-darwin.o `test -f 'm_syswrap/syswrap-amd64-darwin.c' || echo '$(srcdir)/'`m_syswrap/syswrap-amd64-darwin.c

libcoregrind_x86_freebsd_a-syswrap-amd64-darwin.obj: m_syswrap/syswrap-amd64-darwin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-syswrap-amd64-darwin.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-amd64-darwin.Tpo -c -o libcoregrind_x86_freebsd_a-syswrap-amd64-darwin.obj `if test -f 'm_syswrap/syswrap-amd64-darwin.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-amd64-darwin.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-amd64-darwin.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-amd64-darwin.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-syswrap-amd64-darwin.Po
#	source='m_syswrap/syswrap-amd64-darwin.c' object='libcoregrind_x86_freebsd_a-syswrap-amd64-darwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-syswrap-amd64-darwin.obj `if test -f 'm_syswrap/syswrap-amd64-darwin.c'; then $(CYGPATH_W) 'm_syswrap/syswrap-amd64-darwin.c'; else $(CYGPATH_W) '$(srcdir)/m_syswrap/syswrap-amd64-darwin.c'; fi`

libcoregrind_x86_freebsd_a-elf.o: m_ume/elf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-elf.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-elf.Tpo -c -o libcoregrind_x86_freebsd_a-elf.o `test -f 'm_ume/elf.c' || echo '$(srcdir)/'`m_ume/elf.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-elf.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-elf.Po
#	source='m_ume/elf.c' object='libcoregrind_x86_freebsd_a-elf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-elf.o `test -f 'm_ume/elf.c' || echo '$(srcdir)/'`m_ume/elf.c

libcoregrind_x86_freebsd_a-elf.obj: m_ume/elf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-elf.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-elf.Tpo -c -o libcoregrind_x86_freebsd_a-elf.obj `if test -f 'm_ume/elf.c'; then $(CYGPATH_W) 'm_ume/elf.c'; else $(CYGPATH_W) '$(srcdir)/m_ume/elf.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-elf.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-elf.Po
#	source='m_ume/elf.c' object='libcoregrind_x86_freebsd_a-elf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-elf.obj `if test -f 'm_ume/elf.c'; then $(CYGPATH_W) 'm_ume/elf.c'; else $(CYGPATH_W) '$(srcdir)/m_ume/elf.c'; fi`

libcoregrind_x86_freebsd_a-macho.o: m_ume/macho.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-macho.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-macho.Tpo -c -o libcoregrind_x86_freebsd_a-macho.o `test -f 'm_ume/macho.c' || echo '$(srcdir)/'`m_ume/macho.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-macho.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-macho.Po
#	source='m_ume/macho.c' object='libcoregrind_x86_freebsd_a-macho.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-macho.o `test -f 'm_ume/macho.c' || echo '$(srcdir)/'`m_ume/macho.c

libcoregrind_x86_freebsd_a-macho.obj: m_ume/macho.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-macho.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-macho.Tpo -c -o libcoregrind_x86_freebsd_a-macho.obj `if test -f 'm_ume/macho.c'; then $(CYGPATH_W) 'm_ume/macho.c'; else $(CYGPATH_W) '$(srcdir)/m_ume/macho.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-macho.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-macho.Po
#	source='m_ume/macho.c' object='libcoregrind_x86_freebsd_a-macho.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-macho.obj `if test -f 'm_ume/macho.c'; then $(CYGPATH_W) 'm_ume/macho.c'; else $(CYGPATH_W) '$(srcdir)/m_ume/macho.c'; fi`

libcoregrind_x86_freebsd_a-main.o: m_ume/main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-main.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-main.Tpo -c -o libcoregrind_x86_freebsd_a-main.o `test -f 'm_ume/main.c' || echo '$(srcdir)/'`m_ume/main.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-main.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-main.Po
#	source='m_ume/main.c' object='libcoregrind_x86_freebsd_a-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-main.o `test -f 'm_ume/main.c' || echo '$(srcdir)/'`m_ume/main.c

libcoregrind_x86_freebsd_a-main.obj: m_ume/main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-main.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-main.Tpo -c -o libcoregrind_x86_freebsd_a-main.obj `if test -f 'm_ume/main.c'; then $(CYGPATH_W) 'm_ume/main.c'; else $(CYGPATH_W) '$(srcdir)/m_ume/main.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-main.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-main.Po
#	source='m_ume/main.c' object='libcoregrind_x86_freebsd_a-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-main.obj `if test -f 'm_ume/main.c'; then $(CYGPATH_W) 'm_ume/main.c'; else $(CYGPATH_W) '$(srcdir)/m_ume/main.c'; fi`

libcoregrind_x86_freebsd_a-script.o: m_ume/script.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-script.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-script.Tpo -c -o libcoregrind_x86_freebsd_a-script.o `test -f 'm_ume/script.c' || echo '$(srcdir)/'`m_ume/script.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-script.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-script.Po
#	source='m_ume/script.c' object='libcoregrind_x86_freebsd_a-script.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-script.o `test -f 'm_ume/script.c' || echo '$(srcdir)/'`m_ume/script.c

libcoregrind_x86_freebsd_a-script.obj: m_ume/script.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-script.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-script.Tpo -c -o libcoregrind_x86_freebsd_a-script.obj `if test -f 'm_ume/script.c'; then $(CYGPATH_W) 'm_ume/script.c'; else $(CYGPATH_W) '$(srcdir)/m_ume/script.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-script.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-script.Po
#	source='m_ume/script.c' object='libcoregrind_x86_freebsd_a-script.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-script.obj `if test -f 'm_ume/script.c'; then $(CYGPATH_W) 'm_ume/script.c'; else $(CYGPATH_W) '$(srcdir)/m_ume/script.c'; fi`

libcoregrind_x86_freebsd_a-ticket-lock-linux.o: m_scheduler/ticket-lock-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-ticket-lock-linux.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-ticket-lock-linux.Tpo -c -o libcoregrind_x86_freebsd_a-ticket-lock-linux.o `test -f 'm_scheduler/ticket-lock-linux.c' || echo '$(srcdir)/'`m_scheduler/ticket-lock-linux.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-ticket-lock-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-ticket-lock-linux.Po
#	source='m_scheduler/ticket-lock-linux.c' object='libcoregrind_x86_freebsd_a-ticket-lock-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-ticket-lock-linux.o `test -f 'm_scheduler/ticket-lock-linux.c' || echo '$(srcdir)/'`m_scheduler/ticket-lock-linux.c

libcoregrind_x86_freebsd_a-ticket-lock-linux.obj: m_scheduler/ticket-lock-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-ticket-lock-linux.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-ticket-lock-linux.Tpo -c -o libcoregrind_x86_freebsd_a-ticket-lock-linux.obj `if test -f 'm_scheduler/ticket-lock-linux.c'; then $(CYGPATH_W) 'm_scheduler/ticket-lock-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_scheduler/ticket-lock-linux.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-ticket-lock-linux.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-ticket-lock-linux.Po
#	source='m_scheduler/ticket-lock-linux.c' object='libcoregrind_x86_freebsd_a-ticket-lock-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-ticket-lock-linux.obj `if test -f 'm_scheduler/ticket-lock-linux.c'; then $(CYGPATH_W) 'm_scheduler/ticket-lock-linux.c'; else $(CYGPATH_W) '$(srcdir)/m_scheduler/ticket-lock-linux.c'; fi`

libcoregrind_x86_freebsd_a-mach_vmUser.o: m_mach/mach_vmUser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-mach_vmUser.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_vmUser.Tpo -c -o libcoregrind_x86_freebsd_a-mach_vmUser.o `test -f 'm_mach/mach_vmUser.c' || echo '$(srcdir)/'`m_mach/mach_vmUser.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_vmUser.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_vmUser.Po
#	source='m_mach/mach_vmUser.c' object='libcoregrind_x86_freebsd_a-mach_vmUser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-mach_vmUser.o `test -f 'm_mach/mach_vmUser.c' || echo '$(srcdir)/'`m_mach/mach_vmUser.c

libcoregrind_x86_freebsd_a-mach_vmUser.obj: m_mach/mach_vmUser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-mach_vmUser.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_vmUser.Tpo -c -o libcoregrind_x86_freebsd_a-mach_vmUser.obj `if test -f 'm_mach/mach_vmUser.c'; then $(CYGPATH_W) 'm_mach/mach_vmUser.c'; else $(CYGPATH_W) '$(srcdir)/m_mach/mach_vmUser.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_vmUser.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-mach_vmUser.Po
#	source='m_mach/mach_vmUser.c' object='libcoregrind_x86_freebsd_a-mach_vmUser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-mach_vmUser.obj `if test -f 'm_mach/mach_vmUser.c'; then $(CYGPATH_W) 'm_mach/mach_vmUser.c'; else $(CYGPATH_W) '$(srcdir)/m_mach/mach_vmUser.c'; fi`

libcoregrind_x86_freebsd_a-taskUser.o: m_mach/taskUser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-taskUser.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-taskUser.Tpo -c -o libcoregrind_x86_freebsd_a-taskUser.o `test -f 'm_mach/taskUser.c' || echo '$(srcdir)/'`m_mach/taskUser.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-taskUser.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-taskUser.Po
#	source='m_mach/taskUser.c' object='libcoregrind_x86_freebsd_a-taskUser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-taskUser.o `test -f 'm_mach/taskUser.c' || echo '$(srcdir)/'`m_mach/taskUser.c

libcoregrind_x86_freebsd_a-taskUser.obj: m_mach/taskUser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-taskUser.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-taskUser.Tpo -c -o libcoregrind_x86_freebsd_a-taskUser.obj `if test -f 'm_mach/taskUser.c'; then $(CYGPATH_W) 'm_mach/taskUser.c'; else $(CYGPATH_W) '$(srcdir)/m_mach/taskUser.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-taskUser.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-taskUser.Po
#	source='m_mach/taskUser.c' object='libcoregrind_x86_freebsd_a-taskUser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-taskUser.obj `if test -f 'm_mach/taskUser.c'; then $(CYGPATH_W) 'm_mach/taskUser.c'; else $(CYGPATH_W) '$(srcdir)/m_mach/taskUser.c'; fi`

libcoregrind_x86_freebsd_a-thread_actUser.o: m_mach/thread_actUser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-thread_actUser.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-thread_actUser.Tpo -c -o libcoregrind_x86_freebsd_a-thread_actUser.o `test -f 'm_mach/thread_actUser.c' || echo '$(srcdir)/'`m_mach/thread_actUser.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-thread_actUser.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-thread_actUser.Po
#	source='m_mach/thread_actUser.c' object='libcoregrind_x86_freebsd_a-thread_actUser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-thread_actUser.o `test -f 'm_mach/thread_actUser.c' || echo '$(srcdir)/'`m_mach/thread_actUser.c

libcoregrind_x86_freebsd_a-thread_actUser.obj: m_mach/thread_actUser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-thread_actUser.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-thread_actUser.Tpo -c -o libcoregrind_x86_freebsd_a-thread_actUser.obj `if test -f 'm_mach/thread_actUser.c'; then $(CYGPATH_W) 'm_mach/thread_actUser.c'; else $(CYGPATH_W) '$(srcdir)/m_mach/thread_actUser.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-thread_actUser.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-thread_actUser.Po
#	source='m_mach/thread_actUser.c' object='libcoregrind_x86_freebsd_a-thread_actUser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-thread_actUser.obj `if test -f 'm_mach/thread_actUser.c'; then $(CYGPATH_W) 'm_mach/thread_actUser.c'; else $(CYGPATH_W) '$(srcdir)/m_mach/thread_actUser.c'; fi`

libcoregrind_x86_freebsd_a-vm_mapUser.o: m_mach/vm_mapUser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-vm_mapUser.o -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-vm_mapUser.Tpo -c -o libcoregrind_x86_freebsd_a-vm_mapUser.o `test -f 'm_mach/vm_mapUser.c' || echo '$(srcdir)/'`m_mach/vm_mapUser.c
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-vm_mapUser.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-vm_mapUser.Po
#	source='m_mach/vm_mapUser.c' object='libcoregrind_x86_freebsd_a-vm_mapUser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-vm_mapUser.o `test -f 'm_mach/vm_mapUser.c' || echo '$(srcdir)/'`m_mach/vm_mapUser.c

libcoregrind_x86_freebsd_a-vm_mapUser.obj: m_mach/vm_mapUser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libcoregrind_x86_freebsd_a-vm_mapUser.obj -MD -MP -MF $(DEPDIR)/libcoregrind_x86_freebsd_a-vm_mapUser.Tpo -c -o libcoregrind_x86_freebsd_a-vm_mapUser.obj `if test -f 'm_mach/vm_mapUser.c'; then $(CYGPATH_W) 'm_mach/vm_mapUser.c'; else $(CYGPATH_W) '$(srcdir)/m_mach/vm_mapUser.c'; fi`
	$(am__mv) $(DEPDIR)/libcoregrind_x86_freebsd_a-vm_mapUser.Tpo $(DEPDIR)/libcoregrind_x86_freebsd_a-vm_mapUser.Po
#	source='m_mach/vm_mapUser.c' object='libcoregrind_x86_freebsd_a-vm_mapUser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcoregrind_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libcoregrind_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libcoregrind_x86_freebsd_a-vm_mapUser.obj `if test -f 'm_mach/vm_mapUser.c'; then $(CYGPATH_W) 'm_mach/vm_mapUser.c'; else $(CYGPATH_W) '$(srcdir)/m_mach/vm_mapUser.c'; fi`

libreplacemalloc_toolpreload_amd64_freebsd_a-vg_replace_malloc.o: m_replacemalloc/vg_replace_malloc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libreplacemalloc_toolpreload_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libreplacemalloc_toolpreload_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libreplacemalloc_toolpreload_amd64_freebsd_a-vg_replace_malloc.o -MD -MP -MF $(DEPDIR)/libreplacemalloc_toolpreload_amd64_freebsd_a-vg_replace_malloc.Tpo -c -o libreplacemalloc_toolpreload_amd64_freebsd_a-vg_replace_malloc.o `test -f 'm_replacemalloc/vg_replace_malloc.c' || echo '$(srcdir)/'`m_replacemalloc/vg_replace_malloc.c
	$(am__mv) $(DEPDIR)/libreplacemalloc_toolpreload_amd64_freebsd_a-vg_replace_malloc.Tpo $(DEPDIR)/libreplacemalloc_toolpreload_amd64_freebsd_a-vg_replace_malloc.Po
#	source='m_replacemalloc/vg_replace_malloc.c' object='libreplacemalloc_toolpreload_amd64_freebsd_a-vg_replace_malloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libreplacemalloc_toolpreload_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libreplacemalloc_toolpreload_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libreplacemalloc_toolpreload_amd64_freebsd_a-vg_replace_malloc.o `test -f 'm_replacemalloc/vg_replace_malloc.c' || echo '$(srcdir)/'`m_replacemalloc/vg_replace_malloc.c

libreplacemalloc_toolpreload_amd64_freebsd_a-vg_replace_malloc.obj: m_replacemalloc/vg_replace_malloc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libreplacemalloc_toolpreload_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libreplacemalloc_toolpreload_amd64_freebsd_a_CFLAGS) $(CFLAGS) -MT libreplacemalloc_toolpreload_amd64_freebsd_a-vg_replace_malloc.obj -MD -MP -MF $(DEPDIR)/libreplacemalloc_toolpreload_amd64_freebsd_a-vg_replace_malloc.Tpo -c -o libreplacemalloc_toolpreload_amd64_freebsd_a-vg_replace_malloc.obj `if test -f 'm_replacemalloc/vg_replace_malloc.c'; then $(CYGPATH_W) 'm_replacemalloc/vg_replace_malloc.c'; else $(CYGPATH_W) '$(srcdir)/m_replacemalloc/vg_replace_malloc.c'; fi`
	$(am__mv) $(DEPDIR)/libreplacemalloc_toolpreload_amd64_freebsd_a-vg_replace_malloc.Tpo $(DEPDIR)/libreplacemalloc_toolpreload_amd64_freebsd_a-vg_replace_malloc.Po
#	source='m_replacemalloc/vg_replace_malloc.c' object='libreplacemalloc_toolpreload_amd64_freebsd_a-vg_replace_malloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libreplacemalloc_toolpreload_amd64_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libreplacemalloc_toolpreload_amd64_freebsd_a_CFLAGS) $(CFLAGS) -c -o libreplacemalloc_toolpreload_amd64_freebsd_a-vg_replace_malloc.obj `if test -f 'm_replacemalloc/vg_replace_malloc.c'; then $(CYGPATH_W) 'm_replacemalloc/vg_replace_malloc.c'; else $(CYGPATH_W) '$(srcdir)/m_replacemalloc/vg_replace_malloc.c'; fi`

libreplacemalloc_toolpreload_x86_freebsd_a-vg_replace_malloc.o: m_replacemalloc/vg_replace_malloc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libreplacemalloc_toolpreload_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libreplacemalloc_toolpreload_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libreplacemalloc_toolpreload_x86_freebsd_a-vg_replace_malloc.o -MD -MP -MF $(DEPDIR)/libreplacemalloc_toolpreload_x86_freebsd_a-vg_replace_malloc.Tpo -c -o libreplacemalloc_toolpreload_x86_freebsd_a-vg_replace_malloc.o `test -f 'm_replacemalloc/vg_replace_malloc.c' || echo '$(srcdir)/'`m_replacemalloc/vg_replace_malloc.c
	$(am__mv) $(DEPDIR)/libreplacemalloc_toolpreload_x86_freebsd_a-vg_replace_malloc.Tpo $(DEPDIR)/libreplacemalloc_toolpreload_x86_freebsd_a-vg_replace_malloc.Po
#	source='m_replacemalloc/vg_replace_malloc.c' object='libreplacemalloc_toolpreload_x86_freebsd_a-vg_replace_malloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libreplacemalloc_toolpreload_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libreplacemalloc_toolpreload_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libreplacemalloc_toolpreload_x86_freebsd_a-vg_replace_malloc.o `test -f 'm_replacemalloc/vg_replace_malloc.c' || echo '$(srcdir)/'`m_replacemalloc/vg_replace_malloc.c

libreplacemalloc_toolpreload_x86_freebsd_a-vg_replace_malloc.obj: m_replacemalloc/vg_replace_malloc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libreplacemalloc_toolpreload_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libreplacemalloc_toolpreload_x86_freebsd_a_CFLAGS) $(CFLAGS) -MT libreplacemalloc_toolpreload_x86_freebsd_a-vg_replace_malloc.obj -MD -MP -MF $(DEPDIR)/libreplacemalloc_toolpreload_x86_freebsd_a-vg_replace_malloc.Tpo -c -o libreplacemalloc_toolpreload_x86_freebsd_a-vg_replace_malloc.obj `if test -f 'm_replacemalloc/vg_replace_malloc.c'; then $(CYGPATH_W) 'm_replacemalloc/vg_replace_malloc.c'; else $(CYGPATH_W) '$(srcdir)/m_replacemalloc/vg_replace_malloc.c'; fi`
	$(am__mv) $(DEPDIR)/libreplacemalloc_toolpreload_x86_freebsd_a-vg_replace_malloc.Tpo $(DEPDIR)/libreplacemalloc_toolpreload_x86_freebsd_a-vg_replace_malloc.Po
#	source='m_replacemalloc/vg_replace_malloc.c' object='libreplacemalloc_toolpreload_x86_freebsd_a-vg_replace_malloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libreplacemalloc_toolpreload_x86_freebsd_a_CPPFLAGS) $(CPPFLAGS) $(libreplacemalloc_toolpreload_x86_freebsd_a_CFLAGS) $(CFLAGS) -c -o libreplacemalloc_toolpreload_x86_freebsd_a-vg_replace_malloc.obj `if test -f 'm_replacemalloc/vg_replace_malloc.c'; then $(CYGPATH_W) 'm_replacemalloc/vg_replace_malloc.c'; else $(CYGPATH_W) '$(srcdir)/m_replacemalloc/vg_replace_malloc.c'; fi`

valgrind-launcher-darwin.o: launcher-darwin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(valgrind_CPPFLAGS) $(CPPFLAGS) $(valgrind_CFLAGS) $(CFLAGS) -MT valgrind-launcher-darwin.o -MD -MP -MF $(DEPDIR)/valgrind-launcher-darwin.Tpo -c -o valgrind-launcher-darwin.o `test -f 'launcher-darwin.c' || echo '$(srcdir)/'`launcher-darwin.c
	$(am__mv) $(DEPDIR)/valgrind-launcher-darwin.Tpo $(DEPDIR)/valgrind-launcher-darwin.Po
#	source='launcher-darwin.c' object='valgrind-launcher-darwin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(valgrind_CPPFLAGS) $(CPPFLAGS) $(valgrind_CFLAGS) $(CFLAGS) -c -o valgrind-launcher-darwin.o `test -f 'launcher-darwin.c' || echo '$(srcdir)/'`launcher-darwin.c

valgrind-launcher-darwin.obj: launcher-darwin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(valgrind_CPPFLAGS) $(CPPFLAGS) $(valgrind_CFLAGS) $(CFLAGS) -MT valgrind-launcher-darwin.obj -MD -MP -MF $(DEPDIR)/valgrind-launcher-darwin.Tpo -c -o valgrind-launcher-darwin.obj `if test -f 'launcher-darwin.c'; then $(CYGPATH_W) 'launcher-darwin.c'; else $(CYGPATH_W) '$(srcdir)/launcher-darwin.c'; fi`
	$(am__mv) $(DEPDIR)/valgrind-launcher-darwin.Tpo $(DEPDIR)/valgrind-launcher-darwin.Po
#	source='launcher-darwin.c' object='valgrind-launcher-darwin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(valgrind_CPPFLAGS) $(CPPFLAGS) $(valgrind_CFLAGS) $(CFLAGS) -c -o valgrind-launcher-darwin.obj `if test -f 'launcher-darwin.c'; then $(CYGPATH_W) 'launcher-darwin.c'; else $(CYGPATH_W) '$(srcdir)/launcher-darwin.c'; fi`

valgrind-m_debuglog.o: m_debuglog.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(valgrind_CPPFLAGS) $(CPPFLAGS) $(valgrind_CFLAGS) $(CFLAGS) -MT valgrind-m_debuglog.o -MD -MP -MF $(DEPDIR)/valgrind-m_debuglog.Tpo -c -o valgrind-m_debuglog.o `test -f 'm_debuglog.c' || echo '$(srcdir)/'`m_debuglog.c
	$(am__mv) $(DEPDIR)/valgrind-m_debuglog.Tpo $(DEPDIR)/valgrind-m_debuglog.Po
#	source='m_debuglog.c' object='valgrind-m_debuglog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(valgrind_CPPFLAGS) $(CPPFLAGS) $(valgrind_CFLAGS) $(CFLAGS) -c -o valgrind-m_debuglog.o `test -f 'm_debuglog.c' || echo '$(srcdir)/'`m_debuglog.c

valgrind-m_debuglog.obj: m_debuglog.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(valgrind_CPPFLAGS) $(CPPFLAGS) $(valgrind_CFLAGS) $(CFLAGS) -MT valgrind-m_debuglog.obj -MD -MP -MF $(DEPDIR)/valgrind-m_debuglog.Tpo -c -o valgrind-m_debuglog.obj `if test -f 'm_debuglog.c'; then $(CYGPATH_W) 'm_debuglog.c'; else $(CYGPATH_W) '$(srcdir)/m_debuglog.c'; fi`
	$(am__mv) $(DEPDIR)/valgrind-m_debuglog.Tpo $(DEPDIR)/valgrind-m_debuglog.Po
#	source='m_debuglog.c' object='valgrind-m_debuglog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(valgrind_CPPFLAGS) $(CPPFLAGS) $(valgrind_CFLAGS) $(CFLAGS) -c -o valgrind-m_debuglog.obj `if test -f 'm_debuglog.c'; then $(CYGPATH_W) 'm_debuglog.c'; else $(CYGPATH_W) '$(srcdir)/m_debuglog.c'; fi`

valgrind-launcher-freebsd.o: launcher-freebsd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(valgrind_CPPFLAGS) $(CPPFLAGS) $(valgrind_CFLAGS) $(CFLAGS) -MT valgrind-launcher-freebsd.o -MD -MP -MF $(DEPDIR)/valgrind-launcher-freebsd.Tpo -c -o valgrind-launcher-freebsd.o `test -f 'launcher-freebsd.c' || echo '$(srcdir)/'`launcher-freebsd.c
	$(am__mv) $(DEPDIR)/valgrind-launcher-freebsd.Tpo $(DEPDIR)/valgrind-launcher-freebsd.Po
#	source='launcher-freebsd.c' object='valgrind-launcher-freebsd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(valgrind_CPPFLAGS) $(CPPFLAGS) $(valgrind_CFLAGS) $(CFLAGS) -c -o valgrind-launcher-freebsd.o `test -f 'launcher-freebsd.c' || echo '$(srcdir)/'`launcher-freebsd.c

valgrind-launcher-freebsd.obj: launcher-freebsd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(valgrind_CPPFLAGS) $(CPPFLAGS) $(valgrind_CFLAGS) $(CFLAGS) -MT valgrind-launcher-freebsd.obj -MD -MP -MF $(DEPDIR)/valgrind-launcher-freebsd.Tpo -c -o valgrind-launcher-freebsd.obj `if test -f 'launcher-freebsd.c'; then $(CYGPATH_W) 'launcher-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/launcher-freebsd.c'; fi`
	$(am__mv) $(DEPDIR)/valgrind-launcher-freebsd.Tpo $(DEPDIR)/valgrind-launcher-freebsd.Po
#	source='launcher-freebsd.c' object='valgrind-launcher-freebsd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(valgrind_CPPFLAGS) $(CPPFLAGS) $(valgrind_CFLAGS) $(CFLAGS) -c -o valgrind-launcher-freebsd.obj `if test -f 'launcher-freebsd.c'; then $(CYGPATH_W) 'launcher-freebsd.c'; else $(CYGPATH_W) '$(srcdir)/launcher-freebsd.c'; fi`

valgrind-launcher-linux.o: launcher-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(valgrind_CPPFLAGS) $(CPPFLAGS) $(valgrind_CFLAGS) $(CFLAGS) -MT valgrind-launcher-linux.o -MD -MP -MF $(DEPDIR)/valgrind-launcher-linux.Tpo -c -o valgrind-launcher-linux.o `test -f 'launcher-linux.c' || echo '$(srcdir)/'`launcher-linux.c
	$(am__mv) $(DEPDIR)/valgrind-launcher-linux.Tpo $(DEPDIR)/valgrind-launcher-linux.Po
#	source='launcher-linux.c' object='valgrind-launcher-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(valgrind_CPPFLAGS) $(CPPFLAGS) $(valgrind_CFLAGS) $(CFLAGS) -c -o valgrind-launcher-linux.o `test -f 'launcher-linux.c' || echo '$(srcdir)/'`launcher-linux.c

valgrind-launcher-linux.obj: launcher-linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(valgrind_CPPFLAGS) $(CPPFLAGS) $(valgrind_CFLAGS) $(CFLAGS) -MT valgrind-launcher-linux.obj -MD -MP -MF $(DEPDIR)/valgrind-launcher-linux.Tpo -c -o valgrind-launcher-linux.obj `if test -f 'launcher-linux.c'; then $(CYGPATH_W) 'launcher-linux.c'; else $(CYGPATH_W) '$(srcdir)/launcher-linux.c'; fi`
	$(am__mv) $(DEPDIR)/valgrind-launcher-linux.Tpo $(DEPDIR)/valgrind-launcher-linux.Po
#	source='launcher-linux.c' object='valgrind-launcher-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(valgrind_CPPFLAGS) $(CPPFLAGS) $(valgrind_CFLAGS) $(CFLAGS) -c -o valgrind-launcher-linux.obj `if test -f 'launcher-linux.c'; then $(CYGPATH_W) 'launcher-linux.c'; else $(CYGPATH_W) '$(srcdir)/launcher-linux.c'; fi`

vgdb-vgdb.o: vgdb.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgdb_CPPFLAGS) $(CPPFLAGS) $(vgdb_CFLAGS) $(CFLAGS) -MT vgdb-vgdb.o -MD -MP -MF $(DEPDIR)/vgdb-vgdb.Tpo -c -o vgdb-vgdb.o `test -f 'vgdb.c' || echo '$(srcdir)/'`vgdb.c
	$(am__mv) $(DEPDIR)/vgdb-vgdb.Tpo $(DEPDIR)/vgdb-vgdb.Po
#	source='vgdb.c' object='vgdb-vgdb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgdb_CPPFLAGS) $(CPPFLAGS) $(vgdb_CFLAGS) $(CFLAGS) -c -o vgdb-vgdb.o `test -f 'vgdb.c' || echo '$(srcdir)/'`vgdb.c

vgdb-vgdb.obj: vgdb.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgdb_CPPFLAGS) $(CPPFLAGS) $(vgdb_CFLAGS) $(CFLAGS) -MT vgdb-vgdb.obj -MD -MP -MF $(DEPDIR)/vgdb-vgdb.Tpo -c -o vgdb-vgdb.obj `if test -f 'vgdb.c'; then $(CYGPATH_W) 'vgdb.c'; else $(CYGPATH_W) '$(srcdir)/vgdb.c'; fi`
	$(am__mv) $(DEPDIR)/vgdb-vgdb.Tpo $(DEPDIR)/vgdb-vgdb.Po
#	source='vgdb.c' object='vgdb-vgdb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgdb_CPPFLAGS) $(CPPFLAGS) $(vgdb_CFLAGS) $(CFLAGS) -c -o vgdb-vgdb.obj `if test -f 'vgdb.c'; then $(CYGPATH_W) 'vgdb.c'; else $(CYGPATH_W) '$(srcdir)/vgdb.c'; fi`

vgpreload_core_amd64_freebsd_so-vg_preloaded.o: vg_preloaded.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_core_amd64_freebsd_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_core_amd64_freebsd_so_CFLAGS) $(CFLAGS) -MT vgpreload_core_amd64_freebsd_so-vg_preloaded.o -MD -MP -MF $(DEPDIR)/vgpreload_core_amd64_freebsd_so-vg_preloaded.Tpo -c -o vgpreload_core_amd64_freebsd_so-vg_preloaded.o `test -f 'vg_preloaded.c' || echo '$(srcdir)/'`vg_preloaded.c
	$(am__mv) $(DEPDIR)/vgpreload_core_amd64_freebsd_so-vg_preloaded.Tpo $(DEPDIR)/vgpreload_core_amd64_freebsd_so-vg_preloaded.Po
#	source='vg_preloaded.c' object='vgpreload_core_amd64_freebsd_so-vg_preloaded.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_core_amd64_freebsd_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_core_amd64_freebsd_so_CFLAGS) $(CFLAGS) -c -o vgpreload_core_amd64_freebsd_so-vg_preloaded.o `test -f 'vg_preloaded.c' || echo '$(srcdir)/'`vg_preloaded.c

vgpreload_core_amd64_freebsd_so-vg_preloaded.obj: vg_preloaded.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_core_amd64_freebsd_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_core_amd64_freebsd_so_CFLAGS) $(CFLAGS) -MT vgpreload_core_amd64_freebsd_so-vg_preloaded.obj -MD -MP -MF $(DEPDIR)/vgpreload_core_amd64_freebsd_so-vg_preloaded.Tpo -c -o vgpreload_core_amd64_freebsd_so-vg_preloaded.obj `if test -f 'vg_preloaded.c'; then $(CYGPATH_W) 'vg_preloaded.c'; else $(CYGPATH_W) '$(srcdir)/vg_preloaded.c'; fi`
	$(am__mv) $(DEPDIR)/vgpreload_core_amd64_freebsd_so-vg_preloaded.Tpo $(DEPDIR)/vgpreload_core_amd64_freebsd_so-vg_preloaded.Po
#	source='vg_preloaded.c' object='vgpreload_core_amd64_freebsd_so-vg_preloaded.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_core_amd64_freebsd_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_core_amd64_freebsd_so_CFLAGS) $(CFLAGS) -c -o vgpreload_core_amd64_freebsd_so-vg_preloaded.obj `if test -f 'vg_preloaded.c'; then $(CYGPATH_W) 'vg_preloaded.c'; else $(CYGPATH_W) '$(srcdir)/vg_preloaded.c'; fi`

vgpreload_core_x86_freebsd_so-vg_preloaded.o: vg_preloaded.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_core_x86_freebsd_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_core_x86_freebsd_so_CFLAGS) $(CFLAGS) -MT vgpreload_core_x86_freebsd_so-vg_preloaded.o -MD -MP -MF $(DEPDIR)/vgpreload_core_x86_freebsd_so-vg_preloaded.Tpo -c -o vgpreload_core_x86_freebsd_so-vg_preloaded.o `test -f 'vg_preloaded.c' || echo '$(srcdir)/'`vg_preloaded.c
	$(am__mv) $(DEPDIR)/vgpreload_core_x86_freebsd_so-vg_preloaded.Tpo $(DEPDIR)/vgpreload_core_x86_freebsd_so-vg_preloaded.Po
#	source='vg_preloaded.c' object='vgpreload_core_x86_freebsd_so-vg_preloaded.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_core_x86_freebsd_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_core_x86_freebsd_so_CFLAGS) $(CFLAGS) -c -o vgpreload_core_x86_freebsd_so-vg_preloaded.o `test -f 'vg_preloaded.c' || echo '$(srcdir)/'`vg_preloaded.c

vgpreload_core_x86_freebsd_so-vg_preloaded.obj: vg_preloaded.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_core_x86_freebsd_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_core_x86_freebsd_so_CFLAGS) $(CFLAGS) -MT vgpreload_core_x86_freebsd_so-vg_preloaded.obj -MD -MP -MF $(DEPDIR)/vgpreload_core_x86_freebsd_so-vg_preloaded.Tpo -c -o vgpreload_core_x86_freebsd_so-vg_preloaded.obj `if test -f 'vg_preloaded.c'; then $(CYGPATH_W) 'vg_preloaded.c'; else $(CYGPATH_W) '$(srcdir)/vg_preloaded.c'; fi`
	$(am__mv) $(DEPDIR)/vgpreload_core_x86_freebsd_so-vg_preloaded.Tpo $(DEPDIR)/vgpreload_core_x86_freebsd_so-vg_preloaded.Po
#	source='vg_preloaded.c' object='vgpreload_core_x86_freebsd_so-vg_preloaded.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vgpreload_core_x86_freebsd_so_CPPFLAGS) $(CPPFLAGS) $(vgpreload_core_x86_freebsd_so_CFLAGS) $(CFLAGS) -c -o vgpreload_core_x86_freebsd_so-vg_preloaded.obj `if test -f 'vg_preloaded.c'; then $(CYGPATH_W) 'vg_preloaded.c'; else $(CYGPATH_W) '$(srcdir)/vg_preloaded.c'; fi`
install-vglibDATA: $(vglib_DATA)
	@$(NORMAL_INSTALL)
	@list='$(vglib_DATA)'; test -n "$(vglibdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(vglibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(vglibdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(vglibdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(vglibdir)" || exit $$?; \
	done

uninstall-vglibDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(vglib_DATA)'; test -n "$(vglibdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(vglibdir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

cscopelist:  $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS) $(LISP)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS) all-local
installdirs:
	for dir in "$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(vglibdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-local \
	clean-noinstPROGRAMS clean-pkglibLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-vglibDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-exec-local \
	install-pkglibLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-pkglibLIBRARIES \
	uninstall-vglibDATA

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS all all-am all-local check check-am clean \
	clean-binPROGRAMS clean-generic clean-local \
	clean-noinstPROGRAMS clean-pkglibLIBRARIES cscopelist ctags \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-exec-local install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-pkglibLIBRARIES install-ps install-ps-am install-strip \
	install-vglibDATA installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-pkglibLIBRARIES uninstall-vglibDATA


# This used to be required when Vex had a handwritten Makefile.  It
# shouldn't be needed any more, though.

#----------------------------------------------------------------------------
# noinst_PROGRAMS and noinst_DSYMS targets
#----------------------------------------------------------------------------

# On Darwin, for a program 'p', the DWARF debug info is stored in the
# directory 'p.dSYM'.  This must be generated after the executable is
# created, with 'dsymutil p'.  We could redefine LINK with a script that
# executes 'dsymutil' after linking, but that's a pain.  Instead we use this
# hook so that every time "make check" is run, we subsequently invoke
# 'dsymutil' on all the executables that lack a .dSYM directory, or that are
# newer than their corresponding .dSYM directory.
build-noinst_DSYMS: $(noinst_DSYMS)
	for f in $(noinst_DSYMS); do \
	  if [ ! -e $$f.dSYM  -o  $$f -nt $$f.dSYM ] ; then \
	      echo "dsymutil $$f"; \
	      dsymutil $$f; \
	  fi; \
	done

# This is used by coregrind/Makefile.am and Makefile.tool.am for doing
# "in-place" installs.  It copies $(noinst_PROGRAMS) into $inplacedir.
# It needs to be depended on by an 'all-local' rule.
inplace-noinst_PROGRAMS: $(noinst_PROGRAMS)
	mkdir -p $(inplacedir); \
	for f in $(noinst_PROGRAMS) ; do \
	  rm -f $(inplacedir)/$$f; \
	  ln -f -s ../$(subdir)/$$f $(inplacedir); \
	done

# Similar to inplace-noinst_PROGRAMS
inplace-noinst_DSYMS: build-noinst_DSYMS
	mkdir -p $(inplacedir); \
	for f in $(noinst_DSYMS); do \
	  rm -f $(inplacedir)/$$f.dSYM; \
	  ln -f -s ../$(subdir)/$$f.dSYM $(inplacedir); \
	done

# This is used by coregrind/Makefile.am and by <tool>/Makefile.am for doing
# "make install".  It copies $(noinst_PROGRAMS) into $prefix/lib/valgrind/.
# It needs to be depended on by an 'install-exec-local' rule.
install-noinst_PROGRAMS: $(noinst_PROGRAMS)
	$(mkinstalldirs) $(DESTDIR)$(pkglibdir); \
	for f in $(noinst_PROGRAMS); do \
	  $(INSTALL_PROGRAM) $$f $(DESTDIR)$(pkglibdir); \
	done

# Similar to install-noinst_PROGRAMS.
# Nb: we don't use $(INSTALL_PROGRAM) here because it doesn't work with
# directories.  XXX: not sure whether the resulting permissions will be
# correct when using 'cp -R'...
install-noinst_DSYMS: build-noinst_DSYMS
	$(mkinstalldirs) $(DESTDIR)$(pkglibdir); \
	for f in $(noinst_DSYMS); do \
	  cp -R $$f.dSYM $(DESTDIR)$(pkglibdir); \
	done

# This needs to be depended on by a 'clean-local' rule.
clean-noinst_DSYMS:
	for f in $(noinst_DSYMS); do \
	  rm -rf $$f.dSYM; \
	done

# Be careful w.r.t. parallel builds.  See section 27.9 of the automake info
# page, "Handling Tools that Produce many Outputs".
$(abs_builddir)/m_mach: 
	mkdir -p $@
$(mach_user_srcs): $(mach_defs) $(abs_builddir)/m_mach
	(cd m_mach && mig $(mach_defs))
$(mach_hdrs): $(mach_defs) $(mach_user_srcs) $(abs_builddir)/m_mach
	(cd m_mach && mig $(mach_defs))

#----------------------------------------------------------------------------
# General stuff
#----------------------------------------------------------------------------

all-local: inplace-noinst_PROGRAMS inplace-noinst_DSYMS
	mkdir -p $(inplacedir); \
	for f in $(vglib_DATA); do \
	  rm -f $(inplacedir)/$$f; \
	  ln -f -s ../$(subdir)/$$f $(inplacedir); \
	done

clean-local: clean-noinst_DSYMS

install-exec-local: install-noinst_PROGRAMS install-noinst_DSYMS
#fixup_macho_loadcmds: fixup_macho_loadcmds.c
#	$(CC) -g -Wall -o fixup_macho_loadcmds fixup_macho_loadcmds.c

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
